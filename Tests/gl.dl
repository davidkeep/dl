GL_DEPTH_BUFFER_BIT               u32 = 0x00000100
GL_STENCIL_BUFFER_BIT             u32 = 0x00000400
GL_COLOR_BUFFER_BIT               u32 = 0x00004000
GL_FALSE                          i8 = 0
GL_TRUE                           i8 = 1
GL_POINTS                         u32 = 0x0000
GL_LINES                          u32 = 0x0001
GL_LINE_LOOP                      u32 = 0x0002
GL_LINE_STRIP                     u32 = 0x0003
GL_TRIANGLES                      u32 = 0x0004
GL_TRIANGLE_STRIP                 u32 = 0x0005
GL_TRIANGLE_FAN                   u32 = 0x0006
GL_NEVER                          u32 = 0x0200
GL_LESS                           u32 = 0x0201
GL_EQUAL                          u32 = 0x0202
GL_LEQUAL                         u32 = 0x0203
GL_GREATER                        u32 = 0x0204
GL_NOTEQUAL                       u32 = 0x0205
GL_GEQUAL                         u32 = 0x0206
GL_ALWAYS                         u32 = 0x0207
GL_ZERO                           u32 = 0
GL_ONE                            u32 = 1
GL_SRC_COLOR                      u32 = 0x0300
GL_ONE_MINUS_SRC_COLOR            u32 = 0x0301
GL_SRC_ALPHA                      u32 = 0x0302
GL_ONE_MINUS_SRC_ALPHA            u32 = 0x0303
GL_DST_ALPHA                      u32 = 0x0304
GL_ONE_MINUS_DST_ALPHA            u32 = 0x0305
GL_DST_COLOR                      u32 = 0x0306
GL_ONE_MINUS_DST_COLOR            u32 = 0x0307
GL_SRC_ALPHA_SATURATE             u32 = 0x0308
GL_NONE                           u32 = 0
GL_FRONT_LEFT                     u32 = 0x0400
GL_FRONT_RIGHT                    u32 = 0x0401
GL_BACK_LEFT                      u32 = 0x0402
GL_BACK_RIGHT                     u32 = 0x0403
GL_FRONT                          u32 = 0x0404
GL_BACK                           u32 = 0x0405
GL_LEFT                           u32 = 0x0406
GL_RIGHT                          u32 = 0x0407
GL_FRONT_AND_BACK                 u32 = 0x0408
GL_NO_ERROR                       u32 = 0
GL_INVALID_ENUM                   u32 = 0x0500
GL_INVALID_VALUE                  u32 = 0x0501
GL_INVALID_OPERATION              u32 = 0x0502
GL_OUT_OF_MEMORY                  u32 = 0x0505
GL_CW                             u32 = 0x0900
GL_CCW                            u32 = 0x0901
GL_POINT_SIZE                     u32 = 0x0B11
GL_POINT_SIZE_RANGE               u32 = 0x0B12
GL_POINT_SIZE_GRANULARITY         u32 = 0x0B13
GL_LINE_SMOOTH                    u32 = 0x0B20
GL_LINE_WIDTH                     u32 = 0x0B21
GL_LINE_WIDTH_RANGE               u32 = 0x0B22
GL_LINE_WIDTH_GRANULARITY         u32 = 0x0B23
GL_POLYGON_MODE                   u32 = 0x0B40
GL_POLYGON_SMOOTH                 u32 = 0x0B41
GL_CULL_FACE                      u32 = 0x0B44
GL_CULL_FACE_MODE                 u32 = 0x0B45
GL_FRONT_FACE                     u32 = 0x0B46
GL_DEPTH_RANGE                    u32 = 0x0B70
GL_DEPTH_TEST                     u32 = 0x0B71
GL_DEPTH_WRITEMASK                u32 = 0x0B72
GL_DEPTH_CLEAR_VALUE              u32 = 0x0B73
GL_DEPTH_FN                   	  u32 = 0x0B74
GL_STENCIL_TEST                   u32 = 0x0B90
GL_STENCIL_CLEAR_VALUE            u32 = 0x0B91
GL_STENCIL_FN                     u32 = 0x0B92
GL_STENCIL_VALUE_MASK             u32 = 0x0B93
GL_STENCIL_FAIL                   u32 = 0x0B94
GL_STENCIL_PASS_DEPTH_FAIL        u32 = 0x0B95
GL_STENCIL_PASS_DEPTH_PASS        u32 = 0x0B96
GL_STENCIL_REF                    u32 = 0x0B97
GL_STENCIL_WRITEMASK              u32 = 0x0B98
GL_VIEWPORT                       u32 = 0x0BA2
GL_DITHER                         u32 = 0x0BD0
GL_BLEND_DST                      u32 = 0x0BE0
GL_BLEND_SRC                      u32 = 0x0BE1
GL_BLEND                          u32 = 0x0BE2
GL_LOGIC_OP_MODE                  u32 = 0x0BF0
GL_COLOR_LOGIC_OP                 u32 = 0x0BF2
GL_DRAW_BUFFER                    u32 = 0x0C01
GL_READ_BUFFER                    u32 = 0x0C02
GL_SCISSOR_BOX                    u32 = 0x0C10
GL_SCISSOR_TEST                   u32 = 0x0C11
GL_COLOR_CLEAR_VALUE              u32 = 0x0C22
GL_COLOR_WRITEMASK                u32 = 0x0C23
GL_DOUBLEBUFFER                   u32 = 0x0C32
GL_STEREO                         u32 = 0x0C33
GL_LINE_SMOOTH_HINT               u32 = 0x0C52
GL_POLYGON_SMOOTH_HINT            u32 = 0x0C53
GL_UNPACK_SWAP_BYTES              u32 = 0x0CF0
GL_UNPACK_LSB_FIRST               u32 = 0x0CF1
GL_UNPACK_ROW_LENGTH              u32 = 0x0CF2
GL_UNPACK_SKIP_ROWS               u32 = 0x0CF3
GL_UNPACK_SKIP_PIXELS             u32 = 0x0CF4
GL_UNPACK_ALIGNMENT               u32 = 0x0CF5
GL_PACK_SWAP_BYTES                u32 = 0x0D00
GL_PACK_LSB_FIRST                 u32 = 0x0D01
GL_PACK_ROW_LENGTH                u32 = 0x0D02
GL_PACK_SKIP_ROWS                 u32 = 0x0D03
GL_PACK_SKIP_PIXELS               u32 = 0x0D04
GL_PACK_ALIGNMENT                 u32 = 0x0D05
GL_MAX_TEXTURE_SIZE               u32 = 0x0D33
GL_MAX_VIEWPORT_DIMS              u32 = 0x0D3A
GL_SUBPIXEL_BITS                  u32 = 0x0D50
GL_TEXTURE_1D                     u32 = 0x0DE0
GL_TEXTURE_2D                     u32 = 0x0DE1
GL_POLYGON_OFFSET_UNITS           u32 = 0x2A00
GL_POLYGON_OFFSET_POINT           u32 = 0x2A01
GL_POLYGON_OFFSET_LINE            u32 = 0x2A02
GL_POLYGON_OFFSET_FILL            u32 = 0x8037
GL_POLYGON_OFFSET_FACTOR          u32 = 0x8038
GL_TEXTURE_BINDING_1D             u32 = 0x8068
GL_TEXTURE_BINDING_2D             u32 = 0x8069
GL_TEXTURE_WIDTH                  u32 = 0x1000
GL_TEXTURE_HEIGHT                 u32 = 0x1001
GL_TEXTURE_INTERNAL_FORMAT        u32 = 0x1003
GL_TEXTURE_BORDER_COLOR           u32 = 0x1004
GL_TEXTURE_RED_SIZE               u32 = 0x805C
GL_TEXTURE_GREEN_SIZE             u32 = 0x805D
GL_TEXTURE_BLUE_SIZE              u32 = 0x805E
GL_TEXTURE_ALPHA_SIZE             u32 = 0x805F
GL_DONT_CARE                      u32 = 0x1100
GL_FASTEST                        u32 = 0x1101
GL_NICEST                         u32 = 0x1102
GL_BYTE                           u32 = 0x1400
GL_UNSIGNED_BYTE                  u32 = 0x1401
GL_FLOAT16                          u32 = 0x1402
GL_UNSIGNED_SHORT                u32 = 0x1403
GL_INT                            u32 = 0x1404
GL_UNSIGNED_INT                   u32 = 0x1405
GL_FLOAT                          u32 = 0x1406
GL_DOUBLE                         u32 = 0x140A
GL_CLEAR                          u32 = 0x1500
GL_AND                            u32 = 0x1501
GL_AND_REVERSE                    u32 = 0x1502
GL_COPY                           u32 = 0x1503
GL_AND_INVERTED                   u32 = 0x1504
GL_NOOP                           u32 = 0x1505
GL_XOR                            u32 = 0x1506
GL_OR                             u32 = 0x1507
GL_NOR                            u32 = 0x1508
GL_EQUIV                          u32 = 0x1509
GL_INVERT                         u32 = 0x150A
GL_OR_REVERSE                     u32 = 0x150B
GL_COPY_INVERTED                  u32 = 0x150C
GL_OR_INVERTED                    u32 = 0x150D
GL_NAND                           u32 = 0x150E
GL_SET                            u32 = 0x150F
GL_TEXTURE                        u32 = 0x1702
GL_COLOR                          u32 = 0x1800
GL_DEPTH                          u32 = 0x1801
GL_STENCIL                        u32 = 0x1802
GL_STENCIL_INDEX                  u32 = 0x1901
GL_DEPTH_COMPONENT                u32 = 0x1902
GL_RED                            u32 = 0x1903
GL_GREEN                          u32 = 0x1904
GL_BLUE                           u32 = 0x1905
GL_ALPHA                          u32 = 0x1906
GL_RGB                            u32 = 0x1907
GL_RGBA                           u32 = 0x1908
GL_POINT                          u32 = 0x1B00
GL_LINE                           u32 = 0x1B01
GL_FILL                           u32 = 0x1B02
GL_KEEP                           u32 = 0x1E00
GL_REPLACE                        u32 = 0x1E01
GL_INCR                           u32 = 0x1E02
GL_DECR                           u32 = 0x1E03
GL_VENDOR                         u32 = 0x1F00
GL_RENDERER                       u32 = 0x1F01
GL_VERSION                        u32 = 0x1F02
GL_EXTENSIONS                     u32 = 0x1F03
GL_NEAREST                        u32 = 0x2600
GL_LINEAR                         u32 = 0x2601
GL_NEAREST_MIPMAP_NEAREST         u32 = 0x2700
GL_LINEAR_MIPMAP_NEAREST          u32 = 0x2701
GL_NEAREST_MIPMAP_LINEAR          u32 = 0x2702
GL_LINEAR_MIPMAP_LINEAR           u32 = 0x2703
GL_TEXTURE_MAG_FILTER             u32 = 0x2800
GL_TEXTURE_MIN_FILTER             u32 = 0x2801
GL_TEXTURE_WRAP_S                 u32 = 0x2802
GL_TEXTURE_WRAP_T                 u32 = 0x2803
GL_PROXY_TEXTURE_1D               u32 = 0x8063
GL_PROXY_TEXTURE_2D               u32 = 0x8064
GL_REPEAT                         u32 = 0x2901
GL_R3_G3_B2                       u32 = 0x2A10
GL_RGB4                           u32 = 0x804F
GL_RGB5                           u32 = 0x8050
GL_RGB8                           u32 = 0x8051
GL_RGB10                          u32 = 0x8052
GL_RGB12                          u32 = 0x8053
GL_RGB16                          u32 = 0x8054
GL_RGBA2                          u32 = 0x8055
GL_RGBA4                          u32 = 0x8056
GL_RGB5_A1                        u32 = 0x8057
GL_RGBA8                          u32 = 0x8058
GL_RGB10_A2                       u32 = 0x8059
GL_RGBA12                         u32 = 0x805A
GL_RGBA16                         u32 = 0x805B
GL_UNSIGNED_BYTE_3_3_2            u32 = 0x8032
GL_UNSIGNED_i16_4_4_4_4         u32 = 0x8033
GL_UNSIGNED_i16_5_5_5_1         u32 = 0x8034
GL_UNSIGNED_INT_8_8_8_8           u32 = 0x8035
GL_UNSIGNED_INT_10_10_10_2        u32 = 0x8036
GL_TEXTURE_BINDING_3D             u32 = 0x806A
GL_PACK_SKIP_IMAGES               u32 = 0x806B
GL_PACK_IMAGE_HEIGHT              u32 = 0x806C
GL_UNPACK_SKIP_IMAGES             u32 = 0x806D
GL_UNPACK_IMAGE_HEIGHT            u32 = 0x806E
GL_TEXTURE_3D                     u32 = 0x806F
GL_PROXY_TEXTURE_3D               u32 = 0x8070
GL_TEXTURE_DEPTH                  u32 = 0x8071
GL_TEXTURE_WRAP_R                 u32 = 0x8072
GL_MAX_3D_TEXTURE_SIZE            u32 = 0x8073
GL_UNSIGNED_BYTE_2_3_3_REV        u32 = 0x8362
GL_UNSIGNED_i16_5_6_5           u32 = 0x8363
GL_UNSIGNED_i16_5_6_5_REV       u32 = 0x8364
GL_UNSIGNED_i16_4_4_4_4_REV     u32 = 0x8365
GL_UNSIGNED_i16_1_5_5_5_REV     u32 = 0x8366
GL_UNSIGNED_INT_8_8_8_8_REV       u32 = 0x8367
GL_UNSIGNED_INT_2_10_10_10_REV    u32 = 0x8368
GL_BGR                            u32 = 0x80E0
GL_BGRA                           u32 = 0x80E1
GL_MAX_ELEMENTS_VERTICES          u32 = 0x80E8
GL_MAX_ELEMENTS_INDICES           u32 = 0x80E9
GL_CLAMP_TO_EDGE                  u32 = 0x812F
GL_TEXTURE_MIN_LOD                u32 = 0x813A
GL_TEXTURE_MAX_LOD                u32 = 0x813B
GL_TEXTURE_BASE_LEVEL             u32 = 0x813C
GL_TEXTURE_MAX_LEVEL              u32 = 0x813D
GL_SMOOTH_POINT_SIZE_RANGE        u32 = 0x0B12
GL_SMOOTH_POINT_SIZE_GRANULARITY  u32 = 0x0B13
GL_SMOOTH_LINE_WIDTH_RANGE        u32 = 0x0B22
GL_SMOOTH_LINE_WIDTH_GRANULARITY  u32 = 0x0B23
GL_ALIASED_LINE_WIDTH_RANGE       u32 = 0x846E
GL_CONSTANT_COLOR                 u32 = 0x8001
GL_ONE_MINUS_CONSTANT_COLOR       u32 = 0x8002
GL_CONSTANT_ALPHA                 u32 = 0x8003
GL_ONE_MINUS_CONSTANT_ALPHA       u32 = 0x8004
GL_BLEND_COLOR                    u32 = 0x8005
GL_FN_ADD                       u32 = 0x8006
GL_MIN                            u32 = 0x8007
GL_MAX                            u32 = 0x8008
GL_BLEND_EQUATION                 u32 = 0x8009
GL_FN_SUBTRACT                  u32 = 0x800A
GL_FN_REVERSE_SUBTRACT          u32 = 0x800B
GL_TEXTURE0                       u32 = 0x84C0
GL_TEXTURE1                       u32 = 0x84C1
GL_TEXTURE2                       u32 = 0x84C2
GL_TEXTURE3                       u32 = 0x84C3
GL_TEXTURE4                       u32 = 0x84C4
GL_TEXTURE5                       u32 = 0x84C5
GL_TEXTURE6                       u32 = 0x84C6
GL_TEXTURE7                       u32 = 0x84C7
GL_TEXTURE8                       u32 = 0x84C8
GL_TEXTURE9                       u32 = 0x84C9
GL_TEXTURE10                      u32 = 0x84CA
GL_TEXTURE11                      u32 = 0x84CB
GL_TEXTURE12                      u32 = 0x84CC
GL_TEXTURE13                      u32 = 0x84CD
GL_TEXTURE14                      u32 = 0x84CE
GL_TEXTURE15                      u32 = 0x84CF
GL_TEXTURE16                      u32 = 0x84D0
GL_TEXTURE17                      u32 = 0x84D1
GL_TEXTURE18                      u32 = 0x84D2
GL_TEXTURE19                      u32 = 0x84D3
GL_TEXTURE20                      u32 = 0x84D4
GL_TEXTURE21                      u32 = 0x84D5
GL_TEXTURE22                      u32 = 0x84D6
GL_TEXTURE23                      u32 = 0x84D7
GL_TEXTURE24                      u32 = 0x84D8
GL_TEXTURE25                      u32 = 0x84D9
GL_TEXTURE26                      u32 = 0x84DA
GL_TEXTURE27                      u32 = 0x84DB
GL_TEXTURE28                      u32 = 0x84DC
GL_TEXTURE29                      u32 = 0x84DD
GL_TEXTURE30                      u32 = 0x84DE
GL_TEXTURE31                      u32 = 0x84DF
GL_ACTIVE_TEXTURE                 u32 = 0x84E0
GL_MULTISAMPLE                    u32 = 0x809D
GL_SAMPLE_ALPHA_TO_COVERAGE       u32 = 0x809E
GL_SAMPLE_ALPHA_TO_ONE            u32 = 0x809F
GL_SAMPLE_COVERAGE                u32 = 0x80A0
GL_SAMPLE_BUFFERS                 u32 = 0x80A8
GL_SAMPLES                        u32 = 0x80A9
GL_SAMPLE_COVERAGE_VALUE          u32 = 0x80AA
GL_SAMPLE_COVERAGE_INVERT         u32 = 0x80AB
GL_TEXTURE_CUBE_MAP               u32 = 0x8513
GL_TEXTURE_BINDING_CUBE_MAP       u32 = 0x8514
GL_TEXTURE_CUBE_MAP_POSITIVE_X    u32 = 0x8515
GL_TEXTURE_CUBE_MAP_NEGATIVE_X    u32 = 0x8516
GL_TEXTURE_CUBE_MAP_POSITIVE_Y    u32 = 0x8517
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y    u32 = 0x8518
GL_TEXTURE_CUBE_MAP_POSITIVE_Z    u32 = 0x8519
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z    u32 = 0x851A
GL_PROXY_TEXTURE_CUBE_MAP         u32 = 0x851B
GL_MAX_CUBE_MAP_TEXTURE_SIZE      u32 = 0x851C
GL_COMPRESSED_RGB                 u32 = 0x84ED
GL_COMPRESSED_RGBA                u32 = 0x84EE
GL_TEXTURE_COMPRESSION_HINT       u32 = 0x84EF
GL_TEXTURE_COMPRESSED_IMAGE_SIZE  u32 = 0x86A0
GL_TEXTURE_COMPRESSED             u32 = 0x86A1
GL_NUM_COMPRESSED_TEXTURE_FORMATS u32 = 0x86A2
GL_COMPRESSED_TEXTURE_FORMATS     u32 = 0x86A3
GL_CLAMP_TO_BORDER                u32 = 0x812D
GL_BLEND_DST_RGB                  u32 = 0x80C8
GL_BLEND_SRC_RGB                  u32 = 0x80C9
GL_BLEND_DST_ALPHA                u32 = 0x80CA
GL_BLEND_SRC_ALPHA                u32 = 0x80CB
GL_POINT_FADE_THRESHOLD_SIZE      u32 = 0x8128
GL_DEPTH_COMPONENT16              u32 = 0x81A5
GL_DEPTH_COMPONENT24              u32 = 0x81A6
GL_DEPTH_COMPONENT32              u32 = 0x81A7
GL_MIRRORED_REPEAT                u32 = 0x8370
GL_MAX_TEXTURE_LOD_BIAS           u32 = 0x84FD
GL_TEXTURE_LOD_BIAS               u32 = 0x8501
GL_INCR_WRAP                      u32 = 0x8507
GL_DECR_WRAP                      u32 = 0x8508
GL_TEXTURE_DEPTH_SIZE             u32 = 0x884A
GL_TEXTURE_COMPARE_MODE           u32 = 0x884C
GL_TEXTURE_COMPARE_FUNC           u32 = 0x884D
GL_BUFFER_SIZE                    u32 = 0x8764
GL_BUFFER_USAGE                   u32 = 0x8765
GL_QUERY_COUNTER_BITS             u32 = 0x8864
GL_CURRENT_QUERY                  u32 = 0x8865
GL_QUERY_RESULT                   u32 = 0x8866
GL_QUERY_RESULT_AVAILABLE         u32 = 0x8867
GL_ARRAY_BUFFER                   u32 = 0x8892
GL_ELEMENT_ARRAY_BUFFER           u32 = 0x8893
GL_ARRAY_BUFFER_BINDING           u32 = 0x8894
GL_ELEMENT_ARRAY_BUFFER_BINDING   u32 = 0x8895
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING u32 = 0x889F
GL_READ_ONLY                      u32 = 0x88B8
GL_WRITE_ONLY                     u32 = 0x88B9
GL_READ_WRITE                     u32 = 0x88BA
GL_BUFFER_ACCESS                  u32 = 0x88BB
GL_BUFFER_MAPPED                  u32 = 0x88BC
GL_BUFFER_MAP_POINTER             u32 = 0x88BD
GL_STREAM_DRAW                    u32 = 0x88E0
GL_STREAM_READ                    u32 = 0x88E1
GL_STREAM_COPY                    u32 = 0x88E2
GL_STATIC_DRAW                    u32 = 0x88E4
GL_STATIC_READ                    u32 = 0x88E5
GL_STATIC_COPY                    u32 = 0x88E6
GL_DYNAMIC_DRAW                   u32 = 0x88E8
GL_DYNAMIC_READ                   u32 = 0x88E9
GL_DYNAMIC_COPY                   u32 = 0x88EA
GL_SAMPLES_PASSED                 u32 = 0x8914
GL_BLEND_EQUATION_RGB             u32 = 0x8009
GL_VERTEX_ATTRIB_ARRAY_ENABLED    u32 = 0x8622
GL_VERTEX_ATTRIB_ARRAY_SIZE       u32 = 0x8623
GL_VERTEX_ATTRIB_ARRAY_STRIDE     u32 = 0x8624
GL_VERTEX_ATTRIB_ARRAY_TYPE       u32 = 0x8625
GL_CURRENT_VERTEX_ATTRIB          u32 = 0x8626
GL_VERTEX_PROGRAM_POINT_SIZE      u32 = 0x8642
GL_VERTEX_ATTRIB_ARRAY_POINTER    u32 = 0x8645
GL_STENCIL_BACK_FUNC              u32 = 0x8800
GL_STENCIL_BACK_FAIL              u32 = 0x8801
GL_STENCIL_BACK_PASS_DEPTH_FAIL   u32 = 0x8802
GL_STENCIL_BACK_PASS_DEPTH_PASS   u32 = 0x8803
GL_MAX_DRAW_BUFFERS               u32 = 0x8824
GL_DRAW_BUFFER0                   u32 = 0x8825
GL_DRAW_BUFFER1                   u32 = 0x8826
GL_DRAW_BUFFER2                   u32 = 0x8827
GL_DRAW_BUFFER3                   u32 = 0x8828
GL_DRAW_BUFFER4                   u32 = 0x8829
GL_DRAW_BUFFER5                   u32 = 0x882A
GL_DRAW_BUFFER6                   u32 = 0x882B
GL_DRAW_BUFFER7                   u32 = 0x882C
GL_DRAW_BUFFER8                   u32 = 0x882D
GL_DRAW_BUFFER9                   u32 = 0x882E
GL_DRAW_BUFFER10                  u32 = 0x882F
GL_DRAW_BUFFER11                  u32 = 0x8830
GL_DRAW_BUFFER12                  u32 = 0x8831
GL_DRAW_BUFFER13                  u32 = 0x8832
GL_DRAW_BUFFER14                  u32 = 0x8833
GL_DRAW_BUFFER15                  u32 = 0x8834
GL_BLEND_EQUATION_ALPHA           u32 = 0x883D
GL_MAX_VERTEX_ATTRIBS             u32 = 0x8869
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED u32 = 0x886A
GL_MAX_TEXTURE_IMAGE_UNITS        u32 = 0x8872
GL_FRAGMENT_SHADER                u32 = 0x8B30
GL_VERTEX_SHADER                  u32 = 0x8B31
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS u32 = 0x8B49
GL_MAX_VERTEX_UNIFORM_COMPONENTS  u32 = 0x8B4A
GL_MAX_VARYING_FLOATS             u32 = 0x8B4B
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS u32 = 0x8B4C
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS u32 = 0x8B4D
GL_SHADER_TYPE                    u32 = 0x8B4F
GL_FLOAT_VEC2                     u32 = 0x8B50
GL_FLOAT_VEC3                     u32 = 0x8B51
GL_FLOAT_VEC4                     u32 = 0x8B52
GL_INT_VEC2                       u32 = 0x8B53
GL_INT_VEC3                       u32 = 0x8B54
GL_INT_VEC4                       u32 = 0x8B55
GL_BOOL                           u32 = 0x8B56
GL_BOOL_VEC2                      u32 = 0x8B57
GL_BOOL_VEC3                      u32 = 0x8B58
GL_BOOL_VEC4                      u32 = 0x8B59
GL_FLOAT_MAT2                     u32 = 0x8B5A
GL_FLOAT_MAT3                     u32 = 0x8B5B
GL_FLOAT_MAT4                     u32 = 0x8B5C
GL_SAMPLER_1D                     u32 = 0x8B5D
GL_SAMPLER_2D                     u32 = 0x8B5E
GL_SAMPLER_3D                     u32 = 0x8B5F
GL_SAMPLER_CUBE                   u32 = 0x8B60
GL_SAMPLER_1D_SHADOW              u32 = 0x8B61
GL_SAMPLER_2D_SHADOW              u32 = 0x8B62
GL_DELETE_STATUS                  u32 = 0x8B80
GL_COMPILE_STATUS                 u32 = 0x8B81
GL_LINK_STATUS                    u32 = 0x8B82
GL_VALIDATE_STATUS                u32 = 0x8B83
GL_INFO_LOG_LENGTH                u32 = 0x8B84
GL_ATTACHED_SHADERS               u32 = 0x8B85
GL_ACTIVE_UNIFORMS                u32 = 0x8B86
GL_ACTIVE_UNIFORM_MAX_LENGTH      u32 = 0x8B87
GL_SHADER_SOURCE_LENGTH           u32 = 0x8B88
GL_ACTIVE_ATTRIBUTES              u32 = 0x8B89
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH    u32 = 0x8B8A
GL_FRAGMENT_SHADER_DERIVATIVE_HINT u32 = 0x8B8B
GL_SHADING_LANGUAGE_VERSION       u32 = 0x8B8C
GL_CURRENT_PROGRAM                u32 = 0x8B8D
GL_POINT_SPRITE_COORD_ORIGIN      u32 = 0x8CA0
GL_LOWER_LEFT                     u32 = 0x8CA1
GL_UPPER_LEFT                     u32 = 0x8CA2
GL_STENCIL_BACK_REF               u32 = 0x8CA3
GL_STENCIL_BACK_VALUE_MASK        u32 = 0x8CA4
GL_STENCIL_BACK_WRITEMASK         u32 = 0x8CA5
GL_PIXEL_PACK_BUFFER              u32 = 0x88EB
GL_PIXEL_UNPACK_BUFFER            u32 = 0x88EC
GL_PIXEL_PACK_BUFFER_BINDING      u32 = 0x88ED
GL_PIXEL_UNPACK_BUFFER_BINDING    u32 = 0x88EF
GL_FLOAT_MAT2x3                   u32 = 0x8B65
GL_FLOAT_MAT2x4                   u32 = 0x8B66
GL_FLOAT_MAT3x2                   u32 = 0x8B67
GL_FLOAT_MAT3x4                   u32 = 0x8B68
GL_FLOAT_MAT4x2                   u32 = 0x8B69
GL_FLOAT_MAT4x3                   u32 = 0x8B6A
GL_SRGB                           u32 = 0x8C40
GL_SRGB8                          u32 = 0x8C41
GL_SRGB_ALPHA                     u32 = 0x8C42
GL_SRGB8_ALPHA8                   u32 = 0x8C43
GL_COMPRESSED_SRGB                u32 = 0x8C48
GL_COMPRESSED_SRGB_ALPHA          u32 = 0x8C49
GL_COMPARE_REF_TO_TEXTURE         u32 = 0x884E
GL_CLIP_DISTANCE0                 u32 = 0x3000
GL_CLIP_DISTANCE1                 u32 = 0x3001
GL_CLIP_DISTANCE2                 u32 = 0x3002
GL_CLIP_DISTANCE3                 u32 = 0x3003
GL_CLIP_DISTANCE4                 u32 = 0x3004
GL_CLIP_DISTANCE5                 u32 = 0x3005
GL_CLIP_DISTANCE6                 u32 = 0x3006
GL_CLIP_DISTANCE7                 u32 = 0x3007
GL_MAX_CLIP_DISTANCES             u32 = 0x0D32
GL_MAJOR_VERSION                  u32 = 0x821B
GL_MINOR_VERSION                  u32 = 0x821C
GL_NUM_EXTENSIONS                 u32 = 0x821D
GL_CONTEXT_FLAGS                  u32 = 0x821E
GL_COMPRESSED_RED                 u32 = 0x8225
GL_COMPRESSED_RG                  u32 = 0x8226
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT u32 = 0x0001
GL_RGBA32F                        u32 = 0x8814
GL_RGB32F                         u32 = 0x8815
GL_RGBA16F                        u32 = 0x881A
GL_RGB16F                         u32 = 0x881B
GL_VERTEX_ATTRIB_ARRAY_INTEGER    u32 = 0x88FD
GL_MAX_ARRAY_TEXTURE_LAYERS       u32 = 0x88FF
GL_MIN_PROGRAM_TEXEL_OFFSET       u32 = 0x8904
GL_MAX_PROGRAM_TEXEL_OFFSET       u32 = 0x8905
GL_CLAMP_READ_COLOR               u32 = 0x891C
GL_FIXED_ONLY                     u32 = 0x891D
GL_MAX_VARYING_COMPONENTS         u32 = 0x8B4B
GL_TEXTURE_1D_ARRAY               u32 = 0x8C18
GL_PROXY_TEXTURE_1D_ARRAY         u32 = 0x8C19
GL_TEXTURE_2D_ARRAY               u32 = 0x8C1A
GL_PROXY_TEXTURE_2D_ARRAY         u32 = 0x8C1B
GL_TEXTURE_BINDING_1D_ARRAY       u32 = 0x8C1C
GL_TEXTURE_BINDING_2D_ARRAY       u32 = 0x8C1D
GL_R11F_G11F_B10F                 u32 = 0x8C3A
GL_UNSIGNED_INT_10F_11F_11F_REV   u32 = 0x8C3B
GL_RGB9_E5                        u32 = 0x8C3D
GL_UNSIGNED_INT_5_9_9_9_REV       u32 = 0x8C3E
GL_TEXTURE_SHARED_SIZE            u32 = 0x8C3F
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH u32 = 0x8C76
GL_TRANSFORM_FEEDBACK_BUFFER_MODE u32 = 0x8C7F
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS u32 = 0x8C80
GL_TRANSFORM_FEEDBACK_VARYINGS    u32 = 0x8C83
GL_TRANSFORM_FEEDBACK_BUFFER_START u32 = 0x8C84
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE u32 = 0x8C85
GL_PRIMITIVES_GENERATED           u32 = 0x8C87
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN u32 = 0x8C88
GL_RASTERIZER_DISCARD             u32 = 0x8C89
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS u32 = 0x8C8A
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS u32 = 0x8C8B
GL_INTERLEAVED_ATTRIBS            u32 = 0x8C8C
GL_SEPARATE_ATTRIBS               u32 = 0x8C8D
GL_TRANSFORM_FEEDBACK_BUFFER      u32 = 0x8C8E
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING u32 = 0x8C8F
GL_RGBA32UI                       u32 = 0x8D70
GL_RGB32UI                        u32 = 0x8D71
GL_RGBA16UI                       u32 = 0x8D76
GL_RGB16UI                        u32 = 0x8D77
GL_RGBA8UI                        u32 = 0x8D7C
GL_RGB8UI                         u32 = 0x8D7D
GL_RGBA32I                        u32 = 0x8D82
GL_RGB32I                         u32 = 0x8D83
GL_RGBA16I                        u32 = 0x8D88
GL_RGB16I                         u32 = 0x8D89
GL_RGBA8I                         u32 = 0x8D8E
GL_RGB8I                          u32 = 0x8D8F
GL_RED_INTEGER                    u32 = 0x8D94
GL_GREEN_INTEGER                  u32 = 0x8D95
GL_BLUE_INTEGER                   u32 = 0x8D96
GL_RGB_INTEGER                    u32 = 0x8D98
GL_RGBA_INTEGER                   u32 = 0x8D99
GL_BGR_INTEGER                    u32 = 0x8D9A
GL_BGRA_INTEGER                   u32 = 0x8D9B
GL_SAMPLER_1D_ARRAY               u32 = 0x8DC0
GL_SAMPLER_2D_ARRAY               u32 = 0x8DC1
GL_SAMPLER_1D_ARRAY_SHADOW        u32 = 0x8DC3
GL_SAMPLER_2D_ARRAY_SHADOW        u32 = 0x8DC4
GL_SAMPLER_CUBE_SHADOW            u32 = 0x8DC5
GL_UNSIGNED_INT_VEC2              u32 = 0x8DC6
GL_UNSIGNED_INT_VEC3              u32 = 0x8DC7
GL_UNSIGNED_INT_VEC4              u32 = 0x8DC8
GL_INT_SAMPLER_1D                 u32 = 0x8DC9
GL_INT_SAMPLER_2D                 u32 = 0x8DCA
GL_INT_SAMPLER_3D                 u32 = 0x8DCB
GL_INT_SAMPLER_CUBE               u32 = 0x8DCC
GL_INT_SAMPLER_1D_ARRAY           u32 = 0x8DCE
GL_INT_SAMPLER_2D_ARRAY           u32 = 0x8DCF
GL_UNSIGNED_INT_SAMPLER_1D        u32 = 0x8DD1
GL_UNSIGNED_INT_SAMPLER_2D        u32 = 0x8DD2
GL_UNSIGNED_INT_SAMPLER_3D        u32 = 0x8DD3
GL_UNSIGNED_INT_SAMPLER_CUBE      u32 = 0x8DD4
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY  u32 = 0x8DD6
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY  u32 = 0x8DD7
GL_QUERY_WAIT                     u32 = 0x8E13
GL_QUERY_NO_WAIT                  u32 = 0x8E14
GL_QUERY_BY_REGION_WAIT           u32 = 0x8E15
GL_QUERY_BY_REGION_NO_WAIT        u32 = 0x8E16
GL_BUFFER_ACCESS_FLAGS            u32 = 0x911F
GL_BUFFER_MAP_LENGTH              u32 = 0x9120
GL_BUFFER_MAP_OFFSET              u32 = 0x9121
GL_SAMPLER_2D_RECT                u32 = 0x8B63
GL_SAMPLER_2D_RECT_SHADOW         u32 = 0x8B64
GL_SAMPLER_BUFFER                 u32 = 0x8DC2
GL_INT_SAMPLER_2D_RECT            u32 = 0x8DCD
GL_INT_SAMPLER_BUFFER             u32 = 0x8DD0
GL_UNSIGNED_INT_SAMPLER_2D_RECT   u32 = 0x8DD5
GL_UNSIGNED_INT_SAMPLER_BUFFER    u32 = 0x8DD8
GL_TEXTURE_BUFFER                 u32 = 0x8C2A
GL_MAX_TEXTURE_BUFFER_SIZE        u32 = 0x8C2B
GL_TEXTURE_BINDING_BUFFER         u32 = 0x8C2C
GL_TEXTURE_BUFFER_DATA_STORE_BINDING u32 = 0x8C2D
GL_TEXTURE_RECTANGLE              u32 = 0x84F5
GL_TEXTURE_BINDING_RECTANGLE      u32 = 0x84F6
GL_PROXY_TEXTURE_RECTANGLE        u32 = 0x84F7
GL_MAX_RECTANGLE_TEXTURE_SIZE     u32 = 0x84F8
GL_R8_SNORM                       u32 = 0x8F94
GL_RG8_SNORM                      u32 = 0x8F95
GL_RGB8_SNORM                     u32 = 0x8F96
GL_RGBA8_SNORM                    u32 = 0x8F97
GL_R16_SNORM                      u32 = 0x8F98
GL_RG16_SNORM                     u32 = 0x8F99
GL_RGB16_SNORM                    u32 = 0x8F9A
GL_RGBA16_SNORM                   u32 = 0x8F9B
GL_SIGNED_NORMALIZED              u32 = 0x8F9C
GL_PRIMITIVE_RESTART              u32 = 0x8F9D
GL_PRIMITIVE_RESTART_INDEX        u32 = 0x8F9E
GL_CONTEXT_CORE_PROFILE_BIT       u32 = 0x00000001
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT u32 = 0x00000002
GL_LINES_ADJACENCY                u32 = 0x000A
GL_LINE_STRIP_ADJACENCY           u32 = 0x000B
GL_TRIANGLES_ADJACENCY            u32 = 0x000C
GL_TRIANGLE_STRIP_ADJACENCY       u32 = 0x000D
GL_PROGRAM_POINT_SIZE             u32 = 0x8642
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS u32 = 0x8C29
GL_FRAMEBUFFER_ATTACHMENT_LAYERED u32 = 0x8DA7
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS u32 = 0x8DA8
GL_GEOMETRY_SHADER                u32 = 0x8DD9
GL_GEOMETRY_VERTICES_OUT          u32 = 0x8916
GL_GEOMETRY_INPUT_TYPE            u32 = 0x8917
GL_GEOMETRY_OUTPUT_TYPE           u32 = 0x8918
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS u32 = 0x8DDF
GL_MAX_GEOMETRY_OUTPUT_VERTICES   u32 = 0x8DE0
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS u32 = 0x8DE1
GL_MAX_VERTEX_OUTPUT_COMPONENTS   u32 = 0x9122
GL_MAX_GEOMETRY_INPUT_COMPONENTS  u32 = 0x9123
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS u32 = 0x9124
GL_MAX_FRAGMENT_INPUT_COMPONENTS  u32 = 0x9125
GL_CONTEXT_PROFILE_MASK           u32 = 0x9126
GL_VERTEX_ATTRIB_ARRAY_DIVISOR    u32 = 0x88FE
GL_SAMPLE_SHADING                 u32 = 0x8C36
GL_MIN_SAMPLE_SHADING_VALUE       u32 = 0x8C37
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET u32 = 0x8E5E
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET u32 = 0x8E5F
GL_TEXTURE_CUBE_MAP_ARRAY         u32 = 0x9009
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY u32 = 0x900A
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY   u32 = 0x900B
GL_SAMPLER_CUBE_MAP_ARRAY         u32 = 0x900C
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW  u32 = 0x900D
GL_INT_SAMPLER_CUBE_MAP_ARRAY     u32 = 0x900E
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY u32 = 0x900F
GL_DEPTH_COMPONENT32F             u32 = 0x8CAC
GL_DEPTH32F_STENCIL8              u32 = 0x8CAD
GL_FLOAT_32_UNSIGNED_INT_24_8_REV u32 = 0x8DAD
GL_INVALID_FRAMEBUFFER_OPERATION  u32 = 0x0506
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING u32 = 0x8210
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE u32 = 0x8211
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE u32 = 0x8212
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE u32 = 0x8213
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE u32 = 0x8214
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE u32 = 0x8215
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE u32 = 0x8216
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE u32 = 0x8217
GL_FRAMEBUFFER_DEFAULT            u32 = 0x8218
GL_FRAMEBUFFER_UNDEFINED          u32 = 0x8219
GL_DEPTH_STENCIL_ATTACHMENT       u32 = 0x821A
GL_MAX_RENDERBUFFER_SIZE          u32 = 0x84E8
GL_DEPTH_STENCIL                  u32 = 0x84F9
GL_UNSIGNED_INT_24_8              u32 = 0x84FA
GL_DEPTH24_STENCIL8               u32 = 0x88F0
GL_TEXTURE_STENCIL_SIZE           u32 = 0x88F1
GL_TEXTURE_RED_TYPE               u32 = 0x8C10
GL_TEXTURE_GREEN_TYPE             u32 = 0x8C11
GL_TEXTURE_BLUE_TYPE              u32 = 0x8C12
GL_TEXTURE_ALPHA_TYPE             u32 = 0x8C13
GL_TEXTURE_DEPTH_TYPE             u32 = 0x8C16
GL_UNSIGNED_NORMALIZED            u32 = 0x8C17
GL_FRAMEBUFFER_BINDING            u32 = 0x8CA6
GL_DRAW_FRAMEBUFFER_BINDING       u32 = 0x8CA6
GL_RENDERBUFFER_BINDING           u32 = 0x8CA7
GL_READ_FRAMEBUFFER               u32 = 0x8CA8
GL_DRAW_FRAMEBUFFER               u32 = 0x8CA9
GL_READ_FRAMEBUFFER_BINDING       u32 = 0x8CAA
GL_RENDERBUFFER_SAMPLES           u32 = 0x8CAB
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE u32 = 0x8CD0
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME u32 = 0x8CD1
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL u32 = 0x8CD2
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE u32 = 0x8CD3
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER u32 = 0x8CD4
GL_FRAMEBUFFER_COMPLETE           u32 = 0x8CD5
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT u32 = 0x8CD6
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT u32 = 0x8CD7
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER u32 = 0x8CDB
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER u32 = 0x8CDC
GL_FRAMEBUFFER_UNSUPPORTED        u32 = 0x8CDD
GL_MAX_COLOR_ATTACHMENTS          u32 = 0x8CDF
GL_COLOR_ATTACHMENT0              u32 = 0x8CE0
GL_COLOR_ATTACHMENT1              u32 = 0x8CE1
GL_COLOR_ATTACHMENT2              u32 = 0x8CE2
GL_COLOR_ATTACHMENT3              u32 = 0x8CE3
GL_COLOR_ATTACHMENT4              u32 = 0x8CE4
GL_COLOR_ATTACHMENT5              u32 = 0x8CE5
GL_COLOR_ATTACHMENT6              u32 = 0x8CE6
GL_COLOR_ATTACHMENT7              u32 = 0x8CE7
GL_COLOR_ATTACHMENT8              u32 = 0x8CE8
GL_COLOR_ATTACHMENT9              u32 = 0x8CE9
GL_COLOR_ATTACHMENT10             u32 = 0x8CEA
GL_COLOR_ATTACHMENT11             u32 = 0x8CEB
GL_COLOR_ATTACHMENT12             u32 = 0x8CEC
GL_COLOR_ATTACHMENT13             u32 = 0x8CED
GL_COLOR_ATTACHMENT14             u32 = 0x8CEE
GL_COLOR_ATTACHMENT15             u32 = 0x8CEF
GL_DEPTH_ATTACHMENT               u32 = 0x8D00
GL_STENCIL_ATTACHMENT             u32 = 0x8D20
GL_FRAMEBUFFER                    u32 = 0x8D40
GL_RENDERBUFFER                   u32 = 0x8D41
GL_RENDERBUFFER_WIDTH             u32 = 0x8D42
GL_RENDERBUFFER_HEIGHT            u32 = 0x8D43
GL_RENDERBUFFER_INTERNAL_FORMAT   u32 = 0x8D44
GL_STENCIL_INDEX1                 u32 = 0x8D46
GL_STENCIL_INDEX4                 u32 = 0x8D47
GL_STENCIL_INDEX8                 u32 = 0x8D48
GL_STENCIL_INDEX16                u32 = 0x8D49
GL_RENDERBUFFER_RED_SIZE          u32 = 0x8D50
GL_RENDERBUFFER_GREEN_SIZE        u32 = 0x8D51
GL_RENDERBUFFER_BLUE_SIZE         u32 = 0x8D52
GL_RENDERBUFFER_ALPHA_SIZE        u32 = 0x8D53
GL_RENDERBUFFER_DEPTH_SIZE        u32 = 0x8D54
GL_RENDERBUFFER_STENCIL_SIZE      u32 = 0x8D55
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE u32 = 0x8D56
GL_MAX_SAMPLES                    u32 = 0x8D57
GL_FRAMEBUFFER_SRGB               u32 = 0x8DB9
GL_HALF_F32                   u32 = 0x140B
GL_MAP_READ_BIT                   u32 = 0x0001
GL_MAP_WRITE_BIT                  u32 = 0x0002
GL_MAP_INVALIDATE_RANGE_BIT       u32 = 0x0004
GL_MAP_INVALIDATE_BUFFER_BIT      u32 = 0x0008
GL_MAP_FLUSH_EXPLICIT_BIT         u32 = 0x0010
GL_MAP_UNSYNCHRONIZED_BIT         u32 = 0x0020
GL_COMPRESSED_RED_RGTC1           u32 = 0x8DBB
GL_COMPRESSED_SIGNED_RED_RGTC1    u32 = 0x8DBC
GL_COMPRESSED_RG_RGTC2            u32 = 0x8DBD
GL_COMPRESSED_SIGNED_RG_RGTC2     u32 = 0x8DBE
GL_RG                             u32 = 0x8227
GL_RG_INTEGER                     u32 = 0x8228
GL_R8                             u32 = 0x8229
GL_R16                            u32 = 0x822A
GL_RG8                            u32 = 0x822B
GL_RG16                           u32 = 0x822C
GL_R16F                           u32 = 0x822D
GL_R32F                           u32 = 0x822E
GL_RG16F                          u32 = 0x822F
GL_RG32F                          u32 = 0x8230
GL_R8I                            u32 = 0x8231
GL_R8UI                           u32 = 0x8232
GL_R16I                           u32 = 0x8233
GL_R16UI                          u32 = 0x8234
GL_R32I                           u32 = 0x8235
GL_R32UI                          u32 = 0x8236
GL_RG8I                           u32 = 0x8237
GL_RG8UI                          u32 = 0x8238
GL_RG16I                          u32 = 0x8239
GL_RG16UI                         u32 = 0x823A
GL_RG32I                          u32 = 0x823B
GL_RG32UI                         u32 = 0x823C
GL_VERTEX_ARRAY_BINDING           u32 = 0x85B5
GL_UNIFORM_BUFFER                 u32 = 0x8A11
GL_UNIFORM_BUFFER_BINDING         u32 = 0x8A28
GL_UNIFORM_BUFFER_START           u32 = 0x8A29
GL_UNIFORM_BUFFER_SIZE            u32 = 0x8A2A
GL_MAX_VERTEX_UNIFORM_BLOCKS      u32 = 0x8A2B
GL_MAX_GEOMETRY_UNIFORM_BLOCKS    u32 = 0x8A2C
GL_MAX_FRAGMENT_UNIFORM_BLOCKS    u32 = 0x8A2D
GL_MAX_COMBINED_UNIFORM_BLOCKS    u32 = 0x8A2E
GL_MAX_UNIFORM_BUFFER_BINDINGS    u32 = 0x8A2F
GL_MAX_UNIFORM_BLOCK_SIZE         u32 = 0x8A30
GL_INVALID_INDEX                  u32 = 0xFFFFFFFF
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS u32 = 0x8A31
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS u32 = 0x8A32
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS u32 = 0x8A33
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT u32 = 0x8A34
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH u32 = 0x8A35
GL_ACTIVE_UNIFORM_BLOCKS          u32 = 0x8A36
GL_UNIFORM_TYPE                   u32 = 0x8A37
GL_UNIFORM_SIZE                   u32 = 0x8A38
GL_UNIFORM_NAME_LENGTH            u32 = 0x8A39
GL_UNIFORM_BLOCK_INDEX            u32 = 0x8A3A
GL_UNIFORM_OFFSET                 u32 = 0x8A3B
GL_UNIFORM_ARRAY_STRIDE           u32 = 0x8A3C
GL_UNIFORM_MATRIX_STRIDE          u32 = 0x8A3D
GL_UNIFORM_IS_ROW_MAJOR           u32 = 0x8A3E
GL_UNIFORM_BLOCK_BINDING          u32 = 0x8A3F
GL_UNIFORM_BLOCK_DATA_SIZE        u32 = 0x8A40
GL_UNIFORM_BLOCK_NAME_LENGTH      u32 = 0x8A41
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS  u32 = 0x8A42
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES u32 = 0x8A43
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER u32 = 0x8A44
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER u32 = 0x8A45
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER u32 = 0x8A46
GL_COPY_READ_BUFFER               u32 = 0x8F36
GL_COPY_WRITE_BUFFER              u32 = 0x8F37
GL_DEPTH_CLAMP                    u32 = 0x864F
GL_FIRST_VERTEX_CONVENTION        u32 = 0x8E4D
GL_LAST_VERTEX_CONVENTION         u32 = 0x8E4E
GL_PROVOKING_VERTEX               u32 = 0x8E4F
GL_TEXTURE_CUBE_MAP_SEAMLESS      u32 = 0x884F
GL_MAX_SERVER_WAIT_TIMEOUT        u32 = 0x9111
GL_OBJECT_TYPE                    u32 = 0x9112
GL_SYNC_CONDITION                 u32 = 0x9113
GL_SYNC_STATUS                    u32 = 0x9114
GL_SYNC_FLAGS                     u32 = 0x9115
GL_SYNC_FENCE                     u32 = 0x9116
GL_SYNC_GPU_COMMANDS_COMPLETE     u32 = 0x9117
GL_UNSIGNALED                     u32 = 0x9118
GL_SIGNALED                       u32 = 0x9119
GL_ALREADY_SIGNALED               u32 = 0x911A
GL_TIMEOUT_EXPIRED                u32 = 0x911B
GL_CONDITION_SATISFIED            u32 = 0x911C
GL_WAIT_FAILED                    u32 = 0x911D
GL_SYNC_FLUSH_COMMANDS_BIT        u32 = 0x00000001
GL_SAMPLE_POSITION                u32 = 0x8E50
GL_SAMPLE_MASK                    u32 = 0x8E51
GL_SAMPLE_MASK_VALUE              u32 = 0x8E52
GL_MAX_SAMPLE_MASK_WORDS          u32 = 0x8E59
GL_TEXTURE_2D_MULTISAMPLE         u32 = 0x9100
GL_PROXY_TEXTURE_2D_MULTISAMPLE   u32 = 0x9101
GL_TEXTURE_2D_MULTISAMPLE_ARRAY   u32 = 0x9102
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY u32 = 0x9103
GL_TEXTURE_BINDING_2D_MULTISAMPLE u32 = 0x9104
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY u32 = 0x9105
GL_TEXTURE_SAMPLES                u32 = 0x9106
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS u32 = 0x9107
GL_SAMPLER_2D_MULTISAMPLE         u32 = 0x9108
GL_INT_SAMPLER_2D_MULTISAMPLE     u32 = 0x9109
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE u32 = 0x910A
GL_SAMPLER_2D_MULTISAMPLE_ARRAY   u32 = 0x910B
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY u32 = 0x910C
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY u32 = 0x910D
GL_MAX_COLOR_TEXTURE_SAMPLES      u32 = 0x910E
GL_MAX_DEPTH_TEXTURE_SAMPLES      u32 = 0x910F
GL_MAX_INTEGER_SAMPLES            u32 = 0x9110
GL_SRC1_COLOR                     u32 = 0x88F9
GL_SRC1_ALPHA                     u32 = 0x8589
GL_ONE_MINUS_SRC1_COLOR           u32 = 0x88FA
GL_ONE_MINUS_SRC1_ALPHA           u32 = 0x88FB
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS   u32 = 0x88FC
GL_ANY_SAMPLES_PASSED             u32 = 0x8C2F
GL_SAMPLER_BINDING                u32 = 0x8919
GL_RGB10_A2UI                     u32 = 0x906F
GL_TEXTURE_SWIZZLE_R              u32 = 0x8E42
GL_TEXTURE_SWIZZLE_G              u32 = 0x8E43
GL_TEXTURE_SWIZZLE_B              u32 = 0x8E44
GL_TEXTURE_SWIZZLE_A              u32 = 0x8E45
GL_TEXTURE_SWIZZLE_RGBA           u32 = 0x8E46
GL_TIME_ELAPSED                   u32 = 0x88BF
GL_TIMESTAMP                      u32 = 0x8E28
GL_INT_2_10_10_10_REV             u32 = 0x8D9F
GL_DRAW_INDIRECT_BUFFER           u32 = 0x8F3F
GL_DRAW_INDIRECT_BUFFER_BINDING   u32 = 0x8F43
GL_GEOMETRY_SHADER_INVOCATIONS    u32 = 0x887F
GL_MAX_GEOMETRY_SHADER_INVOCATIONS u32 = 0x8E5A
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET u32 = 0x8E5B
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET u32 = 0x8E5C
GL_FRAGMENT_INTERPOLATION_OFFSET_BITS u32 = 0x8E5D
GL_DOUBLE_VEC2                    u32 = 0x8FFC
GL_DOUBLE_VEC3                    u32 = 0x8FFD
GL_DOUBLE_VEC4                    u32 = 0x8FFE
GL_DOUBLE_MAT2                    u32 = 0x8F46
GL_DOUBLE_MAT3                    u32 = 0x8F47
GL_DOUBLE_MAT4                    u32 = 0x8F48
GL_DOUBLE_MAT2x3                  u32 = 0x8F49
GL_DOUBLE_MAT2x4                  u32 = 0x8F4A
GL_DOUBLE_MAT3x2                  u32 = 0x8F4B
GL_DOUBLE_MAT3x4                  u32 = 0x8F4C
GL_DOUBLE_MAT4x2                  u32 = 0x8F4D
GL_DOUBLE_MAT4x3                  u32 = 0x8F4E
GL_ACTIVE_SUBROUTINES             u32 = 0x8DE5
GL_ACTIVE_SUBROUTINE_UNIFORMS     u32 = 0x8DE6
GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS u32 = 0x8E47
GL_ACTIVE_SUBROUTINE_MAX_LENGTH   u32 = 0x8E48
GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH u32 = 0x8E49
GL_MAX_SUBROUTINES                u32 = 0x8DE7
GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS u32 = 0x8DE8
GL_NUM_COMPATIBLE_SUBROUTINES     u32 = 0x8E4A
GL_COMPATIBLE_SUBROUTINES         u32 = 0x8E4B
GL_PATCHES                        u32 = 0x000E
GL_PATCH_VERTICES                 u32 = 0x8E72
GL_PATCH_DEFAULT_INNER_LEVEL      u32 = 0x8E73
GL_PATCH_DEFAULT_OUTER_LEVEL      u32 = 0x8E74
GL_TESS_CONTROL_OUTPUT_VERTICES   u32 = 0x8E75
GL_TESS_GEN_MODE                  u32 = 0x8E76
GL_TESS_GEN_SPACING               u32 = 0x8E77
GL_TESS_GEN_VERTEX_ORDER          u32 = 0x8E78
GL_TESS_GEN_POINT_MODE            u32 = 0x8E79
GL_QUADS                          u32 = 0x0007
GL_ISOLINES                       u32 = 0x8E7A
GL_FRACTIONAL_ODD                 u32 = 0x8E7B
GL_FRACTIONAL_EVEN                u32 = 0x8E7C
GL_MAX_PATCH_VERTICES             u32 = 0x8E7D
GL_MAX_TESS_GEN_LEVEL             u32 = 0x8E7E
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS u32 = 0x8E7F
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS u32 = 0x8E80
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS u32 = 0x8E81
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS u32 = 0x8E82
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS u32 = 0x8E83
GL_MAX_TESS_PATCH_COMPONENTS      u32 = 0x8E84
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS u32 = 0x8E85
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS u32 = 0x8E86
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS u32 = 0x8E89
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS u32 = 0x8E8A
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS u32 = 0x886C
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS u32 = 0x886D
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS u32 = 0x8E1E
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS u32 = 0x8E1F
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER u32 = 0x84F0
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER u32 = 0x84F1
GL_TESS_EVALUATION_SHADER         u32 = 0x8E87
GL_TESS_CONTROL_SHADER            u32 = 0x8E88
GL_TRANSFORM_FEEDBACK             u32 = 0x8E22
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED u32 = 0x8E23
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE u32 = 0x8E24
GL_TRANSFORM_FEEDBACK_BINDING     u32 = 0x8E25
GL_MAX_TRANSFORM_FEEDBACK_BUFFERS u32 = 0x8E70
GL_MAX_VERTEX_STREAMS             u32 = 0x8E71
GL_FIXED                          u32 = 0x140C
GL_IMPLEMENTATION_COLOR_READ_TYPE u32 = 0x8B9A
GL_IMPLEMENTATION_COLOR_READ_FORMAT u32 = 0x8B9B
GL_LOW_F32                      u32 = 0x8DF0
GL_MEDIUM_F32                  u32 = 0x8DF1
GL_HIGH_F32                    u32 = 0x8DF2
GL_LOW_INT                        u32 = 0x8DF3
GL_MEDIUM_INT                     u32 = 0x8DF4
GL_HIGH_INT                       u32 = 0x8DF5
GL_SHADER_COMPILER                u32 = 0x8DFA
GL_SHADER_BINARY_FORMATS          u32 = 0x8DF8
GL_NUM_SHADER_BINARY_FORMATS      u32 = 0x8DF9
GL_MAX_VERTEX_UNIFORM_VECTORS     u32 = 0x8DFB
GL_MAX_VARYING_VECTORS            u32 = 0x8DFC
GL_MAX_FRAGMENT_UNIFORM_VECTORS   u32 = 0x8DFD
GL_RGB565                         u32 = 0x8D62
GL_PROGRAM_BINARY_RETRIEVABLE_HINT u32 = 0x8257
GL_PROGRAM_BINARY_LENGTH          u32 = 0x8741
GL_NUM_PROGRAM_BINARY_FORMATS     u32 = 0x87FE
GL_PROGRAM_BINARY_FORMATS         u32 = 0x87FF
GL_VERTEX_SHADER_BIT              u32 = 0x00000001
GL_FRAGMENT_SHADER_BIT            u32 = 0x00000002
GL_GEOMETRY_SHADER_BIT            u32 = 0x00000004
GL_TESS_CONTROL_SHADER_BIT        u32 = 0x00000008
GL_TESS_EVALUATION_SHADER_BIT     u32 = 0x00000010
GL_ALL_SHADER_BITS                u32 = 0xFFFFFFFF
GL_PROGRAM_SEPARABLE              u32 = 0x8258
GL_ACTIVE_PROGRAM                 u32 = 0x8259
GL_PROGRAM_PIPELINE_BINDING       u32 = 0x825A
GL_MAX_VIEWPORTS                  u32 = 0x825B
GL_VIEWPORT_SUBPIXEL_BITS         u32 = 0x825C
GL_VIEWPORT_BOUNDS_RANGE          u32 = 0x825D
GL_LAYER_PROVOKING_VERTEX         u32 = 0x825E
GL_VIEWPORT_INDEX_PROVOKING_VERTEX u32 = 0x825F
GL_UNDEFINED_VERTEX               u32 = 0x8260
GL_VERSION_1_0 u32 = 1
GL_VERSION_1_1 u32 = 1
GL_VERSION_1_2 u32 = 1
GL_VERSION_1_3 u32 = 1
GL_VERSION_1_4 u32 = 1
GL_VERSION_1_5 u32 = 1
GL_VERSION_2_0 u32 = 1
GL_VERSION_2_1 u32 = 1
GL_VERSION_3_0 u32 = 1
GL_VERSION_3_1 u32 = 1
GL_VERSION_3_2 u32 = 1
GL_VERSION_3_3 u32 = 1
GL_VERSION_4_0 u32 = 1
GL_VERSION_4_1 u32 = 1

@extern
{
    //fn glFrontFace(i32 mode)
    //fn glHint(i32 target, i32 mode)
    //fn glLineWidth(f32 width)
    //fn glPointSize(f32 size)
    //fn glPolygonMode(i32 face, u32 mode)
    //fn glScissor(i32 x, i32 y, i32 width, i32 height)
    //fn glTexParameterf(u32 target, u32 pname, f32 param)
    //fn glTexParameterfv(u32 target, u32 pname, f32 ^ params)
    glTexParameteri fn(target u32, pname u32, param i32)
    //fn glTexParameteriv(u32 target, u32 pname, i32 ^ params)
    //fn glTexImage1D(u32 target, i32 level, i32 internalformat, i32 width, i32 border, u32 format, u32 ttype, voidptr pixels)
    glTexImage2D fn(target u32, level i32, internalformat i32, width i32, height i32, border i32, format u32, ttype u32, pixels voidptr)
    //fn glDrawBuffer(u32 mode)
    glClear fn(mask u32)
    glClearColor fn(red f32, green f32, blue f32, alpha f32)
    //fn glClearStencil(i32 s)
    //fn glClearDepth(f64 depth)
    //fn glStencilMask(u32 mask)
    //fn glColorMask(i8 red, i8 green, i8 blue, i8 alpha)
    //fn glDepthMask(i8 flag)
    //fn glDisable(u32 cap)
    glEnable fn(cap u32)
    //fn glFinish()
    //fn glFlush()
    glBlendFunc fn(sfactor u32, dfactor u32)
    //fn glLogicOp(u32 opcode)
    //fn glStencilFunc(u32 func, i32 sref, u32 mask)
    //fn glStencilOp(u32 fail, u32 zfail, u32 zpass)
    //fn glDepthfn(u32 func)
    //fn glPixelStoref(u32 pname, f32 param)
    //fn glPixelStorei(u32 pname, i32 param)
    //fn glReadBuffer(u32 mode)
    //fn glReadPixels(i32 x, i32 y, i32 width, i32 height, u32 format, u32 ttype, voidptr pixels)
    //fn glGetBooleanv(u32 pname, i8 ^ params)
    //fn glGetDoublev(u32 pname, f64 ^ params)
    glGetError fn()u32
    //fn glGetFloatv(u32 pname, f32 ^ params)
    //fn glGetIntegerv(u32 pname, i32 ^ params)
    //fn glGetString(u32 name)i8 ^
    //fn glGetTexImage(u32 target, i32 level, u32 format, u32 ttype, voidptr pixels)
    //fn glGetTexParameterfv(u32 target, u32 pname, f32 ^ params)
    //fn glGetTexParameteriv(u32 target, u32 pname, i32 ^ params)
    //fn glGetTexLevelParameterfv(u32 target, i32 level, u32 pname, f32 ^ params)
    //fn glGetTexLevelParameteriv(u32 target, i32 level, u32 pname, i32 ^ params)
    //fn glIsEnabled(u32 cap)i8
    //fn glDepthRange(f64 near, f64 far)
    glViewport fn(x i32, y i32, width i32, height i32)
    //fn glDrawArrays(u32 mode, i32 first, i32 count)
    glDrawElements fn(mode u32, count i32, ttype u32, indices voidptr)
    //fn glPolygonOffset(f32 factor, f32 units)
    //fn glCopyTexImage1D(u32 target, i32 level, u32 internalformat, i32 x, i32 y, i32 width, i32 border)
    //fn glCopyTexImage2D(u32 target, i32 level, u32 internalformat, i32 x, i32 y, i32 width, i32 height, i32 border)
    //fn glCopyTexSubImage1D(u32 target, i32 level, i32 xoffset, i32 x, i32 y, i32 width)
    //fn glCopyTexSubImage2D(u32 target, i32 level, i32 xoffset, i32 yoffset, i32 x, i32 y, i32 width, i32 height)
    //fn glTexSubImage1D(u32 target, i32 level, i32 xoffset, i32 width, u32 format, u32 ttype, voidptr pixels)
    //fn glTexSubImage2D(u32 target, i32 level, i32 xoffset, i32 yoffset, i32 width, i32 height, u32 format, u32 ttype, voidptr pixels)
    glBindTexture fn(target u32, texture u32)
    //fn glDeleteTextures(i32 n, u32 ^ textures)
    glGenTextures fn(n i32, textures u32^)
    //fn glIsTexture(u32 texture)i8
    //fn glBlendColor(f32 red, f32 green, f32 blue, f32 alpha)
    //fn glBlendEquation(u32 mode)
    //fn glDrawRangeElements(u32 mode, u32 start, u32 end, i32 count, u32 ttype, voidptr indices)
    //fn glTexImage3D(u32 target, i32 level, i32 internalformat, i32 width, i32 height, i32 depth, i32 border, u32 format, u32 ttype, voidptr pixels)
    //fn glTexSubImage3D(u32 target, i32 level, i32 xoffset, i32 yoffset, i32 zoffset, i32 width, i32 height, i32 depth, u32 format, u32 ttype, voidptr pixels)
    //fn glCopyTexSubImage3D(u32 target, i32 level, i32 xoffset, i32 yoffset, i32 zoffset, i32 x, i32 y, i32 width, i32 height)
    glActiveTexture fn(texture u32)
    //fn glSampleCoverage(f32 value, i8 invert)
    //fn glCompressedTexImage3D(u32 target, i32 level, u32 internalformat, i32 width, i32 height, i32 depth, i32 border, i32 imageSize, voidptr data)
    //fn glCompressedTexImage2D(u32 target, i32 level, u32 internalformat, i32 width, i32 height, i32 border, i32 imageSize, voidptr data)
    //fn glCompressedTexImage1D(u32 target, i32 level, u32 internalformat, i32 width, i32 border, i32 imageSize, voidptr data)
    //fn glCompressedTexSubImage3D(u32 target, i32 level, i32 xoffset, i32 yoffset, i32 zoffset, i32 width, i32 height, i32 depth, u32 format, i32 imageSize, voidptr data)
    //fn glCompressedTexSubImage2D(u32 target, i32 level, i32 xoffset, i32 yoffset, i32 width, i32 height, u32 format, i32 imageSize, voidptr data)
    //fn glCompressedTexSubImage1D(u32 target, i32 level, i32 xoffset, i32 width, u32 format, i32 imageSize, voidptr data)
    //fn glGetCompressedTexImage(u32 target, i32 level, voidptr img)
    //fn glBlendfnSeparate(u32 sfactorRGB, u32 dfactorRGB, u32 sfactorAlpha, u32 dfactorAlpha)
    //fn glMultiDrawArrays(u32 mode, i32 ^ first, i32 ^ count, i32 drawcount)
    //fn glMultiDrawElements(u32 mode, i32 ^ count, u32 ttype, voidptr^ indices, i32 drawcount)
    //fn glPointParameterf(u32 pname, f32 param)
    //fn glPointParameterfv(u32 pname, f32 ^ params)
    //fn glPointParameteri(u32 pname, i32 param)
    //fn glPointParameteriv(u32 pname, i32 ^ params)
    //fn glGenQueries(i32 n, u32 ^ ids)
    //fn glDeleteQueries(i32 n, u32 ^ ids)
    //fn glIsQuery(u32 id)i8
    //fn glBeginQuery(u32 target, u32 id)
    //fn glEndQuery(u32 target)
    //fn glGetQueryiv(u32 target, u32 pname, i32 ^ params)
    //fn glGetQueryObjectiv(u32 id, u32 pname, i32 ^ params)
    //fn glGetQueryObjectuiv(u32 id, u32 pname, u32 ^ params)
    glBindBuffer fn(target u32, buffer u32)
    //fn glDeleteBuffers(i32 n, u32 ^ buffers)
    glGenBuffers fn(n i32, buffers u32^)
    //fn glIsBuffer(u32 buffer)i8
    glBufferData fn(target u32, size i64, data voidptr, usage u32)
    //fn glBufferSubData(u32 target, int offset, int size, voidptr data)
    //fn glGetBufferSubData(u32 target, int offset, int size, voidptr data)
    //fn glMapBuffer(u32 target, u32 access) voidptr
    glUnmapBuffer fn(target u32)i8
    //fn glGetBufferParameteriv(u32 target, u32 pname, i32 ^ params)
    //fn glGetBufferPointerv(u32 target, u32 pname, voidptr^ params)
    //fn glBlendEquationSeparate(u32 modeRGB, u32 modeAlpha)
    glDrawBuffers fn(n i32, bufs u32^)
    //fn glStencilOpSeparate(u32 face, u32 sfail, u32 dpfail, u32 dppass)
    //fn glStencilfnSeparate(u32 face, u32 func, i32 sref, u32 mask)
    //fn glStencilMaskSeparate(u32 face, u32 mask)
    glAttachShader fn(program u32, shader u32)
    //fn glBindAttribLocation(u32 program, u32 index, i8 ^ name)
    glCompileShader fn(shader u32)
    glCreateProgram fn() u32
    glCreateShader fn(theType u32)u32
    glDeleteProgram fn(program u32)
    glDeleteShader fn(shader u32)
    //fn glDetachShader(u32 program, u32 shader)
    //fn glDisableVertexAttribArray(u32 index)
    glEnableVertexAttribArray fn(index u32)
    //fn glGetActiveAttrib(u32 program, u32 index, i32 bufSize, i32 ^ length, i32 ^ size, u32 ^ ttype, i8 ^ name)
    glGetActiveUniform fn(program u32, index u32, bufSize i32, length i32^, size i32^, ttype u32^, name i8^)
    //fn glGetAttachedShaders(u32 program, i32 maxCount, i32 ^ count, u32 ^ shaders)
    //fn glGetAttribLocation(u32 program, i8 ^ name)int
    glGetProgramiv fn(program u32, pname u32, params i32^)
    //fn glGetProgramInfoLog(u32 program, i32 bufSize, i32 ^ length, i8 ^ infoLog)
    glGetShaderiv fn(shader u32, pname u32, params i32^)
    glGetShaderInfoLog fn(shader u32, bufSize i32, length i32^, infoLog i8^)
    //fn glGetShaderSource(u32 shader, i32 bufSize, i32 ^ length, i8 ^ source)
    glGetUniformLocation fn(program u32, name i8^) i32
    //fn glGetUniformfv(u32 program, i32 location, f32 ^ params)
    //fn glGetUniformiv(u32 program, i32 location, i32 ^ params)
    //fn glGetVertexAttribdv(u32 index, u32 pname, f64 ^ params)
    //fn glGetVertexAttribfv(u32 index, u32 pname, f32 ^ params)
    //fn glGetVertexAttribiv(u32 index, u32 pname, i32 ^ params)
    //fn glGetVertexAttribPointerv(u32 index, u32 pname, voidptr^ pointer)
    //fn glIsProgram(u32 program)i8
    //fn glIsShader(u32 shader)i8
    glLinkProgram fn(program u32)
    glShaderSource fn(shader u32, count i32, string i8^^, length i32^)
    glUseProgram fn(program u32)
    //fn glUniform1f(i32 location, f32 v0)
    //fn glUniform2f(i32 location, f32 v0, f32 v1)
    //fn glUniform3f(i32 location, f32 v0, f32 v1, f32 v2)
    //fn glUniform4f(i32 location, f32 v0, f32 v1, f32 v2, f32 v3)
    //fn glUniform1i(i32 location, i32 v0)
    //fn glUniform2i(i32 location, i32 v0, i32 v1)
    //fn glUniform3i(i32 location, i32 v0, i32 v1, i32 v2)
    //fn glUniform4i(i32 location, i32 v0, i32 v1, i32 v2, i32 v3)
    //fn glUniform1fv(i32 location, i32 count, f32 ^ value)
    //fn glUniform2fv(i32 location, i32 count, f32 ^ value)
    //fn glUniform3fv(i32 location, i32 count, f32 ^ value)
    //fn glUniform4fv(i32 location, i32 count, f32 ^ value)
    //fn glUniform1iv(i32 location, i32 count, i32 ^ value)
    //fn glUniform2iv(i32 location, i32 count, i32 ^ value)
    //fn glUniform3iv(i32 location, i32 count, i32 ^ value)
    //fn glUniform4iv(i32 location, i32 count, i32 ^ value)
    //fn glUniformMatrix2fv(i32 location, i32 count, i8 transpose, f32 ^ value)
    //fn glUniformMatrix3fv(i32 location, i32 count, i8 transpose, f32 ^ value)
    //fn glUniformMatrix4fv(i32 location, i32 count, i8 transpose, f32 ^ value)
    //fn glValidateProgram(u32 program)
    //fn glVertexAttrib1d(u32 index, f64 x)
    //fn glVertexAttrib1dv(u32 index, f64 ^ v)
    //fn glVertexAttrib1f(u32 index, f32 x)
    //fn glVertexAttrib1fv(u32 index, f32 ^ v)
    //fn glVertexAttrib1s(u32 index, i16 x)
    //fn glVertexAttrib1sv(u32 index, i16 ^ v)
    //fn glVertexAttrib2d(u32 index, f64 x, f64 y)
    //fn glVertexAttrib2dv(u32 index, f64 ^ v)
    //fn glVertexAttrib2f(u32 index, f32 x, f32 y)
    //fn glVertexAttrib2fv(u32 index, f32 ^ v)
    //fn glVertexAttrib2s(u32 index, i16 x, i16 y)
    //fn glVertexAttrib2sv(u32 index, i16 ^ v)
    //fn glVertexAttrib3d(u32 index, f64 x, f64 y, f64 z)
    //fn glVertexAttrib3dv(u32 index, f64 ^ v)
    //fn glVertexAttrib3f(u32 index, f32 x, f32 y, f32 z)
    //fn glVertexAttrib3fv(u32 index, f32 ^ v)
    //fn glVertexAttrib3s(u32 index, i16 x, i16 y, i16 z)
    //fn glVertexAttrib3sv(u32 index, i16 ^ v)
    //fn glVertexAttrib4Nbv(u32 index, int8 ^ v)
    //fn glVertexAttrib4Niv(u32 index, i32 ^ v)
    //fn glVertexAttrib4Nsv(u32 index, i16 ^ v)
    //fn glVertexAttrib4Nub(u32 index, i8 x, i8 y, i8 z, i8 w)
    //fn glVertexAttrib4Nubv(u32 index, i8 ^ v)
    //fn glVertexAttrib4Nuiv(u32 index, u32 ^ v)
    //fn glVertexAttrib4Nusv(u32 index, ui16 ^ v)
    //fn glVertexAttrib4bv(u32 index, int8 ^ v)
    //fn glVertexAttrib4d(u32 index, f64 x, f64 y, f64 z, f64 w)
    //fn glVertexAttrib4dv(u32 index, f64 ^ v)
    //fn glVertexAttrib4f(u32 index, f32 x, f32 y, f32 z, f32 w)
    //fn glVertexAttrib4fv(u32 index, f32 ^ v)
    //fn glVertexAttrib4iv(u32 index, i32 ^ v)
    //fn glVertexAttrib4s(u32 index, i16 x, i16 y, i16 z, i16 w)
    //fn glVertexAttrib4sv(u32 index, i16 ^ v)
    //fn glVertexAttrib4ubv(u32 index, i8 ^ v)
    //fn glVertexAttrib4uiv(u32 index, u32 ^ v)
    //fn glVertexAttrib4usv(u32 index, ui16 ^ v)
    glVertexAttribPointer fn(index u32, size i32, ttype u32, normalized i8, stride i32, pointer voidptr)
    //fn glUniformMatrix2x3fv(i32 location, i32 count, i8 transpose, f32 ^ value)
    //fn glUniformMatrix3x2fv(i32 location, i32 count, i8 transpose, f32 ^ value)
    //fn glUniformMatrix2x4fv(i32 location, i32 count, i8 transpose, f32 ^ value)
    //fn glUniformMatrix4x2fv(i32 location, i32 count, i8 transpose, f32 ^ value)
    //fn glUniformMatrix3x4fv(i32 location, i32 count, i8 transpose, f32 ^ value)
    //fn glUniformMatrix4x3fv(i32 location, i32 count, i8 transpose, f32 ^ value)
    //fn glColorMaski(u32 index, i8 r, i8 g, i8 b, i8 a)
    //fn glGetBooleani_v(u32 target, u32 index, i8 ^ data)
    //fn glGetIntegeri_v(u32 target, u32 index, i32 ^ data)
    //fn glEnablei(u32 target, u32 index)
    //fn glDisablei(u32 target, u32 index)
    //fn glIsEnabledi(u32 target, u32 index)i8
    //fn glBeginTransformFeedback(u32 primitiveMode)
    //fn glEndTransformFeedback()
    //fn glBindBufferRange(u32 target, u32 index, u32 buffer, int offset, int size)
    glBindBufferBase fn(target u32, index u32, buffer u32)
    //fn glTransformFeedbackVaryings(u32 program, i32 count, int8 ^^ varyings, u32 bufferMode)
    //fn glGetTransformFeedbackVarying(u32 program, u32 index, i32 bufSize, i32 ^ length, i32 ^ size, u32 ^ ttype, int8 ^ name)
    //fn glClampColor(u32 target, u32 clamp)
    //fn glBeginConditionalRender(u32 id, u32 mode)
    //fn glEndConditionalRender()
    //fn glVertexAttribIPointer(u32 index, i32 size, u32 ttype, i32 stride, voidptr pointer)
    //fn glGetVertexAttribIiv(u32 index, u32 pname, i32 ^ params)
    //fn glGetVertexAttribIuiv(u32 index, u32 pname, u32 ^ params)
    //fn glVertexAttribI1i(u32 index, i32 x)
    //fn glVertexAttribI2i(u32 index, i32 x, i32 y)
    //fn glVertexAttribI3i(u32 index, i32 x, i32 y, i32 z)
    //fn glVertexAttribI4i(u32 index, i32 x, i32 y, i32 z, i32 w)
    //fn glVertexAttribI1ui(u32 index, u32 x)
    //fn glVertexAttribI2ui(u32 index, u32 x, u32 y)
    //fn glVertexAttribI3ui(u32 index, u32 x, u32 y, u32 z)
    //fn glVertexAttribI4ui(u32 index, u32 x, u32 y, u32 z, u32 w)
    //fn glVertexAttribI1iv(u32 index, i32 ^ v)
    //fn glVertexAttribI2iv(u32 index, i32 ^ v)
    //fn glVertexAttribI3iv(u32 index, i32 ^ v)
    //fn glVertexAttribI4iv(u32 index, i32 ^ v)
    //fn glVertexAttribI1uiv(u32 index, u32 ^ v)
    //fn glVertexAttribI2uiv(u32 index, u32 ^ v)
    //fn glVertexAttribI3uiv(u32 index, u32 ^ v)
    //fn glVertexAttribI4uiv(u32 index, u32 ^ v)
    //fn glVertexAttribI4bv(u32 index, int8 ^ v)
    //fn glVertexAttribI4sv(u32 index, i16 ^ v)
    //fn glVertexAttribI4ubv(u32 index, i8 ^ v)
    //fn glVertexAttribI4usv(u32 index, ui16 ^ v)
    //fn glGetUniformuiv(u32 program, i32 location, u32 ^ params)
    //fn glBindFragDataLocation(u32 program, u32 color, int8 ^ name)
    //fn glGetFragDataLocation(u32 program, int8 ^ name)int
    //fn glUniform1ui(i32 location, u32 v0)
    //fn glUniform2ui(i32 location, u32 v0, u32 v1)
    //fn glUniform3ui(i32 location, u32 v0, u32 v1, u32 v2)
    //fn glUniform4ui(i32 location, u32 v0, u32 v1, u32 v2, u32 v3)
    //fn glUniform1uiv(i32 location, i32 count, u32 ^ value)
    //fn glUniform2uiv(i32 location, i32 count, u32 ^ value)
    //fn glUniform3uiv(i32 location, i32 count, u32 ^ value)
    //fn glUniform4uiv(i32 location, i32 count, u32 ^ value)
    //fn glTexParameterIiv(u32 target, u32 pname, i32 ^ params)
    //fn glTexParameterIuiv(u32 target, u32 pname, u32 ^ params)
    //fn glGetTexParameterIiv(u32 target, u32 pname, i32 ^ params)
    //fn glGetTexParameterIuiv(u32 target, u32 pname, u32 ^ params)
    //fn glClearBufferiv(u32 buffer, i32 drawbuffer, i32 ^ value)
    //fn glClearBufferuiv(u32 buffer, i32 drawbuffer, u32 ^ value)
    //fn glClearBufferfv(u32 buffer, i32 drawbuffer, f32 ^ value)
    //fn glClearBufferfi(u32 buffer, i32 drawbuffer, f32 depth, i32 stencil)
    //fn glGetStringi(u32 name, u32 index)i8 ^
    //fn glDrawArraysInstanced(u32 mode, i32 first, i32 count, i32 instancecount)
    //fn glDrawElementsInstanced(u32 mode, i32 count, u32 ttype, voidptr indices, i32 instancecount)
    //fn glTexBuffer(u32 target, u32 internalformat, u32 buffer)
    //fn glPrimitiveRestartIndex(u32 index)
    //fn glGetInteger64i_v(u32 target, u32 index, int ^ data)
    //fn glGetBufferParameteri64v(u32 target, u32 pname, int ^ params)
    //fn glFramebufferTexture(u32 target, u32 attachment, u32 texture, i32 level)
    //fn glVertexAttribDivisor(u32 index, u32 divisor)
    //fn glMinSampleShading(f32 value)
    //fn glBlendEquationi(u32 buf, u32 mode)
    //fn glBlendEquationSeparatei(u32 buf, u32 modeRGB, u32 modeAlpha)
    //fn glBlendfni(u32 buf, u32 src, u32 dst)
    //fn glBlendfnSeparatei(u32 buf, u32 srcRGB, u32 dstRGB, u32 srcAlpha, u32 dstAlpha)
    //fn glIsRenderbuffer(u32 renderbuffer)i8
    //fn glBindRenderbuffer(u32 target, u32 renderbuffer)
    //fn glDeleteRenderbuffers(i32 n, u32 ^ renderbuffers)
    //fn glGenRenderbuffers(i32 n, u32 ^ renderbuffers)
    //fn glRenderbufferStorage(u32 target, u32 internalformat, i32 width, i32 height)
    //fn glGetRenderbufferParameteriv(u32 target, u32 pname, i32 ^ params)
    //fn glIsFramebuffer(u32 framebuffer)i8
    glBindFramebuffer fn(target u32, framebuffer u32)
    //fn glDeleteFramebuffers(i32 n, u32 ^ framebuffers)
    glGenFramebuffers fn(n i32, framebuffers u32^)
    glCheckFramebufferStatus fn(target u32)u32
    //fn glFramebufferTexture1D(u32 target, u32 attachment, u32 textarget, u32 texture, i32 level)
    glFramebufferTexture2D fn(target u32, attachment u32, textarget u32, texture u32, level i32)
    //fn glFramebufferTexture3D(u32 target, u32 attachment, u32 textarget, u32 texture, i32 level, i32 zoffset)
    //fn glFramebufferRenderbuffer(u32 target, u32 attachment, u32 renderbuffertarget, u32 renderbuffer)
    //fn glGetFramebufferAttachmentParameteriv(u32 target, u32 attachment, u32 pname, i32 ^ params)
    //fn glGenerateMipmap(u32 target)
    //fn glBlitFramebuffer(i32 srcX0, i32 srcY0, i32 srcX1, i32 srcY1, i32 dstX0, i32 dstY0, i32 dstX1, i32 dstY1, u32 mask, u32 filter)
    //fn glRenderbufferStorageMultisample(u32 target, i32 samples, u32 internalformat, i32 width, i32 height)
    //fn glFramebufferTextureLayer(u32 target, u32 attachment, u32 texture, i32 level, i32 layer)
    glMapBufferRange fn(target u32, offset i64, length i64, access u32) voidptr
    //fn glFlushMappedBufferRange(u32 target, int offset, int length)
    glBindVertexArray fn(array u32)
    //fn glDeleteVertexArrays(i32 n, u32 ^ arrays)
    glGenVertexArrays fn(n i32, arrays u32^)
    //fn glIsVertexArray(u32 array)i8
    //fn glGetUniformIndices(u32 program, i32 uniformCount, i8 ^^ uniformNames, u32 ^ uniformIndices)
    //fn glGetActiveUniformsiv(u32 program, i32 uniformCount, u32 ^ uniformIndices, u32 pname, i32 ^ params)
    //fn glGetActiveUniformName(u32 program, u32 uniformIndex, i32 bufSize, i32 ^ length, i8 ^ uniformName)
    glGetUniformBlockIndex fn(program u32, uniformBlockName i8^)u32
    //fn glGetActiveUniformBlockiv(u32 program, u32 uniformBlockIndex, u32 pname, i32 ^ params)
    //fn glGetActiveUniformBlockName(u32 program, u32 uniformBlockIndex, i32 bufSize, i32 ^ length, i8 ^ uniformBlockName)
    glUniformBlockBinding fn(program u32, uniformBlockIndex u32, uniformBlockBinding u32)
    //fn glCopyBufferSubData(u32 readTarget, u32 writeTarget, int readOffset, int writeOffset, int size)
    //fn glDrawElementsBaseVertex(u32 mode, i32 count, u32 ttype, voidptr indices, i32 basevertex)
    //fn glDrawRangeElementsBaseVertex(u32 mode, u32 start, u32 end, i32 count, u32 ttype, voidptr indices, i32 basevertex)
    //fn glDrawElementsInstancedBaseVertex(u32 mode, i32 count, u32 ttype, voidptr indices, i32 instancecount, i32 basevertex)
    //fn glMultiDrawElementsBaseVertex(u32 mode, i32 ^ count, u32 ttype, voidptr^ indices, i32 drawcount, i32 ^ basevertex)
    //fn glProvokingVertex(u32 mode)
    //// fn glFenceSync(u32 condition, u32 flags)struct __GLsync ^
    //// fn glIsSync(struct __GLsync ^ sync)i8
    //// fn glDeleteSync(struct __GLsync ^ sync)
    //// fn glClientWaitSync(struct __GLsync ^ sync, u32 flags, uint timeout)uint
    //// fn glWaitSync(struct __GLsync ^ sync, u32 flags, uint timeout)
    //// fn glGetInteger64v(u32 pname, int ^ params)
    //// fn glGetSynciv(struct __GLsync ^ sync, u32 pname, i32 bufSize, i32 ^ length, i32 ^ values)
    //fn glTexImage2DMultisample(u32 target, i32 samples, i32 internalformat, i32 width, i32 height, i8 fixedsamplelocations)
    //fn glTexImage3DMultisample(u32 target, i32 samples, i32 internalformat, i32 width, i32 height, i32 depth, i8 fixedsamplelocations)
    //fn glGetMultisamplefv(u32 pname, u32 index, f32 ^ value)
    //fn glSampleMaski(u32 index, u32 mask)
    //fn glBindFragDataLocationIndexed(u32 program, u32 colorNumber, u32 index, int8 ^ name)
    //fn glGetFragDataIndex(u32 program, int8 ^ name)int
    //fn glGenSamplers(i32 count, u32 ^ samplers)
    //fn glDeleteSamplers(i32 count, u32 ^ samplers)
    //fn glIsSampler(u32 sampler)i8
    //fn glBindSampler(u32 unit, u32 sampler)
    //fn glSamplerParameteri(u32 sampler, u32 pname, i32 param)
    //fn glSamplerParameteriv(u32 sampler, u32 pname, i32 ^ param)
    //fn glSamplerParameterf(u32 sampler, u32 pname, f32 param)
    //fn glSamplerParameterfv(u32 sampler, u32 pname, f32 ^ param)
    //fn glSamplerParameterIiv(u32 sampler, u32 pname, i32 ^ param)
    //fn glSamplerParameterIuiv(u32 sampler, u32 pname, u32 ^ param)
    //fn glGetSamplerParameteriv(u32 sampler, u32 pname, i32 ^ params)
    //fn glGetSamplerParameterIiv(u32 sampler, u32 pname, i32 ^ params)
    //fn glGetSamplerParameterfv(u32 sampler, u32 pname, f32 ^ params)
    //fn glGetSamplerParameterIuiv(u32 sampler, u32 pname, u32 ^ params)
    //fn glQueryCounter(u32 id, u32 target)
    //fn glGetQueryObjecti64v(u32 id, u32 pname, int ^ params)
    //fn glGetQueryObjectui64v(u32 id, u32 pname, uint ^ params)
    //fn glVertexAttribP1ui(u32 index, u32 ttype, i8 normalized, u32 value)
    //fn glVertexAttribP1uiv(u32 index, u32 ttype, i8 normalized, u32 ^ value)
    //fn glVertexAttribP2ui(u32 index, u32 ttype, i8 normalized, u32 value)
    //fn glVertexAttribP2uiv(u32 index, u32 ttype, i8 normalized, u32 ^ value)
    //fn glVertexAttribP3ui(u32 index, u32 ttype, i8 normalized, u32 value)
    //fn glVertexAttribP3uiv(u32 index, u32 ttype, i8 normalized, u32 ^ value)
    //fn glVertexAttribP4ui(u32 index, u32 ttype, i8 normalized, u32 value)
    //fn glVertexAttribP4uiv(u32 index, u32 ttype, i8 normalized, u32 ^ value)
    //fn glDrawArraysIndirect(u32 mode, voidptr indirect)
    //fn glDrawElementsIndirect(u32 mode, u32 ttype, voidptr indirect)
    //fn glUniform1d(i32 location, f64 x)
    //fn glUniform2d(i32 location, f64 x, f64 y)
    //fn glUniform3d(i32 location, f64 x, f64 y, f64 z)
    //fn glUniform4d(i32 location, f64 x, f64 y, f64 z, f64 w)
    //fn glUniform1dv(i32 location, i32 count, f64 ^ value)
    //fn glUniform2dv(i32 location, i32 count, f64 ^ value)
    //fn glUniform3dv(i32 location, i32 count, f64 ^ value)
    //fn glUniform4dv(i32 location, i32 count, f64 ^ value)
    //fn glUniformMatrix2dv(i32 location, i32 count, i8 transpose, f64 ^ value)
    //fn glUniformMatrix3dv(i32 location, i32 count, i8 transpose, f64 ^ value)
    //fn glUniformMatrix4dv(i32 location, i32 count, i8 transpose, f64 ^ value)
    //fn glUniformMatrix2x3dv(i32 location, i32 count, i8 transpose, f64 ^ value)
    //fn glUniformMatrix2x4dv(i32 location, i32 count, i8 transpose, f64 ^ value)
    //fn glUniformMatrix3x2dv(i32 location, i32 count, i8 transpose, f64 ^ value)
    //fn glUniformMatrix3x4dv(i32 location, i32 count, i8 transpose, f64 ^ value)
    //fn glUniformMatrix4x2dv(i32 location, i32 count, i8 transpose, f64 ^ value)
    //fn glUniformMatrix4x3dv(i32 location, i32 count, i8 transpose, f64 ^ value)
    //fn glGetUniformdv(u32 program, i32 location, f64 ^ params)
    //fn glGetSubroutineUniformLocation(u32 program, u32 shaderttype, int8 ^ name)int
    //fn glGetSubroutineIndex(u32 program, u32 shaderttype, int8 ^ name)uint
    //fn glGetActiveSubroutineUniformiv(u32 program, u32 shaderttype, u32 index, u32 pname, i32 ^ values)
    //fn glGetActiveSubroutineUniformName(u32 program, u32 shaderttype, u32 index, i32 bufsize, i32 ^ length, int8 ^ name)
    //fn glGetActiveSubroutineName(u32 program, u32 shaderttype, u32 index, i32 bufsize, i32 ^ length, int8 ^ name)
    //fn glUniformSubroutinesuiv(u32 shaderttype, i32 count, u32 ^ indices)
    //fn glGetUniformSubroutineuiv(u32 shaderttype, i32 location, u32 ^ params)
    //fn glGetProgramStageiv(u32 program, u32 shaderttype, u32 pname, i32 ^ values)
    //fn glPatchParameteri(u32 pname, i32 value)
    //fn glPatchParameterfv(u32 pname, f32 ^ values)
    //fn glBindTransformFeedback(u32 target, u32 id)
    //fn glDeleteTransformFeedbacks(i32 n, u32 ^ ids)
    //fn glGenTransformFeedbacks(i32 n, u32 ^ ids)
    //fn glIsTransformFeedback(u32 id)i8
    //fn glPauseTransformFeedback()
    //fn glResumeTransformFeedback()
    //fn glDrawTransformFeedback(u32 mode, u32 id)
    //fn glDrawTransformFeedbackStream(u32 mode, u32 id, u32 stream)
    //fn glBeginQueryIndexed(u32 target, u32 index, u32 id)
    //fn glEndQueryIndexed(u32 target, u32 index)
    //fn glGetQueryIndexediv(u32 target, u32 index, u32 pname, i32 ^ params)
    //fn glReleaseShaderCompiler()
    //fn glShaderBinary(i32 count, u32 ^ shaders, u32 binaryformat, voidptr binary, i32 length)
    //fn glGetShaderPrecisionFormat(u32 shaderttype, u32 precisionttype, i32 ^ range, i32 ^ precision)
    //fn glDepthRangef(f32 n, f32 f)
    //fn glClearDepthf(f32 d)
    //fn glGetProgramBinary(u32 program, i32 bufSize, i32 ^ length, u32 ^ binaryFormat, voidptr binary)
    //fn glProgramBinary(u32 program, u32 binaryFormat, voidptr binary, i32 length)
    //fn glProgramParameteri(u32 program, u32 pname, i32 value)
    //fn glUseProgramStages(u32 pipeline, u32 stages, u32 program)
    //fn glActiveShaderProgram(u32 pipeline, u32 program)
    //fn glCreateShaderProgramv(u32 ttype, i32 count, int8 ^^ strings)uint
    //fn glBindProgramPipeline(u32 pipeline)
    //fn glDeleteProgramPipelines(i32 n, u32 ^ pipelines)
    //fn glGenProgramPipelines(i32 n, u32 ^ pipelines)
    //fn glIsProgramPipeline(u32 pipeline)i8
    //fn glGetProgramPipelineiv(u32 pipeline, u32 pname, i32 ^ params)
    glProgramUniform1i fn(program u32, location i32, v0 i32)
    //fn glProgramUniform1iv(u32 program, i32 location, i32 count, i32 ^ value)
    //fn glProgramUniform1f(u32 program, i32 location, f32 v0)
    //fn glProgramUniform1fv(u32 program, i32 location, i32 count, f32 ^ value)
    //fn glProgramUniform1d(u32 program, i32 location, f64 v0)
    //fn glProgramUniform1dv(u32 program, i32 location, i32 count, f64 ^ value)
    //fn glProgramUniform1ui(u32 program, i32 location, u32 v0)
    //fn glProgramUniform1uiv(u32 program, i32 location, i32 count, u32 ^ value)
    //fn glProgramUniform2i(u32 program, i32 location, i32 v0, i32 v1)
    //fn glProgramUniform2iv(u32 program, i32 location, i32 count, i32 ^ value)
    //fn glProgramUniform2f(u32 program, i32 location, f32 v0, f32 v1)
    //fn glProgramUniform2fv(u32 program, i32 location, i32 count, f32 ^ value)
    //fn glProgramUniform2d(u32 program, i32 location, f64 v0, f64 v1)
    //fn glProgramUniform2dv(u32 program, i32 location, i32 count, f64 ^ value)
    //fn glProgramUniform2ui(u32 program, i32 location, u32 v0, u32 v1)
    //fn glProgramUniform2uiv(u32 program, i32 location, i32 count, u32 ^ value)
    //fn glProgramUniform3i(u32 program, i32 location, i32 v0, i32 v1, i32 v2)
    //fn glProgramUniform3iv(u32 program, i32 location, i32 count, i32 ^ value)
    //fn glProgramUniform3f(u32 program, i32 location, f32 v0, f32 v1, f32 v2)
    //fn glProgramUniform3fv(u32 program, i32 location, i32 count, f32 ^ value)
    //fn glProgramUniform3d(u32 program, i32 location, f64 v0, f64 v1, f64 v2)
    //fn glProgramUniform3dv(u32 program, i32 location, i32 count, f64 ^ value)
    //fn glProgramUniform3ui(u32 program, i32 location, u32 v0, u32 v1, u32 v2)
    //fn glProgramUniform3uiv(u32 program, i32 location, i32 count, u32 ^ value)
    //fn glProgramUniform4i(u32 program, i32 location, i32 v0, i32 v1, i32 v2, i32 v3)
    //fn glProgramUniform4iv(u32 program, i32 location, i32 count, i32 ^ value)
    //fn glProgramUniform4f(u32 program, i32 location, f32 v0, f32 v1, f32 v2, f32 v3)
    //fn glProgramUniform4fv(u32 program, i32 location, i32 count, f32 ^ value)
    //fn glProgramUniform4d(u32 program, i32 location, f64 v0, f64 v1, f64 v2, f64 v3)
    //fn glProgramUniform4dv(u32 program, i32 location, i32 count, f64 ^ value)
    //fn glProgramUniform4ui(u32 program, i32 location, u32 v0, u32 v1, u32 v2, u32 v3)
    //fn glProgramUniform4uiv(u32 program, i32 location, i32 count, u32 ^ value)
    //fn glProgramUniformMatrix2fv(u32 program, i32 location, i32 count, i8 transpose, f32 ^ value)
    //fn glProgramUniformMatrix3fv(u32 program, i32 location, i32 count, i8 transpose, f32 ^ value)
    //fn glProgramUniformMatrix4fv(u32 program, i32 location, i32 count, i8 transpose, f32 ^ value)
    //fn glProgramUniformMatrix2dv(u32 program, i32 location, i32 count, i8 transpose, f64 ^ value)
    //fn glProgramUniformMatrix3dv(u32 program, i32 location, i32 count, i8 transpose, f64 ^ value)
    //fn glProgramUniformMatrix4dv(u32 program, i32 location, i32 count, i8 transpose, f64 ^ value)
    //fn glProgramUniformMatrix2x3fv(u32 program, i32 location, i32 count, i8 transpose, f32 ^ value)
    //fn glProgramUniformMatrix3x2fv(u32 program, i32 location, i32 count, i8 transpose, f32 ^ value)
    //fn glProgramUniformMatrix2x4fv(u32 program, i32 location, i32 count, i8 transpose, f32 ^ value)
    //fn glProgramUniformMatrix4x2fv(u32 program, i32 location, i32 count, i8 transpose, f32 ^ value)
    //fn glProgramUniformMatrix3x4fv(u32 program, i32 location, i32 count, i8 transpose, f32 ^ value)
    //fn glProgramUniformMatrix4x3fv(u32 program, i32 location, i32 count, i8 transpose, f32 ^ value)
    //fn glProgramUniformMatrix2x3dv(u32 program, i32 location, i32 count, i8 transpose, f64 ^ value)
    //fn glProgramUniformMatrix3x2dv(u32 program, i32 location, i32 count, i8 transpose, f64 ^ value)
    //fn glProgramUniformMatrix2x4dv(u32 program, i32 location, i32 count, i8 transpose, f64 ^ value)
    //fn glProgramUniformMatrix4x2dv(u32 program, i32 location, i32 count, i8 transpose, f64 ^ value)
    //fn glProgramUniformMatrix3x4dv(u32 program, i32 location, i32 count, i8 transpose, f64 ^ value)
    //fn glProgramUniformMatrix4x3dv(u32 program, i32 location, i32 count, i8 transpose, f64 ^ value)
    //fn glValidateProgramPipeline(u32 pipeline)
    //fn glGetProgramPipelineInfoLog(u32 pipeline, i32 bufSize, i32 ^ length, int8 ^ infoLog)
    //fn glVertexAttribL1d(u32 index, f64 x)
    //fn glVertexAttribL2d(u32 index, f64 x, f64 y)
    //fn glVertexAttribL3d(u32 index, f64 x, f64 y, f64 z)
    //fn glVertexAttribL4d(u32 index, f64 x, f64 y, f64 z, f64 w)
    //fn glVertexAttribL1dv(u32 index, f64 ^ v)
    //fn glVertexAttribL2dv(u32 index, f64 ^ v)
    //fn glVertexAttribL3dv(u32 index, f64 ^ v)
    //fn glVertexAttribL4dv(u32 index, f64 ^ v)
    //fn glVertexAttribLPointer(u32 index, i32 size, u32 ttype, i32 stride, voidptr pointer)
    //fn glGetVertexAttribLdv(u32 index, u32 pname, f64 ^ params)
    //fn glViewportArrayv(u32 first, i32 count, f32 ^ v)
    //fn glViewportIndexedf(u32 index, f32 x, f32 y, f32 w, f32 h)
    //fn glViewportIndexedfv(u32 index, f32 ^ v)
    //fn glScissorArrayv(u32 first, i32 count, i32 ^ v)
    //fn glScissorIndexed(u32 index, i32 left, i32 bottom, i32 width, i32 height)
    //fn glScissorIndexedv(u32 index, i32 ^ v)
    //fn glDepthRangeArrayv(u32 first, i32 count, f64 ^ v)
    //fn glDepthRangeIndexed(u32 index, f64 n, f64 f)
    //fn glGetFloati_v(u32 target, u32 index, f32 ^ data)
    //fn glGetDoublei_v(u32 target, u32 index, f64 ^ data)
    glBlendFuncSeparatei fn(buf u32, srcRGB u32, dstRGB u32, srcAlpha u32, dstAlpha u32)
}
