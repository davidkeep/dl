//
//  Conversions.dl
//  Created by David on 10/20/16.
//

i64 fn(i u8)  i64 { return cast(i64, i) }
i64 fn(i u32) i64 { return cast(i64, i) }
i64 fn(i u64) i64 { return cast(i64, i) }
i64 fn(i i8)  i64 { return cast(i64, i) }
i64 fn(i i32) i64 { return cast(i64, i) }
i64 fn(i i64) i64 { return cast(i64, i) }
i64 fn(i f32) i64 { return cast(i64, i) }
i64 fn(i f64) i64 { return cast(i64, i) }

i32 fn(i u8)  i32 { return cast(i32, i) }
i32 fn(i u32) i32 { return cast(i32, i) }
i32 fn(i u64) i32 { return cast(i32, i) }
i32 fn(i i8)  i32 { return cast(i32, i) }
i32 fn(i i32) i32 { return cast(i32, i) }
i32 fn(i i64) i32 { return cast(i32, i) }
i32 fn(i f32) i32 { return cast(i32, i) }
i32 fn(i f64) i32 { return cast(i32, i) }

i8 fn(i u8)  i8 { return cast(i8, i) }
i8 fn(i u32) i8 { return cast(i8, i) }
i8 fn(i u64) i8 { return cast(i8, i) }
i8 fn(i i8)  i8 { return cast(i8, i) }
i8 fn(i i32) i8 { return cast(i8, i) }
i8 fn(i i64) i8 { return cast(i8, i) }
i8 fn(i f32) i8 { return cast(i8, i) }
i8 fn(i f64) i8 { return cast(i8, i) }

u8 fn(i u8)  u8 { return cast(u8, i) }
u8 fn(i u32) u8 { return cast(u8, i) }
u8 fn(i u64) u8 { return cast(u8, i) }
u8 fn(i i8)  u8 { return cast(u8, i) }
u8 fn(i i32) u8 { return cast(u8, i) }
u8 fn(i i64) u8 { return cast(u8, i) }
u8 fn(i f32) u8 { return cast(u8, i) }
u8 fn(i f64) u8 { return cast(u8, i) }

u32 fn(i u8)  u32 { return cast(u32, i) }
u32 fn(i u32) u32 { return cast(u32, i) }
u32 fn(i u64) u32 { return cast(u32, i) }
u32 fn(i i8)  u32 { return cast(u32, i) }
u32 fn(i i32) u32 { return cast(u32, i) }
u32 fn(i i64) u32 { return cast(u32, i) }
u32 fn(i f32) u32 { return cast(u32, i) }
u32 fn(i f64) u32 { return cast(u32, i) }

u64 fn(i u8)  u64 { return cast(u64, i) }
u64 fn(i u32) u64 { return cast(u64, i) }
u64 fn(i u64) u64 { return cast(u64, i) }
u64 fn(i i8)  u64 { return cast(u64, i) }
u64 fn(i i32) u64 { return cast(u64, i) }
u64 fn(i i64) u64 { return cast(u64, i) }
u64 fn(i f32) u64 { return cast(u64, i) }
u64 fn(i f64) u64 { return cast(u64, i) }

f32 fn(i u8)  f32 { return cast(f32, i) }
f32 fn(i u32) f32 { return cast(f32, i) }
f32 fn(i u64) f32 { return cast(f32, i) }
f32 fn(i i8)  f32 { return cast(f32, i) }
f32 fn(i i32) f32 { return cast(f32, i) }
f32 fn(i i64) f32 { return cast(f32, i) }
f32 fn(i f32) f32 { return cast(f32, i) }
f32 fn(i f64) f32 { return cast(f32, i) }

f64 fn(i u8)  f64 { return cast(f64, i) }
f64 fn(i u32) f64 { return cast(f64, i) }
f64 fn(i u64) f64 { return cast(f64, i) }
f64 fn(i i8)  f64 { return cast(f64, i) }
f64 fn(i i32) f64 { return cast(f64, i) }
f64 fn(i i64) f64 { return cast(f64, i) }
f64 fn(i f32) f64 { return cast(f64, i) }
f64 fn(i f64) f64 { return cast(f64, i) }


// fn TO(uint8 i) TO 		{ return cast(i, TO) }
// fn TO(uint32 i) TO 		{ return cast(i, TO) }
// fn TO(uint i) TO 		{ return cast(i, TO) }
// fn TO(int8 i) TO 		{ return cast(i, TO) }
// fn TO(int32 i) TO 		{ return cast(i, TO) }
// fn TO(int i) TO 		{ return cast(i, TO) }
// fn TO(float32 i) TO 	{ return cast(i, TO) }