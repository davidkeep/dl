#include "../lang/Header.h"
struct TypeInfo;
struct i64i64;
struct f64f64;
struct f32f32;
struct u64u64;
struct str;
struct Command;
struct DynamicArray1;
struct Vec2;
struct RenderTarget;
struct Texture;
struct DynamicArray2;
struct Vec4;
struct PositionTextureColor;
struct Shader;
struct Material;
struct Sprite;
struct ShadingPass;
struct DynamicArray3;
struct strShader;
struct TableNode1;
struct DynamicArray4;
struct Table1;
struct strTexture;
struct TableNode2;
struct DynamicArray5;
struct Table2;
struct Renderer;
struct Callback1;
struct DynamicArray6;
struct Window;
struct Mat4;
struct Camera;
struct Scene;
struct DynamicArray7;
struct Archive;
struct Array1;
struct Entity;
struct Array2;
struct Vec3;
struct DynamicArray8;
struct Transform;
struct Array3;
struct Array4;
struct World;
struct Quaternion;
struct Array5;
struct File;
struct Token;
struct Lexer;
struct DynamicArray9;
struct Array6;
struct Buffer;
struct Array7;
struct GLFWmonitor;
struct GLFWwindow;
struct Array8;
struct CameraBlock;
struct TransformBlock;
struct GLFWvidmode;
struct GLFWgammaramp;
struct GLFWimage;
struct GLFWcursor;
struct PositionTextureColorColor;
struct Ray;
struct TypeInfo{
	u32 size;
};
struct i64i64{
	i64 i0;
	i64 i1;
};
struct f64f64{
	f64 i0;
	f64 i1;
};
struct f32f32{
	f32 i0;
	f32 i1;
};
struct u64u64{
	u64 i0;
	u64 i1;
};
struct str{
	i64 length;
	i8* chars;
};
struct Command{
	u32 vao;
	i32 count;
};
struct DynamicArray1{
	i64 capacity;
	i64 length;
	Command* elements;
};
struct Vec2{
	f32 x;
	f32 y;
};
struct RenderTarget{
	Vec2 position;
	Vec2 size;
	u32 framebuffer;
};
struct Texture{
	u32 id;
	Vec2 size;
	str file;
};
struct DynamicArray2{
	i64 capacity;
	i64 length;
	Texture** elements;
};
struct Vec4{
	f32 x;
	f32 y;
	f32 z;
	f32 w;
};
struct PositionTextureColor{
	Vec2 position;
	Vec2 texture;
	Vec4 color;
};
struct Shader{
	u32 id;
	str vs;
	str fs;
};
struct Material{
	Shader shader;
	Texture texture;
};
struct Sprite{
	PositionTextureColor* vertices;
	u16* indices;
	u32 vao;
	Material material;
	u32 buffer;
	u32 index;
	Vec4 color;
	u32 count;
};
struct ShadingPass{
	i8 render;
	i8 clear;
	RenderTarget target;
	DynamicArray2 in;
	DynamicArray2 out;
	Sprite sprite;
};
struct DynamicArray3{
	i64 capacity;
	i64 length;
	ShadingPass* elements;
};
struct strShader{
	str i0;
	Shader i1;
};
struct TableNode1{
	i64 hash;
	str key;
	Shader value;
};
struct DynamicArray4{
	i64 capacity;
	i64 length;
	TableNode1* elements;
};
struct Table1{
	i64 length;
	i64 capacity;
	DynamicArray4 data;
};
struct strTexture{
	str i0;
	Texture i1;
};
struct TableNode2{
	i64 hash;
	str key;
	Texture value;
};
struct DynamicArray5{
	i64 capacity;
	i64 length;
	TableNode2* elements;
};
struct Table2{
	i64 length;
	i64 capacity;
	DynamicArray5 data;
};
struct Renderer{
	DynamicArray1 commands;
	DynamicArray3 passes;
	Table1 shaders;
	Table2 textures;
};
struct Callback1{
	voidptr self;
	void (*callback)(voidptr, Vec2);
};
struct DynamicArray6{
	i64 capacity;
	i64 length;
	Callback1* elements;
};
struct Window{
	Vec2 size;
	f32 time;
	Vec2 mouse;
	DynamicArray6 resized;
};
struct Mat4{
	Vec4 x;
	Vec4 y;
	Vec4 z;
	Vec4 w;
};
struct Camera{
	Mat4 projection;
	Mat4 view;
	Mat4 viewProjection;
	Vec2 viewportPosition;
	Vec2 viewportScale;
	f32 near;
	f32 far;
	f32 fieldOfView;
	Vec4 clearColor;
	i8 clear;
};
struct Scene{
	Renderer* renderer;
	Window* window;
	Camera* camera;
};
struct DynamicArray7{
	i64 capacity;
	i64 length;
	Archive* elements;
};
struct Archive{
	i64 Type;
	str id;
	str string;
	f64 number;
	DynamicArray7 array;
};
struct Array1{
	i64 length;
	i64* elements;
};
struct Entity{
	i64 id;
	i64 version;
};
struct Array2{
	i64 length;
	Entity* elements;
};
struct Vec3{
	f32 x;
	f32 y;
	f32 z;
};
struct DynamicArray8{
	i64 capacity;
	i64 length;
	Transform** elements;
};
struct Transform{
	Entity entity;
	Mat4 matrix;
	Vec3 position;
	Vec3 scale;
	Transform* parent;
	DynamicArray8 children;
};
struct Array3{
	i64 length;
	Transform* elements;
};
struct Array4{
	i64 length;
	Sprite* elements;
};
struct World{
	i64 count;
	Array1 components;
	Array2 entities;
	Array3 transforms;
	Array4 sprites;
};
struct Quaternion{
	f32 w;
	f32 x;
	f32 y;
	f32 z;
};
struct Array5{
	i64 length;
	i8* elements;
};
struct Token{
	i32 Type;
	str string;
	f64 number;
};
struct Lexer{
	File* file;
	i32 nextCharacter;
	Token token;
};
struct DynamicArray9{
	i64 capacity;
	i64 length;
	i8* elements;
};
struct Array6{
	i64 length;
	u8* elements;
};
struct Buffer{
	u32 id;
	u32 buffertype;
	i64 length;
	voidptr ptr;
};
struct Array7{
	i64 length;
	u16* elements;
};
struct Array8{
	i64 length;
	u32* elements;
};
struct CameraBlock{
	Mat4 viewProjection;
	Vec2 windowSize;
	Vec2 pixelSize;
	f32 time;
};
struct TransformBlock{
	Mat4 matrix;
};
struct PositionTextureColorColor{
	Vec3 position;
	Vec2 texture;
	Vec4 color;
	Vec4 colorAlt;
};
struct Ray{
	Vec3 orgin;
	Vec3 direction;
};
extern "C" void abort();
void Load97(str file,Scene& scene);
i32 main();
void Init0474(Array5& array,i64 length);
void Init0467(Array1& array,i64 length);
void Init2487(Array2& array,i64 length);
void Init3489(Array3& array,i64 length);
void Init4491(Array4& array,i64 length);
void Init5574(Array5& array,i64 length);
void Init6642(Array8& array,i64 length);
i8& OpArray0476(Array5& array,i64 index);
i8& OpArray1480(Array5& array,i64 index);
i64& OpArray2512(Array1& array,i64 index);
i64& OpArray3515(Array1& array,i64 index);
i64& OpArray4516(Array1& array,i64 index);
Sprite& OpArray5517(Array4& array,i64 index);
u8& OpArray6521(Array6& array,i64 index);
u8& OpArray7522(Array6& array,i64 index);
u8& OpArray8523(Array6& array,i64 index);
u8& OpArray9524(Array6& array,i64 index);
u8& OpArray10525(Array6& array,i64 index);
u8& OpArray11526(Array6& array,i64 index);
u8& OpArray12527(Array6& array,i64 index);
u16& OpArray13565(Array7& array,i64 index);
u16& OpArray14566(Array7& array,i64 index);
u16& OpArray15567(Array7& array,i64 index);
u16& OpArray16568(Array7& array,i64 index);
u16& OpArray17569(Array7& array,i64 index);
u16& OpArray18570(Array7& array,i64 index);
i8& OpArray19576(Array5& array,i64 index);
i64& OpArray20619(Array1& array,i64 index);
i64& OpArray21620(Array1& array,i64 index);
Transform& OpArray22621(Array3& array,i64 index);
u32& OpArray23646(Array8& array,i64 index);
i64& OpArray24672(Array1& array,i64 index);
Transform& OpArray25673(Array3& array,i64 index);
Sprite& OpArray26674(Array4& array,i64 index);
Archive& OpArray0477(DynamicArray7& array,i64 index);
Archive& OpArray1478(DynamicArray7& array,i64 index);
Archive& OpArray2479(DynamicArray7& array,i64 index);
Archive& OpArray0469(DynamicArray7& array,i64 index);
Archive& OpArray4481(DynamicArray7& array,i64 index);
Archive& OpArray5485(DynamicArray7& array,i64 index);
Archive& OpArray6486(DynamicArray7& array,i64 index);
Archive& OpArray7513(DynamicArray7& array,i64 index);
TableNode2& OpArray8531(DynamicArray5& array,i64 index);
TableNode2& OpArray9532(DynamicArray5& array,i64 index);
TableNode2& OpArray10533(DynamicArray5& array,i64 index);
TableNode2& OpArray11534(DynamicArray5& array,i64 index);
TableNode2& OpArray12535(DynamicArray5& array,i64 index);
TableNode2& OpArray13536(DynamicArray5& array,i64 index);
TableNode2& OpArray14537(DynamicArray5& array,i64 index);
TableNode2& OpArray15538(DynamicArray5& array,i64 index);
TableNode2& OpArray16539(DynamicArray5& array,i64 index);
TableNode2& OpArray17543(DynamicArray5& array,i64 index);
TableNode2& OpArray18544(DynamicArray5& array,i64 index);
TableNode2& OpArray19545(DynamicArray5& array,i64 index);
TableNode2& OpArray20546(DynamicArray5& array,i64 index);
TableNode2& OpArray21547(DynamicArray5& array,i64 index);
TableNode2& OpArray22548(DynamicArray5& array,i64 index);
TableNode2& OpArray23549(DynamicArray5& array,i64 index);
TableNode2& OpArray24550(DynamicArray5& array,i64 index);
TableNode2& OpArray25551(DynamicArray5& array,i64 index);
TableNode2& OpArray26555(DynamicArray5& array,i64 index);
TableNode2& OpArray27556(DynamicArray5& array,i64 index);
TableNode2& OpArray28557(DynamicArray5& array,i64 index);
TableNode2& OpArray29558(DynamicArray5& array,i64 index);
TableNode2& OpArray30559(DynamicArray5& array,i64 index);
TableNode2& OpArray31560(DynamicArray5& array,i64 index);
TableNode2& OpArray32561(DynamicArray5& array,i64 index);
TableNode2& OpArray33562(DynamicArray5& array,i64 index);
TableNode2& OpArray34563(DynamicArray5& array,i64 index);
TableNode1& OpArray35580(DynamicArray4& array,i64 index);
TableNode1& OpArray36581(DynamicArray4& array,i64 index);
TableNode1& OpArray37582(DynamicArray4& array,i64 index);
TableNode1& OpArray38583(DynamicArray4& array,i64 index);
TableNode1& OpArray39584(DynamicArray4& array,i64 index);
TableNode1& OpArray40585(DynamicArray4& array,i64 index);
TableNode1& OpArray41586(DynamicArray4& array,i64 index);
TableNode1& OpArray42587(DynamicArray4& array,i64 index);
TableNode1& OpArray43588(DynamicArray4& array,i64 index);
TableNode1& OpArray44592(DynamicArray4& array,i64 index);
TableNode1& OpArray45593(DynamicArray4& array,i64 index);
TableNode1& OpArray46594(DynamicArray4& array,i64 index);
TableNode1& OpArray47595(DynamicArray4& array,i64 index);
TableNode1& OpArray48596(DynamicArray4& array,i64 index);
TableNode1& OpArray49597(DynamicArray4& array,i64 index);
TableNode1& OpArray50598(DynamicArray4& array,i64 index);
TableNode1& OpArray51599(DynamicArray4& array,i64 index);
TableNode1& OpArray52600(DynamicArray4& array,i64 index);
TableNode1& OpArray53604(DynamicArray4& array,i64 index);
TableNode1& OpArray54605(DynamicArray4& array,i64 index);
TableNode1& OpArray55606(DynamicArray4& array,i64 index);
TableNode1& OpArray56607(DynamicArray4& array,i64 index);
TableNode1& OpArray57608(DynamicArray4& array,i64 index);
TableNode1& OpArray58609(DynamicArray4& array,i64 index);
TableNode1& OpArray59610(DynamicArray4& array,i64 index);
TableNode1& OpArray60611(DynamicArray4& array,i64 index);
TableNode1& OpArray61612(DynamicArray4& array,i64 index);
Archive& OpArray62613(DynamicArray7& array,i64 index);
Archive& OpArray63614(DynamicArray7& array,i64 index);
Archive& OpArray64615(DynamicArray7& array,i64 index);
Archive& OpArray65616(DynamicArray7& array,i64 index);
Archive& OpArray66617(DynamicArray7& array,i64 index);
Archive& OpArray67622(DynamicArray7& array,i64 index);
Archive& OpArray68623(DynamicArray7& array,i64 index);
Archive& OpArray69624(DynamicArray7& array,i64 index);
Transform*& OpArray70625(DynamicArray8& array,i64 index);
Texture*& OpArray71644(DynamicArray2& array,i64 index);
Texture*& OpArray72645(DynamicArray2& array,i64 index);
ShadingPass& OpArray73664(DynamicArray3& array,i64 index);
ShadingPass& OpArray74665(DynamicArray3& array,i64 index);
ShadingPass& OpArray75666(DynamicArray3& array,i64 index);
Texture*& OpArray76667(DynamicArray2& array,i64 index);
ShadingPass& OpArray77668(DynamicArray3& array,i64 index);
ShadingPass& OpArray78669(DynamicArray3& array,i64 index);
ShadingPass& OpArray79676(DynamicArray3& array,i64 index);
ShadingPass& OpArray80677(DynamicArray3& array,i64 index);
Archive& OpArray81679(DynamicArray7& array,i64 index);
Archive& OpArray82680(DynamicArray7& array,i64 index);
Archive& OpArray83681(DynamicArray7& array,i64 index);
Archive& OpArray84682(DynamicArray7& array,i64 index);
Archive& OpArray85684(DynamicArray7& array,i64 index);
Archive& OpArray86685(DynamicArray7& array,i64 index);
Archive& OpArray87686(DynamicArray7& array,i64 index);
Archive& OpArray88688(DynamicArray7& array,i64 index);
Archive& OpArray89689(DynamicArray7& array,i64 index);
Archive& OpArray90690(DynamicArray7& array,i64 index);
Archive& OpArray91691(DynamicArray7& array,i64 index);
Archive& OpArray92692(DynamicArray7& array,i64 index);
void Init0493(DynamicArray7& array);
void Init1495(DynamicArray9& array);
void Init2502(DynamicArray9& array);
void Init3626(DynamicArray3& array);
void Init4628(DynamicArray4& array);
void Init5631(DynamicArray5& array);
void Init6633(DynamicArray2& array);
void Init7634(DynamicArray2& array);
void Push0482(DynamicArray7& array,Archive value);
void Push1496(DynamicArray9& array,i8 value);
void Push2499(DynamicArray9& array,i8 value);
void Push3503(DynamicArray9& array,i8 value);
void Push4506(DynamicArray9& array,i8 value);
void Push5509(DynamicArray7& array,Archive value);
void Push6635(DynamicArray2& array,Texture* value);
void Push7638(DynamicArray2& array,Texture* value);
void Push8647(DynamicArray3& array,ShadingPass value);
void Push9650(DynamicArray3& array,ShadingPass value);
void Push10653(DynamicArray2& array,Texture* value);
void Push11656(DynamicArray2& array,Texture* value);
void Push12659(DynamicArray3& array,ShadingPass value);
void Push13693(DynamicArray8& array,Transform* value);
void Reserve0483(DynamicArray7& array,i64 size);
void Reserve1484(DynamicArray7& array,i64 size);
void Reserve2497(DynamicArray9& array,i64 size);
void Reserve3498(DynamicArray9& array,i64 size);
void Reserve4500(DynamicArray9& array,i64 size);
void Reserve5501(DynamicArray9& array,i64 size);
void Reserve6504(DynamicArray9& array,i64 size);
void Reserve7505(DynamicArray9& array,i64 size);
void Reserve8507(DynamicArray9& array,i64 size);
void Reserve9508(DynamicArray9& array,i64 size);
void Reserve10510(DynamicArray7& array,i64 size);
void Reserve11511(DynamicArray7& array,i64 size);
void Reserve12636(DynamicArray2& array,i64 size);
void Reserve13637(DynamicArray2& array,i64 size);
void Reserve14639(DynamicArray2& array,i64 size);
void Reserve15640(DynamicArray2& array,i64 size);
void Reserve16648(DynamicArray3& array,i64 size);
void Reserve17649(DynamicArray3& array,i64 size);
void Reserve18651(DynamicArray3& array,i64 size);
void Reserve19652(DynamicArray3& array,i64 size);
void Reserve20654(DynamicArray2& array,i64 size);
void Reserve21655(DynamicArray2& array,i64 size);
void Reserve22657(DynamicArray2& array,i64 size);
void Reserve23658(DynamicArray2& array,i64 size);
void Reserve24660(DynamicArray3& array,i64 size);
void Reserve25661(DynamicArray3& array,i64 size);
void Reserve26694(DynamicArray8& array,i64 size);
void Reserve27695(DynamicArray8& array,i64 size);
void Resize0530(DynamicArray5& array,i64 size);
void Resize1542(DynamicArray5& array,i64 size);
void Resize2554(DynamicArray5& array,i64 size);
void Resize3579(DynamicArray4& array,i64 size);
void Resize4591(DynamicArray4& array,i64 size);
void Resize5603(DynamicArray4& array,i64 size);
void Resize6629(DynamicArray4& array,i64 size);
void Resize7632(DynamicArray5& array,i64 size);
void Resize8678(DynamicArray7& array,i64 size);
void Resize9683(DynamicArray7& array,i64 size);
void Resize10687(DynamicArray7& array,i64 size);
void Init0627(Table1& table);
void Init1630(Table2& table);
void Resize0529(Table2& table);
void Resize1541(Table2& table);
void Resize2553(Table2& table);
void Resize3578(Table1& table);
void Resize4590(Table1& table);
void Resize5602(Table1& table);
Texture& OpArray0528(Table2& table,str key);
Texture& OpArray1540(Table2& table,str key);
Texture& OpArray2552(Table2& table,str key);
Shader& OpArray3577(Table1& table,str key);
Shader& OpArray4589(Table1& table,str key);
Shader& OpArray5601(Table1& table,str key);
extern "C" i32 putchar(i32 c);
extern "C" void abort();
void Print120(str string);
void Println121(str string);
void Error122(str string);
str add123(str a,str b);
str String124(i8* chars,i64 length);
str String125(i64 number);
str String126(f32 number);
i64 Equal127(str l,str r);
i64 Hash128(str string);
extern "C" i32 glfwInit();
extern "C" void glfwWindowHint(i32 hint,i32 value);
extern "C" GLFWwindow* glfwCreateWindow(u32 width,u32 height,i8* title,GLFWmonitor* monitor,GLFWwindow* share);
extern "C" u32 glfwWindowShouldClose(GLFWwindow* window);
extern "C" void glfwPollEvents();
extern "C" void glfwMakeContextCurrent(GLFWwindow* window);
extern "C" void glfwSwapBuffers(GLFWwindow* window);
extern "C" void glTexParameteri(u32 target,u32 pname,i32 param);
extern "C" void glTexImage2D(u32 target,i32 level,i32 internalformat,i32 width,i32 height,i32 border,u32 format,u32 ttype,voidptr pixels);
extern "C" void glClear(u32 mask);
extern "C" void glClearColor(f32 red,f32 green,f32 blue,f32 alpha);
extern "C" void glEnable(u32 cap);
extern "C" void glBlendFunc(u32 sfactor,u32 dfactor);
extern "C" u32 glGetError();
extern "C" void glViewport(i32 x,i32 y,i32 width,i32 height);
extern "C" void glDrawElements(u32 mode,i32 count,u32 ttype,voidptr indices);
extern "C" void glBindTexture(u32 target,u32 texture);
extern "C" void glGenTextures(i32 n,u32* textures);
extern "C" void glActiveTexture(u32 texture);
extern "C" void glBindBuffer(u32 target,u32 buffer);
extern "C" void glGenBuffers(i32 n,u32* buffers);
extern "C" void glBufferData(u32 target,i64 size,voidptr data,u32 usage);
extern "C" i8 glUnmapBuffer(u32 target);
extern "C" void glDrawBuffers(i32 n,u32* bufs);
extern "C" void glAttachShader(u32 program,u32 shader);
extern "C" void glCompileShader(u32 shader);
extern "C" u32 glCreateProgram();
extern "C" u32 glCreateShader(u32 theType);
extern "C" void glDeleteProgram(u32 program);
extern "C" void glDeleteShader(u32 shader);
extern "C" void glEnableVertexAttribArray(u32 index);
extern "C" void glGetActiveUniform(u32 program,u32 index,i32 bufSize,i32* length,i32* size,u32* ttype,i8* name);
extern "C" void glGetProgramiv(u32 program,u32 pname,i32* params);
extern "C" void glGetShaderiv(u32 shader,u32 pname,i32* params);
extern "C" void glGetShaderInfoLog(u32 shader,i32 bufSize,i32* length,i8* infoLog);
extern "C" i32 glGetUniformLocation(u32 program,i8* name);
extern "C" void glLinkProgram(u32 program);
extern "C" void glShaderSource(u32 shader,i32 count,i8** string,i32* length);
extern "C" void glUseProgram(u32 program);
extern "C" void glVertexAttribPointer(u32 index,i32 size,u32 ttype,i8 normalized,i32 stride,voidptr pointer);
extern "C" void glBindBufferBase(u32 target,u32 index,u32 buffer);
extern "C" void glBindFramebuffer(u32 target,u32 framebuffer);
extern "C" void glGenFramebuffers(i32 n,u32* framebuffers);
extern "C" u32 glCheckFramebufferStatus(u32 target);
extern "C" void glFramebufferTexture2D(u32 target,u32 attachment,u32 textarget,u32 texture,i32 level);
extern "C" voidptr glMapBufferRange(u32 target,i64 offset,i64 length,u32 access);
extern "C" void glBindVertexArray(u32 array);
extern "C" void glGenVertexArrays(i32 n,u32* arrays);
extern "C" u32 glGetUniformBlockIndex(u32 program,i8* uniformBlockName);
extern "C" void glUniformBlockBinding(u32 program,u32 uniformBlockIndex,u32 uniformBlockBinding);
extern "C" void glProgramUniform1i(u32 program,i32 location,i32 v0);
extern "C" void glBlendFuncSeparatei(u32 buf,u32 srcRGB,u32 dstRGB,u32 srcAlpha,u32 dstAlpha);
str String191(Vec4 v);
str String192(Vec3 v);
str String193(Vec2 v);
Vec4& OpArray194(Mat4& matrix,i64 index);
f32& OpArray195(Vec4& v,i64 index);
Mat4 Mat4196(f32 v);
Mat4 Mat4Scale197(Vec3 scale);
Mat4 Mat4Transform198(Vec3 v);
Mat4 mul199(Mat4 lhs,Mat4 rhs);
Vec4 Vec4200(f32 x,f32 y,f32 z,f32 w);
Vec4 Vec4201(Vec3 v,f32 w);
Vec4 Vec4202(f32 v);
Vec3 Vec3203(f32 x,f32 y,f32 z);
Vec3 Vec3204(f32 value);
Vec3 Vec3205(Vec2 v);
Vec2 Vec2206(Vec3 v);
Vec2 Vec2207(f32 x,f32 y);
Vec2 Vec2208(f32 v);
Vec3 sub209(Vec3 lhs,Vec3 rhs);
Vec3 sub210(Vec3 lhs,Vec2 rhs);
Vec2 sub211(Vec2 lhs,Vec2 rhs);
Vec3 add212(Vec3 lhs,Vec3 rhs);
Vec3 add213(Vec3 lhs,Vec2 rhs);
Vec2 add214(Vec2 lhs,Vec2 rhs);
Vec3 mul215(Vec3 lhs,Vec3 rhs);
Vec4 mul216(f32 l,Vec4 r);
Vec4 mul217(Vec4 l,f32 r);
Vec3 mul218(f32 l,Vec3 r);
Vec3 mul219(Vec3 l,f32 r);
Vec2 mul220(f32 l,Vec2 r);
Vec2 mul221(Vec2 l,f32 r);
Vec2 div222(Vec2 l,f32 r);
Vec3 div223(Vec3 l,f32 r);
Vec4 div224(Vec4 l,f32 r);
f32 Dot225(Vec3 l,Vec3 r);
f32 Dot226(Vec2 l,Vec2 r);
Vec3 Cross227(Vec3 l,Vec3 r);
f32 Length228(Vec3 v);
f32 Length229(Vec2 v);
Vec3 Normalize230(Vec3 v);
Vec2 Normalize231(Vec2 v);
void Init234(World& world);
i64 Bits235();
i64 Bits236();
Array3& Components237();
Array4& Components238();
i8 Retrieve0671(i64 i,Transform*& a,Sprite*& b);
Sprite& AddComponent0514(Entity entity);
Transform& AddComponent1618(Entity entity);
Entity CreateEntity243();
RenderTarget RenderTarget246();
void GenerateFrameBuffer247(RenderTarget& target,DynamicArray2& textures);
void Bind248(RenderTarget target,Window window);
void BindScreen249();
ShadingPass ShadingPass251();
ShadingPass PostProcess252(Sprite& sprite);
void Refresh253(ShadingPass& pass);
Shader Shader255(Renderer& renderer,str vs,str fs);
Texture Texture256(Renderer& renderer,str file);
Renderer Renderer257();
void Draw258(Sprite& sprite,Transform& transform);
u32 InterfaceBinding261();
u32 InterfaceBinding262();
Buffer CreateInterfaceBlock0662(CameraBlock block,i64 count);
Buffer CreateInterfaceBlock1670(TransformBlock block,i64 count);
void LoadInterfaceBlock0663(Buffer buffer,CameraBlock block);
void LoadInterfaceBlock1675(Buffer buffer,TransformBlock block);
void Draw265(Renderer& renderer,World& world);
void Render266(Renderer& renderer,World& world,Camera camera,Window window);
Archive Archive268();
void Load269(Archive self,Vec4& v);
void Load270(Archive self,Vec3& v);
void Save271(Archive& self,u64 v);
void Save272(Archive& self,i64 v);
void Save273(Archive& self,f64 v);
void Save274(Archive& self,f32 v);
void Save275(Archive& self,str string);
void Save276(Archive& self,Vec4 v);
void Save277(Archive& self,Vec3 v);
void Save278(Archive& self,Vec2 v);
Archive& OpArray279(Archive& self,str field);
void Save280(Archive& self,Transform transform);
void Save281(Archive& self,Sprite sprite);
void PrintDepth282(i64 depth);
void WriteDepth283(File* file,i64 depth);
void Print284(Archive& self,i64& depth);
void Write285(File* file,str string);
void ArchiveFile286(Archive& self,File* file,i64 depth);
void ArchiveFile287(Archive& self,str file);
Archive Unarchive288(str file);
i8 Unarchive289(Archive& archive,Lexer& lexer);
extern "C" voidptr malloc(u64 c);
extern "C" voidptr calloc(u64 nmem,u64 size);
extern "C" voidptr realloc(voidptr nmem,u64 size);
extern "C" voidptr memcpy(voidptr dst,voidptr src,u64 count);
extern "C" voidptr memset(voidptr ptr,i32 value,u64 count);
void Assert295(i8 condition,str reason);
void Assert296(i8 condition);
i8* Alloc0470(i64 len);
i8* Alloc1475(i64 len);
i64* Alloc0468(i64 len);
Entity* Alloc3488(i64 len);
Transform* Alloc4490(i64 len);
Sprite* Alloc5492(i64 len);
PositionTextureColor* Alloc6518(i64 len);
u16* Alloc7519(i64 len);
i8* Alloc8571(i64 len);
i8* Alloc9572(i64 len);
i8* Alloc10573(i64 len);
i8* Alloc11575(i64 len);
u32* Alloc12643(i64 len);
void CopyPtr0471(i8* from,i8* to,i64 len);
void CopyPtr1472(i8* from,i8* to,i64 len);
i64 i64300(u8 i);
i64 i64301(u32 i);
i64 i64302(u64 i);
i64 i64303(i8 i);
i64 i64304(i32 i);
i64 i64305(i64 i);
i64 i64306(f32 i);
i64 i64307(f64 i);
i32 i32308(u8 i);
i32 i32309(u32 i);
i32 i32310(u64 i);
i32 i32311(i8 i);
i32 i32312(i32 i);
i32 i32313(i64 i);
i32 i32314(f32 i);
i32 i32315(f64 i);
i8 i8316(u8 i);
i8 i8317(u32 i);
i8 i8318(u64 i);
i8 i8319(i8 i);
i8 i8320(i32 i);
i8 i8321(i64 i);
i8 i8322(f32 i);
i8 i8323(f64 i);
u8 u8324(u8 i);
u8 u8325(u32 i);
u8 u8326(u64 i);
u8 u8327(i8 i);
u8 u8328(i32 i);
u8 u8329(i64 i);
u8 u8330(f32 i);
u8 u8331(f64 i);
u32 u32332(u8 i);
u32 u32333(u32 i);
u32 u32334(u64 i);
u32 u32335(i8 i);
u32 u32336(i32 i);
u32 u32337(i64 i);
u32 u32338(f32 i);
u32 u32339(f64 i);
u64 u64340(u8 i);
u64 u64341(u32 i);
u64 u64342(u64 i);
u64 u64343(i8 i);
u64 u64344(i32 i);
u64 u64345(i64 i);
u64 u64346(f32 i);
u64 u64347(f64 i);
f32 f32348(u8 i);
f32 f32349(u32 i);
f32 f32350(u64 i);
f32 f32351(i8 i);
f32 f32352(i32 i);
f32 f32353(i64 i);
f32 f32354(f32 i);
f32 f32355(f64 i);
f64 f64356(u8 i);
f64 f64357(u32 i);
f64 f64358(u64 i);
f64 f64359(i8 i);
f64 f64360(i32 i);
f64 f64361(i64 i);
f64 f64362(f32 i);
f64 f64363(f64 i);
extern "C" f32 cosf(f32 v);
extern "C" f32 sinf(f32 v);
extern "C" f32 tanf(f32 v);
extern "C" f32 fabsf(f32 v);
extern "C" f32 sqrtf(f32 v);
f32 sqrt369(f32 f);
f32 abs370(f32 f);
f32 cos371(f32 f);
f32 sin372(f32 f);
f32 tan373(f32 f);
void Bind378(Material material);
Sprite* Sprite379(Entity entity,Renderer& renderer,str file);
Sprite Sprite380(Renderer& renderer,str file);
void Color381(Sprite& sprite,Vec4 color);
Transform* Transform383(Entity entity);
Vec3 Scale384(Transform self);
void Scale385(Transform& self,Vec3 scale);
Vec3 Position386(Transform& self);
void Position387(Transform& self,Vec3 position);
Vec3 WorldPosition388(Transform self);
void Recalculate389(Transform& self);
void Parent390(Transform& self,Transform& parent);
Buffer Buffer392(u32 buffertype,i64 length);
voidptr Map393(Buffer& buffer,i64 begin,i64 length);
void Unmap394(Buffer buffer);
void Resize395(Buffer buffer,i64 size);
extern "C" u8* stbi_load(i8* file,u32* x,u32* y,u32* comp,u32 req);
extern "C" void stbi_image_free(voidptr retval_from_stbi_load);
Texture Texture402(str file);
Texture Texture403(Vec2 size);
Camera Camera405();
Mat4 Frustum406(f32 left,f32 right,f32 bottom,f32 top,f32 near,f32 far);
Mat4 Perspective407(f32 fovy,f32 aspect,f32 zNear,f32 zFar);
Mat4 Translate408(Vec3 translate);
Vec3 PointAt410(Ray self,f32 distance);
i8 IntersectsSphere411(Ray self,Vec3 point,f32 radius);
f32 IntersectsSphereDistance412(Ray self,Vec3 point,f32 radius);
Ray ScreenToRay413(Camera self,Vec2 screen);
Vec4 mul414(Mat4 self,Vec4 v);
Mat4 Inverse415(Mat4 v);
i32 Char418(str char);
Lexer Lexer419(str file);
i32 Peek420(Lexer& self);
i32 Get421(Lexer& self);
extern "C" i32 isspace(i32 v);
extern "C" i32 isalpha(i32 v);
extern "C" i32 isalnum(i32 v);
extern "C" i32 isdigit(i32 v);
void Consume426(Lexer& self);
Token Next427(Lexer& self);
Shader Shader429(str vs,str fs);
void GLError430(str string);
void Bind431(Shader shader);
u32 CompileShader432(u32 shaderType,str data,str file);
void AddUniforms433(Shader shader);
str ReadFile434(str file);
Mat4 GetRotationMatrix436(Quaternion q);
Quaternion CreateQuaternion437(Vec3 axis,f32 angle);
Quaternion CreateQuaternion438();
void normalize439(Quaternion& v);
Quaternion mul440(Quaternion lhs,Quaternion rhs);
extern "C" File* FileOpen(i8* filename,i8* mode);
extern "C" u32 FileClose(File* file);
extern "C" u64 GetLine(i8** lineptr,u64* n,File* stream);
extern "C" u64 FileRead(i8* f,u64 a,u64 b,File* c);
extern "C" i32 FileGetChar(File* file);
extern "C" u64 FileWrite(voidptr ptr,u64 size,u64 count,File* stream);
extern "C" void FileFlush(File* file);
extern "C" i32 chdir(i8* dir);
