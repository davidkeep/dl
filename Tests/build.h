#include "../lang/Header.h"
struct TypeInfo;
struct i64i64;
struct f64f64;
struct f32f32;
struct u64u64;
struct str;
struct Command;
struct DynamicArray1;
struct Vec2;
struct RenderTarget;
struct Texture;
struct DynamicArray2;
struct Vec4;
struct PositionTextureColor;
struct Shader;
struct Material;
struct Sprite;
struct ShadingPass;
struct DynamicArray3;
struct strShader;
struct TableNode1;
struct DynamicArray4;
struct Table1;
struct strTexture;
struct TableNode2;
struct DynamicArray5;
struct Table2;
struct Renderer;
struct voidptrVec2;
struct Callback1;
struct DynamicArray6;
struct Window;
struct Mat4;
struct Camera;
struct Scene;
struct DynamicArray7;
struct Archive;
struct Array1;
struct Entity;
struct Array2;
struct Vec3;
struct DynamicArray8;
struct Transform;
struct Array3;
struct Array4;
struct World;
struct Quaternion;
struct Array5;
struct File;
struct Token;
struct Lexer;
struct DynamicArray9;
struct Array6;
struct Buffer;
struct Array7;
struct GLFWwindow;
struct GLFWmonitor;
struct Array8;
struct CameraBlock;
struct TransformBlock;
struct GLFWvidmode;
struct GLFWgammaramp;
struct GLFWimage;
struct GLFWcursor;
struct GLFWwindow_u32u32;
struct PositionTextureColorColor;
struct Ray;
struct TypeInfo{
	u32 size;
};
struct i64i64{
	i64 i0;
	i64 i1;
};
struct f64f64{
	f64 i0;
	f64 i1;
};
struct f32f32{
	f32 i0;
	f32 i1;
};
struct u64u64{
	u64 i0;
	u64 i1;
};
struct str{
	i64 length;
	i8* chars;
};
struct Command{
	u32 vao;
	i32 count;
};
struct DynamicArray1{
	i64 capacity;
	i64 length;
	Command* elements;
};
struct Vec2{
	f32 x;
	f32 y;
};
struct RenderTarget{
	Vec2 position;
	Vec2 size;
	u32 framebuffer;
};
struct Texture{
	u32 id;
	Vec2 size;
	str file;
};
struct DynamicArray2{
	i64 capacity;
	i64 length;
	Texture** elements;
};
struct Vec4{
	f32 x;
	f32 y;
	f32 z;
	f32 w;
};
struct PositionTextureColor{
	Vec2 position;
	Vec2 texture;
	Vec4 color;
};
struct Shader{
	u32 id;
	str vs;
	str fs;
};
struct Material{
	Shader shader;
	Texture texture;
};
struct Sprite{
	PositionTextureColor* vertices;
	u16* indices;
	u32 vao;
	Material material;
	u32 buffer;
	u32 index;
	Vec4 color;
	u32 count;
};
struct ShadingPass{
	i8 render;
	i8 clear;
	RenderTarget target;
	DynamicArray2 in;
	DynamicArray2 out;
	Sprite sprite;
};
struct DynamicArray3{
	i64 capacity;
	i64 length;
	ShadingPass* elements;
};
struct strShader{
	str i0;
	Shader i1;
};
struct TableNode1{
	i64 hash;
	str key;
	Shader value;
};
struct DynamicArray4{
	i64 capacity;
	i64 length;
	TableNode1* elements;
};
struct Table1{
	i64 length;
	i64 capacity;
	DynamicArray4 data;
};
struct strTexture{
	str i0;
	Texture i1;
};
struct TableNode2{
	i64 hash;
	str key;
	Texture value;
};
struct DynamicArray5{
	i64 capacity;
	i64 length;
	TableNode2* elements;
};
struct Table2{
	i64 length;
	i64 capacity;
	DynamicArray5 data;
};
struct Renderer{
	DynamicArray1 commands;
	DynamicArray3 passes;
	Table1 shaders;
	Table2 textures;
};
struct voidptrVec2{
	voidptr i0;
	Vec2 i1;
};
struct Callback1{
	voidptr self;
	func func;
};
struct DynamicArray6{
	i64 capacity;
	i64 length;
	Callback1* elements;
};
struct Window{
	Vec2 size;
	f32 time;
	Vec2 mouse;
	DynamicArray6 resized;
};
struct Mat4{
	Vec4 x;
	Vec4 y;
	Vec4 z;
	Vec4 w;
};
struct Camera{
	Mat4 projection;
	Mat4 view;
	Mat4 viewProjection;
	Vec2 viewportPosition;
	Vec2 viewportScale;
	f32 near;
	f32 far;
	f32 fieldOfView;
	Vec4 clearColor;
	i8 clear;
};
struct Scene{
	Renderer* renderer;
	Window* window;
	Camera* camera;
};
struct DynamicArray7{
	i64 capacity;
	i64 length;
	Archive* elements;
};
struct Archive{
	i64 Type;
	str id;
	str string;
	f64 number;
	DynamicArray7 array;
};
struct Array1{
	i64 length;
	i64* elements;
};
struct Entity{
	i64 id;
	i64 version;
};
struct Array2{
	i64 length;
	Entity* elements;
};
struct Vec3{
	f32 x;
	f32 y;
	f32 z;
};
struct DynamicArray8{
	i64 capacity;
	i64 length;
	Transform** elements;
};
struct Transform{
	Entity entity;
	Mat4 matrix;
	Vec3 position;
	Vec3 scale;
	Transform* parent;
	DynamicArray8 children;
};
struct Array3{
	i64 length;
	Transform* elements;
};
struct Array4{
	i64 length;
	Sprite* elements;
};
struct World{
	i64 count;
	Array1 components;
	Array2 entities;
	Array3 transforms;
	Array4 sprites;
};
struct Quaternion{
	f32 w;
	f32 x;
	f32 y;
	f32 z;
};
struct Array5{
	i64 length;
	i8* elements;
};
struct Token{
	i32 Type;
	str string;
	f64 number;
};
struct Lexer{
	File* file;
	i32 nextCharacter;
	Token token;
};
struct DynamicArray9{
	i64 capacity;
	i64 length;
	i8* elements;
};
struct Array6{
	i64 length;
	u8* elements;
};
struct Buffer{
	u32 id;
	u32 buffertype;
	i64 length;
	voidptr ptr;
};
struct Array7{
	i64 length;
	u16* elements;
};
struct Array8{
	i64 length;
	u32* elements;
};
struct CameraBlock{
	Mat4 viewProjection;
	Vec2 windowSize;
	Vec2 pixelSize;
	f32 time;
};
struct TransformBlock{
	Mat4 matrix;
};
struct GLFWwindow_u32u32{
	GLFWwindow* i0;
	u32 i1;
	u32 i2;
};
struct PositionTextureColorColor{
	Vec3 position;
	Vec2 texture;
	Vec4 color;
	Vec4 colorAlt;
};
struct Ray{
	Vec3 orgin;
	Vec3 direction;
};
extern "C" void abort();
void Load97(str file,Scene& scene);
void Test99(voidptr self,i32 t);
void Test100(voidptr self,f32 t);
void Resized101(GLFWwindow* window,u32 x,u32 y);
i32 main();
void Init0479(Array5& array,i64 length);
void Init0472(Array1& array,i64 length);
void Init2492(Array2& array,i64 length);
void Init3494(Array3& array,i64 length);
void Init4496(Array4& array,i64 length);
void Init5579(Array5& array,i64 length);
void Init6647(Array8& array,i64 length);
i8& OpArray0481(Array5& array,i64 index);
i8& OpArray1485(Array5& array,i64 index);
i64& OpArray2517(Array1& array,i64 index);
i64& OpArray3520(Array1& array,i64 index);
i64& OpArray4521(Array1& array,i64 index);
Sprite& OpArray5522(Array4& array,i64 index);
u8& OpArray6526(Array6& array,i64 index);
u8& OpArray7527(Array6& array,i64 index);
u8& OpArray8528(Array6& array,i64 index);
u8& OpArray9529(Array6& array,i64 index);
u8& OpArray10530(Array6& array,i64 index);
u8& OpArray11531(Array6& array,i64 index);
u8& OpArray12532(Array6& array,i64 index);
u16& OpArray13570(Array7& array,i64 index);
u16& OpArray14571(Array7& array,i64 index);
u16& OpArray15572(Array7& array,i64 index);
u16& OpArray16573(Array7& array,i64 index);
u16& OpArray17574(Array7& array,i64 index);
u16& OpArray18575(Array7& array,i64 index);
i8& OpArray19581(Array5& array,i64 index);
i64& OpArray20627(Array1& array,i64 index);
i64& OpArray21628(Array1& array,i64 index);
Transform& OpArray22629(Array3& array,i64 index);
u32& OpArray23651(Array8& array,i64 index);
i64& OpArray24677(Array1& array,i64 index);
Transform& OpArray25678(Array3& array,i64 index);
Sprite& OpArray26679(Array4& array,i64 index);
Archive& OpArray0482(DynamicArray7& array,i64 index);
Archive& OpArray1483(DynamicArray7& array,i64 index);
Archive& OpArray2484(DynamicArray7& array,i64 index);
Archive& OpArray0474(DynamicArray7& array,i64 index);
Archive& OpArray4486(DynamicArray7& array,i64 index);
Archive& OpArray5490(DynamicArray7& array,i64 index);
Archive& OpArray6491(DynamicArray7& array,i64 index);
Archive& OpArray7518(DynamicArray7& array,i64 index);
TableNode2& OpArray8536(DynamicArray5& array,i64 index);
TableNode2& OpArray9537(DynamicArray5& array,i64 index);
TableNode2& OpArray10538(DynamicArray5& array,i64 index);
TableNode2& OpArray11539(DynamicArray5& array,i64 index);
TableNode2& OpArray12540(DynamicArray5& array,i64 index);
TableNode2& OpArray13541(DynamicArray5& array,i64 index);
TableNode2& OpArray14542(DynamicArray5& array,i64 index);
TableNode2& OpArray15543(DynamicArray5& array,i64 index);
TableNode2& OpArray16544(DynamicArray5& array,i64 index);
TableNode2& OpArray17548(DynamicArray5& array,i64 index);
TableNode2& OpArray18549(DynamicArray5& array,i64 index);
TableNode2& OpArray19550(DynamicArray5& array,i64 index);
TableNode2& OpArray20551(DynamicArray5& array,i64 index);
TableNode2& OpArray21552(DynamicArray5& array,i64 index);
TableNode2& OpArray22553(DynamicArray5& array,i64 index);
TableNode2& OpArray23554(DynamicArray5& array,i64 index);
TableNode2& OpArray24555(DynamicArray5& array,i64 index);
TableNode2& OpArray25556(DynamicArray5& array,i64 index);
TableNode2& OpArray26560(DynamicArray5& array,i64 index);
TableNode2& OpArray27561(DynamicArray5& array,i64 index);
TableNode2& OpArray28562(DynamicArray5& array,i64 index);
TableNode2& OpArray29563(DynamicArray5& array,i64 index);
TableNode2& OpArray30564(DynamicArray5& array,i64 index);
TableNode2& OpArray31565(DynamicArray5& array,i64 index);
TableNode2& OpArray32566(DynamicArray5& array,i64 index);
TableNode2& OpArray33567(DynamicArray5& array,i64 index);
TableNode2& OpArray34568(DynamicArray5& array,i64 index);
TableNode1& OpArray35585(DynamicArray4& array,i64 index);
TableNode1& OpArray36586(DynamicArray4& array,i64 index);
TableNode1& OpArray37587(DynamicArray4& array,i64 index);
TableNode1& OpArray38588(DynamicArray4& array,i64 index);
TableNode1& OpArray39589(DynamicArray4& array,i64 index);
TableNode1& OpArray40590(DynamicArray4& array,i64 index);
TableNode1& OpArray41591(DynamicArray4& array,i64 index);
TableNode1& OpArray42592(DynamicArray4& array,i64 index);
TableNode1& OpArray43593(DynamicArray4& array,i64 index);
TableNode1& OpArray44597(DynamicArray4& array,i64 index);
TableNode1& OpArray45598(DynamicArray4& array,i64 index);
TableNode1& OpArray46599(DynamicArray4& array,i64 index);
TableNode1& OpArray47600(DynamicArray4& array,i64 index);
TableNode1& OpArray48601(DynamicArray4& array,i64 index);
TableNode1& OpArray49602(DynamicArray4& array,i64 index);
TableNode1& OpArray50603(DynamicArray4& array,i64 index);
TableNode1& OpArray51604(DynamicArray4& array,i64 index);
TableNode1& OpArray52605(DynamicArray4& array,i64 index);
TableNode1& OpArray53609(DynamicArray4& array,i64 index);
TableNode1& OpArray54610(DynamicArray4& array,i64 index);
TableNode1& OpArray55611(DynamicArray4& array,i64 index);
TableNode1& OpArray56612(DynamicArray4& array,i64 index);
TableNode1& OpArray57613(DynamicArray4& array,i64 index);
TableNode1& OpArray58614(DynamicArray4& array,i64 index);
TableNode1& OpArray59615(DynamicArray4& array,i64 index);
TableNode1& OpArray60616(DynamicArray4& array,i64 index);
TableNode1& OpArray61617(DynamicArray4& array,i64 index);
Archive& OpArray62618(DynamicArray7& array,i64 index);
Archive& OpArray63619(DynamicArray7& array,i64 index);
Archive& OpArray64620(DynamicArray7& array,i64 index);
Archive& OpArray65621(DynamicArray7& array,i64 index);
Archive& OpArray66622(DynamicArray7& array,i64 index);
Archive& OpArray67623(DynamicArray7& array,i64 index);
Archive& OpArray68624(DynamicArray7& array,i64 index);
Archive& OpArray69625(DynamicArray7& array,i64 index);
Transform*& OpArray70630(DynamicArray8& array,i64 index);
Texture*& OpArray71649(DynamicArray2& array,i64 index);
Texture*& OpArray72650(DynamicArray2& array,i64 index);
ShadingPass& OpArray73669(DynamicArray3& array,i64 index);
ShadingPass& OpArray74670(DynamicArray3& array,i64 index);
ShadingPass& OpArray75671(DynamicArray3& array,i64 index);
Texture*& OpArray76672(DynamicArray2& array,i64 index);
ShadingPass& OpArray77673(DynamicArray3& array,i64 index);
ShadingPass& OpArray78674(DynamicArray3& array,i64 index);
ShadingPass& OpArray79681(DynamicArray3& array,i64 index);
ShadingPass& OpArray80682(DynamicArray3& array,i64 index);
Archive& OpArray81684(DynamicArray7& array,i64 index);
Archive& OpArray82686(DynamicArray7& array,i64 index);
Archive& OpArray83688(DynamicArray7& array,i64 index);
Archive& OpArray84689(DynamicArray7& array,i64 index);
Archive& OpArray85690(DynamicArray7& array,i64 index);
Archive& OpArray86691(DynamicArray7& array,i64 index);
Archive& OpArray87692(DynamicArray7& array,i64 index);
Archive& OpArray88693(DynamicArray7& array,i64 index);
Archive& OpArray89694(DynamicArray7& array,i64 index);
Archive& OpArray90695(DynamicArray7& array,i64 index);
Archive& OpArray91696(DynamicArray7& array,i64 index);
Archive& OpArray92697(DynamicArray7& array,i64 index);
void Init0498(DynamicArray7& array);
void Init1500(DynamicArray9& array);
void Init2507(DynamicArray9& array);
void Init3631(DynamicArray3& array);
void Init4633(DynamicArray4& array);
void Init5636(DynamicArray5& array);
void Init6638(DynamicArray2& array);
void Init7639(DynamicArray2& array);
void Push0487(DynamicArray7& array,Archive value);
void Push1501(DynamicArray9& array,i8 value);
void Push2504(DynamicArray9& array,i8 value);
void Push3508(DynamicArray9& array,i8 value);
void Push4511(DynamicArray9& array,i8 value);
void Push5514(DynamicArray7& array,Archive value);
void Push6640(DynamicArray2& array,Texture* value);
void Push7643(DynamicArray2& array,Texture* value);
void Push8652(DynamicArray3& array,ShadingPass value);
void Push9655(DynamicArray3& array,ShadingPass value);
void Push10658(DynamicArray2& array,Texture* value);
void Push11661(DynamicArray2& array,Texture* value);
void Push12664(DynamicArray3& array,ShadingPass value);
void Push13698(DynamicArray8& array,Transform* value);
void Reserve0488(DynamicArray7& array,i64 size);
void Reserve1489(DynamicArray7& array,i64 size);
void Reserve2502(DynamicArray9& array,i64 size);
void Reserve3503(DynamicArray9& array,i64 size);
void Reserve4505(DynamicArray9& array,i64 size);
void Reserve5506(DynamicArray9& array,i64 size);
void Reserve6509(DynamicArray9& array,i64 size);
void Reserve7510(DynamicArray9& array,i64 size);
void Reserve8512(DynamicArray9& array,i64 size);
void Reserve9513(DynamicArray9& array,i64 size);
void Reserve10515(DynamicArray7& array,i64 size);
void Reserve11516(DynamicArray7& array,i64 size);
void Reserve12641(DynamicArray2& array,i64 size);
void Reserve13642(DynamicArray2& array,i64 size);
void Reserve14644(DynamicArray2& array,i64 size);
void Reserve15645(DynamicArray2& array,i64 size);
void Reserve16653(DynamicArray3& array,i64 size);
void Reserve17654(DynamicArray3& array,i64 size);
void Reserve18656(DynamicArray3& array,i64 size);
void Reserve19657(DynamicArray3& array,i64 size);
void Reserve20659(DynamicArray2& array,i64 size);
void Reserve21660(DynamicArray2& array,i64 size);
void Reserve22662(DynamicArray2& array,i64 size);
void Reserve23663(DynamicArray2& array,i64 size);
void Reserve24665(DynamicArray3& array,i64 size);
void Reserve25666(DynamicArray3& array,i64 size);
void Reserve26699(DynamicArray8& array,i64 size);
void Reserve27700(DynamicArray8& array,i64 size);
void Resize0535(DynamicArray5& array,i64 size);
void Resize1547(DynamicArray5& array,i64 size);
void Resize2559(DynamicArray5& array,i64 size);
void Resize3584(DynamicArray4& array,i64 size);
void Resize4596(DynamicArray4& array,i64 size);
void Resize5608(DynamicArray4& array,i64 size);
void Resize6634(DynamicArray4& array,i64 size);
void Resize7637(DynamicArray5& array,i64 size);
void Resize8683(DynamicArray7& array,i64 size);
void Resize9685(DynamicArray7& array,i64 size);
void Resize10687(DynamicArray7& array,i64 size);
void Init0632(Table1& table);
void Init1635(Table2& table);
void Resize0534(Table2& table);
void Resize1546(Table2& table);
void Resize2558(Table2& table);
void Resize3583(Table1& table);
void Resize4595(Table1& table);
void Resize5607(Table1& table);
Texture& OpArray0533(Table2& table,str key);
Texture& OpArray1545(Table2& table,str key);
Texture& OpArray2557(Table2& table,str key);
Shader& OpArray3582(Table1& table,str key);
Shader& OpArray4594(Table1& table,str key);
Shader& OpArray5606(Table1& table,str key);
extern "C" i32 putchar(i32 c);
extern "C" void abort();
void Print123(str string);
void Println124(str string);
void Error125(str string);
str add126(str a,str b);
str String127(i8* chars,i64 length);
str String128(i64 number);
str String129(f32 number);
i64 Equal130(str l,str r);
i64 Hash131(str string);
extern "C" i32 glfwInit();
extern "C" void glfwWindowHint(i32 hint,i32 value);
extern "C" GLFWwindow* glfwCreateWindow(u32 width,u32 height,i8* title,GLFWmonitor* monitor,GLFWwindow* share);
extern "C" u32 glfwWindowShouldClose(GLFWwindow* window);
extern "C" func glfwSetWindowSizeCallback(GLFWwindow* window,func cbfun);
extern "C" void glfwPollEvents();
extern "C" void glfwMakeContextCurrent(GLFWwindow* window);
extern "C" void glfwSwapBuffers(GLFWwindow* window);
extern "C" void glTexParameteri(u32 target,u32 pname,i32 param);
extern "C" void glTexImage2D(u32 target,i32 level,i32 internalformat,i32 width,i32 height,i32 border,u32 format,u32 ttype,voidptr pixels);
extern "C" void glClear(u32 mask);
extern "C" void glClearColor(f32 red,f32 green,f32 blue,f32 alpha);
extern "C" void glEnable(u32 cap);
extern "C" void glBlendFunc(u32 sfactor,u32 dfactor);
extern "C" u32 glGetError();
extern "C" void glViewport(i32 x,i32 y,i32 width,i32 height);
extern "C" void glDrawElements(u32 mode,i32 count,u32 ttype,voidptr indices);
extern "C" void glBindTexture(u32 target,u32 texture);
extern "C" void glGenTextures(i32 n,u32* textures);
extern "C" void glActiveTexture(u32 texture);
extern "C" void glBindBuffer(u32 target,u32 buffer);
extern "C" void glGenBuffers(i32 n,u32* buffers);
extern "C" void glBufferData(u32 target,i64 size,voidptr data,u32 usage);
extern "C" i8 glUnmapBuffer(u32 target);
extern "C" void glDrawBuffers(i32 n,u32* bufs);
extern "C" void glAttachShader(u32 program,u32 shader);
extern "C" void glCompileShader(u32 shader);
extern "C" u32 glCreateProgram();
extern "C" u32 glCreateShader(u32 theType);
extern "C" void glDeleteProgram(u32 program);
extern "C" void glDeleteShader(u32 shader);
extern "C" void glEnableVertexAttribArray(u32 index);
extern "C" void glGetActiveUniform(u32 program,u32 index,i32 bufSize,i32* length,i32* size,u32* ttype,i8* name);
extern "C" void glGetProgramiv(u32 program,u32 pname,i32* params);
extern "C" void glGetShaderiv(u32 shader,u32 pname,i32* params);
extern "C" void glGetShaderInfoLog(u32 shader,i32 bufSize,i32* length,i8* infoLog);
extern "C" i32 glGetUniformLocation(u32 program,i8* name);
extern "C" void glLinkProgram(u32 program);
extern "C" void glShaderSource(u32 shader,i32 count,i8** string,i32* length);
extern "C" void glUseProgram(u32 program);
extern "C" void glVertexAttribPointer(u32 index,i32 size,u32 ttype,i8 normalized,i32 stride,voidptr pointer);
extern "C" void glBindBufferBase(u32 target,u32 index,u32 buffer);
extern "C" void glBindFramebuffer(u32 target,u32 framebuffer);
extern "C" void glGenFramebuffers(i32 n,u32* framebuffers);
extern "C" u32 glCheckFramebufferStatus(u32 target);
extern "C" void glFramebufferTexture2D(u32 target,u32 attachment,u32 textarget,u32 texture,i32 level);
extern "C" voidptr glMapBufferRange(u32 target,i64 offset,i64 length,u32 access);
extern "C" void glBindVertexArray(u32 array);
extern "C" void glGenVertexArrays(i32 n,u32* arrays);
extern "C" u32 glGetUniformBlockIndex(u32 program,i8* uniformBlockName);
extern "C" void glUniformBlockBinding(u32 program,u32 uniformBlockIndex,u32 uniformBlockBinding);
extern "C" void glProgramUniform1i(u32 program,i32 location,i32 v0);
extern "C" void glBlendFuncSeparatei(u32 buf,u32 srcRGB,u32 dstRGB,u32 srcAlpha,u32 dstAlpha);
str String196(Vec4 v);
str String197(Vec3 v);
str String198(Vec2 v);
Vec4& OpArray199(Mat4& matrix,i64 index);
f32& OpArray200(Vec4& v,i64 index);
Mat4 Mat4201(f32 v);
Mat4 Mat4Scale202(Vec3 scale);
Mat4 Mat4Transform203(Vec3 v);
Mat4 mul204(Mat4 lhs,Mat4 rhs);
Vec4 Vec4205(f32 x,f32 y,f32 z,f32 w);
Vec4 Vec4206(Vec3 v,f32 w);
Vec4 Vec4207(f32 v);
Vec3 Vec3208(f32 x,f32 y,f32 z);
Vec3 Vec3209(f32 value);
Vec3 Vec3210(Vec2 v);
Vec2 Vec2211(Vec3 v);
Vec2 Vec2212(f32 x,f32 y);
Vec2 Vec2213(f32 v);
Vec3 sub214(Vec3 lhs,Vec3 rhs);
Vec3 sub215(Vec3 lhs,Vec2 rhs);
Vec2 sub216(Vec2 lhs,Vec2 rhs);
Vec3 add217(Vec3 lhs,Vec3 rhs);
Vec3 add218(Vec3 lhs,Vec2 rhs);
Vec2 add219(Vec2 lhs,Vec2 rhs);
Vec3 mul220(Vec3 lhs,Vec3 rhs);
Vec4 mul221(f32 l,Vec4 r);
Vec4 mul222(Vec4 l,f32 r);
Vec3 mul223(f32 l,Vec3 r);
Vec3 mul224(Vec3 l,f32 r);
Vec2 mul225(f32 l,Vec2 r);
Vec2 mul226(Vec2 l,f32 r);
Vec2 div227(Vec2 l,f32 r);
Vec3 div228(Vec3 l,f32 r);
Vec4 div229(Vec4 l,f32 r);
f32 Dot230(Vec3 l,Vec3 r);
f32 Dot231(Vec2 l,Vec2 r);
Vec3 Cross232(Vec3 l,Vec3 r);
f32 Length233(Vec3 v);
f32 Length234(Vec2 v);
Vec3 Normalize235(Vec3 v);
Vec2 Normalize236(Vec2 v);
void Init239(World& world);
i64 Bits240();
i64 Bits241();
Array3& Components242();
Array4& Components243();
i8 Retrieve0676(i64 i,Transform*& a,Sprite*& b);
Sprite& AddComponent0519(Entity entity);
Transform& AddComponent1626(Entity entity);
Entity CreateEntity248();
RenderTarget RenderTarget251();
void GenerateFrameBuffer252(RenderTarget& target,DynamicArray2& textures);
void Bind253(RenderTarget target,Window window);
void BindScreen254();
ShadingPass ShadingPass256();
ShadingPass PostProcess257(Sprite& sprite);
void Refresh258(ShadingPass& pass);
Shader Shader260(Renderer& renderer,str vs,str fs);
Texture Texture261(Renderer& renderer,str file);
Renderer Renderer262();
void Draw263(Sprite& sprite,Transform& transform);
u32 InterfaceBinding266();
u32 InterfaceBinding267();
Buffer CreateInterfaceBlock0667(CameraBlock block,i64 count);
Buffer CreateInterfaceBlock1675(TransformBlock block,i64 count);
void LoadInterfaceBlock0668(Buffer buffer,CameraBlock block);
void LoadInterfaceBlock1680(Buffer buffer,TransformBlock block);
void Draw270(Renderer& renderer,World& world);
void Render271(Renderer& renderer,World& world,Camera camera,Window window);
Archive Archive273();
void Load274(Archive self,Vec4& v);
void Load275(Archive self,Vec3& v);
void Save276(Archive& self,u64 v);
void Save277(Archive& self,i64 v);
void Save278(Archive& self,f64 v);
void Save279(Archive& self,f32 v);
void Save280(Archive& self,str string);
void Save281(Archive& self,Vec4 v);
void Save282(Archive& self,Vec3 v);
void Save283(Archive& self,Vec2 v);
Archive& OpArray284(Archive& self,str field);
void Save285(Archive& self,Transform transform);
void Save286(Archive& self,Sprite sprite);
void PrintDepth287(i64 depth);
void WriteDepth288(File* file,i64 depth);
void Print289(Archive& self,i64& depth);
void Write290(File* file,str string);
void ArchiveFile291(Archive& self,File* file,i64 depth);
void ArchiveFile292(Archive& self,str file);
Archive Unarchive293(str file);
i8 Unarchive294(Archive& archive,Lexer& lexer);
extern "C" voidptr malloc(u64 c);
extern "C" voidptr calloc(u64 nmem,u64 size);
extern "C" voidptr realloc(voidptr nmem,u64 size);
extern "C" voidptr memcpy(voidptr dst,voidptr src,u64 count);
extern "C" voidptr memset(voidptr ptr,i32 value,u64 count);
void Assert300(i8 condition,str reason);
void Assert301(i8 condition);
i8* Alloc0475(i64 len);
i8* Alloc1480(i64 len);
i64* Alloc0473(i64 len);
Entity* Alloc3493(i64 len);
Transform* Alloc4495(i64 len);
Sprite* Alloc5497(i64 len);
PositionTextureColor* Alloc6523(i64 len);
u16* Alloc7524(i64 len);
i8* Alloc8576(i64 len);
i8* Alloc9577(i64 len);
i8* Alloc10578(i64 len);
i8* Alloc11580(i64 len);
u32* Alloc12648(i64 len);
void CopyPtr0476(i8* from,i8* to,i64 len);
void CopyPtr1477(i8* from,i8* to,i64 len);
i64 i64305(u8 i);
i64 i64306(u32 i);
i64 i64307(u64 i);
i64 i64308(i8 i);
i64 i64309(i32 i);
i64 i64310(i64 i);
i64 i64311(f32 i);
i64 i64312(f64 i);
i32 i32313(u8 i);
i32 i32314(u32 i);
i32 i32315(u64 i);
i32 i32316(i8 i);
i32 i32317(i32 i);
i32 i32318(i64 i);
i32 i32319(f32 i);
i32 i32320(f64 i);
i8 i8321(u8 i);
i8 i8322(u32 i);
i8 i8323(u64 i);
i8 i8324(i8 i);
i8 i8325(i32 i);
i8 i8326(i64 i);
i8 i8327(f32 i);
i8 i8328(f64 i);
u8 u8329(u8 i);
u8 u8330(u32 i);
u8 u8331(u64 i);
u8 u8332(i8 i);
u8 u8333(i32 i);
u8 u8334(i64 i);
u8 u8335(f32 i);
u8 u8336(f64 i);
u32 u32337(u8 i);
u32 u32338(u32 i);
u32 u32339(u64 i);
u32 u32340(i8 i);
u32 u32341(i32 i);
u32 u32342(i64 i);
u32 u32343(f32 i);
u32 u32344(f64 i);
u64 u64345(u8 i);
u64 u64346(u32 i);
u64 u64347(u64 i);
u64 u64348(i8 i);
u64 u64349(i32 i);
u64 u64350(i64 i);
u64 u64351(f32 i);
u64 u64352(f64 i);
f32 f32353(u8 i);
f32 f32354(u32 i);
f32 f32355(u64 i);
f32 f32356(i8 i);
f32 f32357(i32 i);
f32 f32358(i64 i);
f32 f32359(f32 i);
f32 f32360(f64 i);
f64 f64361(u8 i);
f64 f64362(u32 i);
f64 f64363(u64 i);
f64 f64364(i8 i);
f64 f64365(i32 i);
f64 f64366(i64 i);
f64 f64367(f32 i);
f64 f64368(f64 i);
extern "C" f32 cosf(f32 v);
extern "C" f32 sinf(f32 v);
extern "C" f32 tanf(f32 v);
extern "C" f32 fabsf(f32 v);
extern "C" f32 sqrtf(f32 v);
f32 sqrt374(f32 f);
f32 abs375(f32 f);
f32 cos376(f32 f);
f32 sin377(f32 f);
f32 tan378(f32 f);
void Bind383(Material material);
Sprite* Sprite384(Entity entity,Renderer& renderer,str file);
Sprite Sprite385(Renderer& renderer,str file);
void Color386(Sprite& sprite,Vec4 color);
Transform* Transform388(Entity entity);
Vec3 Scale389(Transform self);
void Scale390(Transform& self,Vec3 scale);
Vec3 Position391(Transform& self);
void Position392(Transform& self,Vec3 position);
Vec3 WorldPosition393(Transform self);
void Recalculate394(Transform& self);
void Parent395(Transform& self,Transform& parent);
Buffer Buffer397(u32 buffertype,i64 length);
voidptr Map398(Buffer& buffer,i64 begin,i64 length);
void Unmap399(Buffer buffer);
void Resize400(Buffer buffer,i64 size);
extern "C" u8* stbi_load(i8* file,u32* x,u32* y,u32* comp,u32 req);
extern "C" void stbi_image_free(voidptr retval_from_stbi_load);
Texture Texture407(str file);
Texture Texture408(Vec2 size);
Camera Camera410();
Mat4 Frustum411(f32 left,f32 right,f32 bottom,f32 top,f32 near,f32 far);
Mat4 Perspective412(f32 fovy,f32 aspect,f32 zNear,f32 zFar);
Mat4 Translate413(Vec3 translate);
Vec3 PointAt415(Ray self,f32 distance);
i8 IntersectsSphere416(Ray self,Vec3 point,f32 radius);
f32 IntersectsSphereDistance417(Ray self,Vec3 point,f32 radius);
Ray ScreenToRay418(Camera self,Vec2 screen);
Vec4 mul419(Mat4 self,Vec4 v);
Mat4 Inverse420(Mat4 v);
i32 Char423(str char);
Lexer Lexer424(str file);
i32 Peek425(Lexer& self);
i32 Get426(Lexer& self);
extern "C" i32 isspace(i32 v);
extern "C" i32 isalpha(i32 v);
extern "C" i32 isalnum(i32 v);
extern "C" i32 isdigit(i32 v);
void Consume431(Lexer& self);
Token Next432(Lexer& self);
Shader Shader434(str vs,str fs);
void GLError435(str string);
void Bind436(Shader shader);
u32 CompileShader437(u32 shaderType,str data,str file);
void AddUniforms438(Shader shader);
str ReadFile439(str file);
Mat4 GetRotationMatrix441(Quaternion q);
Quaternion CreateQuaternion442(Vec3 axis,f32 angle);
Quaternion CreateQuaternion443();
void normalize444(Quaternion& v);
Quaternion mul445(Quaternion lhs,Quaternion rhs);
extern "C" File* FileOpen(i8* filename,i8* mode);
extern "C" u32 FileClose(File* file);
extern "C" u64 GetLine(i8** lineptr,u64* n,File* stream);
extern "C" u64 FileRead(i8* f,u64 a,u64 b,File* c);
extern "C" i32 FileGetChar(File* file);
extern "C" u64 FileWrite(voidptr ptr,u64 size,u64 count,File* stream);
extern "C" void FileFlush(File* file);
extern "C" i32 chdir(i8* dir);
