
@extern
{
    glClear fn mask u32
    glClearColor fn red f32, green f32, blue f32, alpha f32
}

GLFW_CONTEXT_VERSION_MAJOR 	i32 = 0x00022002.i32
GLFW_CONTEXT_VERSION_MINOR 	i32 = 0x00022003.i32
GLFW_OPENGL_FORWARD_COMPAT 	i32 = 0x00022006.i32
GLFW_OPENGL_PROFILE 		i32 = 0x00022008.i32
GLFW_OPENGL_CORE_PROFILE 	i32 = 0x00032001.i32
GLFW_RELEASE                i32 = 0
GLFW_PRESS                  i32 = 1

@extern
{
	glfwMakeContextCurrent fn window ref GLFWWindow
	glfwWindowHint fn hint i32, value i32
	glfwGetFramebufferSize fn window ref GLFWWindow, width ref u32, height ref u32
    
    glfwSetWindowUserPointer fn(window ref GLFWWindow, pointer voidptr)
    glfwGetWindowUserPointer fn(window ref GLFWWindow) => voidptr

    glfwSetWindowSizeCallback fn(window ref GLFWWindow, cbfun fn(window ref GLFWWindow, x u32, y  u32)) => fn(window ref GLFWWindow, x u32, y u32) 

    glfwGetCursorPos fn(window ref GLFWWindow, xpos ref f64, ypos ref f64)
    glfwSetKeyCallback fn(window ref GLFWWindow, cbfun fn(window ref GLFWWindow, key u32, scancode u32, action u32, mods u32) ) => fn(window ref GLFWWindow, x u32, y u32, z u32, w u32) 
    glfwSetMouseButtonCallback fn(window ref GLFWWindow, cbfun fn(window ref GLFWWindow, button u32, action u32, mods u32) ) => fn(window ref GLFWWindow, x u32, u u32, z u32) 
    glfwSetCursorPosCallback fn(window ref GLFWWindow, cbfun fn(window ref GLFWWindow, x f64, y f64) ) => fn(window ref GLFWWindow, x f64, y f64)

	glGetError fn => u32
    glUseProgram fn program u32
	glCreateShader fn theType u32 => u32
	glLinkProgram fn program u32
	glShaderSource fn shader u32, count i32, string ref ref i8, length ref i32
	glGetShaderiv fn shader u32, pname u32, params ref i32
    glGetShaderInfoLog fn shader u32, bufSize i32, length ref i32, infoLog ref i8
	glDeleteShader fn shader u32
    glCompileShader fn shader u32
	glCreateProgram fn => u32
	glAttachShader fn program u32, shader u32
	glGetProgramiv fn program u32, pname u32, params ref i32
	glGetUniformBlockIndex fn program u32, uniformBlockName ref i8 => u32
	glUniformBlockBinding fn program u32, uniformBlockIndex u32, uniformBlockBinding u32
    glGenTextures   fn n i32, textures ref u32
    glBindTexture   fn target u32, texture u32
    glTexImage2D    fn target u32, level i32, internalformat i32, width i32, height i32, border i32, format u32, ttype u32, pixels voidptr
    glTexParameteri fn target u32, pname u32, param i32

    glGenBuffers fn n i32, buffers ref u32
    glBindBuffer fn target u32, buffer u32
    glBufferData fn target u32, size i64, data voidptr, usage u32

    glBindVertexArray fn array u32
    glGenVertexArrays fn n i32, arrays ref u32

   	glVertexAttribPointer fn index u32, size i32, ttype u32, normalized i8, stride i32, pointer voidptr
  	glEnableVertexAttribArray fn index u32
  	glGetUniformLocation fn program u32, name ref i8 => i32
    glProgramUniform1i fn program u32, location i32, v0 i32
    glDrawElements fn mode u32, count i32, ttype u32, indices voidptr

    glBlendFunc fn sfactor u32, dfactor u32
	glBlendFuncSeparatei fn buf u32, srcRGB u32, dstRGB u32, srcAlpha u32, dstAlpha u32
	glEnable fn cap u32
    glBindBufferBase fn target u32, index u32, buffer u32

  	glBindFramebuffer fn target u32, framebuffer u32
    glGenFramebuffers fn n i32, framebuffers ref u32
    glCheckFramebufferStatus fn target u32 => u32
    glFramebufferTexture2D fn target u32, attachment u32, textarget u32, texture u32, level i32
	glDrawBuffers fn n i32, bufs ref u32
	glViewport fn x i32, y i32, width i32, height i32
	glActiveTexture fn texture u32
    glGetActiveUniform fn program u32, index u32, bufSize i32, length ref i32, size ref i32, ttype ref u32, name ref i8
}

GL_NO_ERROR                	u32 = 0.u32
GL_INVALID_ENUM            	u32 = 0x0500.u32
GL_INVALID_VALUE           	u32 = 0x0501.u32
GL_INVALID_OPERATION       	u32 = 0x0502.u32
GL_OUT_OF_MEMORY           	u32 = 0x0505.u32
GL_INVALID_INDEX            u32 = 0xFFFFFF.u32

GL_COMPILE_STATUS      		u32 = 0x8B81.u32
GL_LINK_STATUS          	u32 = 0x8B82.u32

GL_FALSE             		i8 = 0.i8
GL_TRUE                   	i8 = 1.i8

GL_FRAGMENT_SHADER        	u32 = 0x8B30.u32
GL_VERTEX_SHADER      		u32 = 0x8B31.u32

GL_COLOR_BUFFER_BIT			u32 = 0x00004000.u32
GL_TEXTURE_2D               u32 = 0x0DE1
GL_RGBA                     u32 = 0x1908
GL_UNSIGNED_BYTE                  u32 = 0x1401
GL_LINEAR                         u32 = 0x2601
GL_TEXTURE_MAG_FILTER             u32 = 0x2800
GL_TEXTURE_MIN_FILTER             u32 = 0x2801
GL_TEXTURE_BASE_LEVEL             u32 = 0x813C
GL_TEXTURE_MAX_LEVEL              u32 = 0x813D

GL_ELEMENT_ARRAY_BUFFER           u32 = 0x8893
GL_ARRAY_BUFFER                   u32 = 0x8892

GL_DYNAMIC_DRAW                   u32 = 0x88E8
GL_FLOAT                          u32 = 0x1406
GL_TRIANGLES                      u32 = 0x0004
GL_UNSIGNED_SHORT                 u32 = 0x1403

GL_ONE                            u32 = 1
GL_SRC_COLOR                      u32 = 0x0300
GL_ONE_MINUS_SRC_COLOR            u32 = 0x0301
GL_SRC_ALPHA                      u32 = 0x0302
GL_ONE_MINUS_SRC_ALPHA            u32 = 0x0303
GL_DST_ALPHA                      u32 = 0x0304
GL_ONE_MINUS_DST_ALPHA            u32 = 0x0305
GL_DST_COLOR                      u32 = 0x0306
GL_ONE_MINUS_DST_COLOR            u32 = 0x0307
GL_BLEND                          u32 = 0x0BE2
GL_UNIFORM_BUFFER                 u32 = 0x8A11
GL_FRAMEBUFFER                    u32 = 0x8D40
GL_COLOR_ATTACHMENT0              u32 = 0x8CE0
GL_FRAMEBUFFER_COMPLETE           u32 = 0x8CD5
GL_TEXTURE0                       u32 = 0x84C0
GL_ACTIVE_UNIFORMS                u32 = 0x8B86
GL_SAMPLER_2D                     u32 = 0x8B5E


