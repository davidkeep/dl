GLFW_VERSION_MAJOR          i32 = 3
GLFW_VERSION_MINOR          i32 = 2
GLFW_VERSION_REVISION       i32 = 0
GLFW_TRUE                   i32 = 1
GLFW_FALSE                  i32 = 0
GLFW_RELEASE                i32 = 0
GLFW_PRESS                  i32 = 1
GLFW_REPEAT                 i32 = 2
GLFW_KEY_UNKNOWN            i32 = -1
GLFW_KEY_SPACE              i32 = 32
GLFW_KEY_APOSTROPHE         i32 = 39 
GLFW_KEY_COMMA              i32 = 44 
GLFW_KEY_MINUS              i32 = 45 
GLFW_KEY_PERIOD             i32 = 46 
GLFW_KEY_SLASH              i32 = 47 
GLFW_KEY_0                  i32 = 48
GLFW_KEY_1                  i32 = 49
GLFW_KEY_2                  i32 = 50
GLFW_KEY_3                  i32 = 51
GLFW_KEY_4                  i32 = 52
GLFW_KEY_5                  i32 = 53
GLFW_KEY_6                  i32 = 54
GLFW_KEY_7                  i32 = 55
GLFW_KEY_8                  i32 = 56
GLFW_KEY_9                  i32 = 57
GLFW_KEY_SEMICOLON          i32 = 59 
GLFW_KEY_EQUAL              i32 = 61 
GLFW_KEY_A                  i32 = 65
GLFW_KEY_B                  i32 = 66
GLFW_KEY_C                  i32 = 67
GLFW_KEY_D                  i32 = 68
GLFW_KEY_E                  i32 = 69
GLFW_KEY_F                  i32 = 70
GLFW_KEY_G                  i32 = 71
GLFW_KEY_H                  i32 = 72
GLFW_KEY_I                  i32 = 73
GLFW_KEY_J                  i32 = 74
GLFW_KEY_K                  i32 = 75
GLFW_KEY_L                  i32 = 76
GLFW_KEY_M                  i32 = 77
GLFW_KEY_N                  i32 = 78
GLFW_KEY_O                  i32 = 79
GLFW_KEY_P                  i32 = 80
GLFW_KEY_Q                  i32 = 81
GLFW_KEY_R                  i32 = 82
GLFW_KEY_S                  i32 = 83
GLFW_KEY_T                  i32 = 84
GLFW_KEY_U                  i32 = 85
GLFW_KEY_V                  i32 = 86
GLFW_KEY_W                  i32 = 87
GLFW_KEY_X                  i32 = 88
GLFW_KEY_Y                  i32 = 89
GLFW_KEY_Z                  i32 = 90
GLFW_KEY_LEFT_BRACKET       i32 = 91 
GLFW_KEY_BACKSLASH          i32 = 92 
GLFW_KEY_RIGHT_BRACKET      i32 = 93 
GLFW_KEY_GRAVE_ACCENT       i32 = 96 
GLFW_KEY_WORLD_1            i32 = 161
GLFW_KEY_WORLD_2            i32 = 162
GLFW_KEY_ESCAPE             i32 = 256
GLFW_KEY_ENTER              i32 = 257
GLFW_KEY_TAB                i32 = 258
GLFW_KEY_BACKSPACE          i32 = 259
GLFW_KEY_INSERT             i32 = 260
GLFW_KEY_DELETE             i32 = 261
GLFW_KEY_RIGHT              i32 = 262
GLFW_KEY_LEFT               i32 = 263
GLFW_KEY_DOWN               i32 = 264
GLFW_KEY_UP i32 = 265
GLFW_KEY_PAGE_UP i32 = 266
GLFW_KEY_PAGE_DOWN i32 = 267
GLFW_KEY_HOME i32 = 268
GLFW_KEY_END i32 = 269
GLFW_KEY_CAPS_LOCK i32 = 280
GLFW_KEY_SCROLL_LOCK i32 = 281
GLFW_KEY_NUM_LOCK i32 = 282
GLFW_KEY_PRINT_SCREEN i32 = 283
GLFW_KEY_PAUSE i32 = 284
GLFW_KEY_F1 i32 = 290
GLFW_KEY_F2 i32 = 291
GLFW_KEY_F3 i32 = 292
GLFW_KEY_F4 i32 = 293
GLFW_KEY_F5 i32 = 294
GLFW_KEY_F6 i32 = 295
GLFW_KEY_F7 i32 = 296
GLFW_KEY_F8 i32 = 297
GLFW_KEY_F9 i32 = 298
GLFW_KEY_F10 i32 = 299
GLFW_KEY_F11 i32 = 300
GLFW_KEY_F12 i32 = 301
GLFW_KEY_F13 i32 = 302
GLFW_KEY_F14 i32 = 303
GLFW_KEY_F15 i32 = 304
GLFW_KEY_F16 i32 = 305
GLFW_KEY_F17 i32 = 306
GLFW_KEY_F18 i32 = 307
GLFW_KEY_F19 i32 = 308
GLFW_KEY_F20 i32 = 309
GLFW_KEY_F21 i32 = 310
GLFW_KEY_F22 i32 = 311
GLFW_KEY_F23 i32 = 312
GLFW_KEY_F24 i32 = 313
GLFW_KEY_F25 i32 = 314
GLFW_KEY_KP_0 i32 = 320
GLFW_KEY_KP_1 i32 = 321
GLFW_KEY_KP_2 i32 = 322
GLFW_KEY_KP_3 i32 = 323
GLFW_KEY_KP_4 i32 = 324
GLFW_KEY_KP_5 i32 = 325
GLFW_KEY_KP_6 i32 = 326
GLFW_KEY_KP_7 i32 = 327
GLFW_KEY_KP_8 i32 = 328
GLFW_KEY_KP_9 i32 = 329
GLFW_KEY_KP_DECIMAL i32 = 330
GLFW_KEY_KP_DIVIDE i32 = 331
GLFW_KEY_KP_MULTIPLY i32 = 332
GLFW_KEY_KP_SUBTRACT i32 = 333
GLFW_KEY_KP_ADD i32 = 334
GLFW_KEY_KP_ENTER i32 = 335
GLFW_KEY_KP_EQUAL i32 = 336
GLFW_KEY_LEFT_SHIFT i32 = 340
GLFW_KEY_LEFT_CONTROL i32 = 341
GLFW_KEY_LEFT_ALT i32 = 342
GLFW_KEY_LEFT_SUPER i32 = 343
GLFW_KEY_RIGHT_SHIFT i32 = 344
GLFW_KEY_RIGHT_CONTROL i32 = 345
GLFW_KEY_RIGHT_ALT i32 = 346
GLFW_KEY_RIGHT_SUPER i32 = 347
GLFW_KEY_MENU i32 = 348
GLFW_KEY_LAST i32 = GLFW_KEY_MENU
GLFW_MOD_SHIFT i32 = 0x0001
GLFW_MOD_CONTROL i32 = 0x0002
GLFW_MOD_ALT i32 = 0x0004
GLFW_MOD_SUPER i32 = 0x0008
GLFW_MOUSE_BUTTON_1 i32 = 0
GLFW_MOUSE_BUTTON_2 i32 = 1
GLFW_MOUSE_BUTTON_3 i32 = 2
GLFW_MOUSE_BUTTON_4 i32 = 3
GLFW_MOUSE_BUTTON_5 i32 = 4
GLFW_MOUSE_BUTTON_6 i32 = 5
GLFW_MOUSE_BUTTON_7 i32 = 6
GLFW_MOUSE_BUTTON_8 i32 = 7
GLFW_MOUSE_BUTTON_LAST i32 = GLFW_MOUSE_BUTTON_8
GLFW_MOUSE_BUTTON_LEFT i32 = GLFW_MOUSE_BUTTON_1
GLFW_MOUSE_BUTTON_RIGHT i32 = GLFW_MOUSE_BUTTON_2
GLFW_MOUSE_BUTTON_MIDDLE i32 = GLFW_MOUSE_BUTTON_3
GLFW_JOYSTICK_1 i32 = 0
GLFW_JOYSTICK_2 i32 = 1
GLFW_JOYSTICK_3 i32 = 2
GLFW_JOYSTICK_4 i32 = 3
GLFW_JOYSTICK_5 i32 = 4
GLFW_JOYSTICK_6 i32 = 5
GLFW_JOYSTICK_7 i32 = 6
GLFW_JOYSTICK_8 i32 = 7
GLFW_JOYSTICK_9 i32 = 8
GLFW_JOYSTICK_10 i32 = 9
GLFW_JOYSTICK_11 i32 = 10
GLFW_JOYSTICK_12 i32 = 11
GLFW_JOYSTICK_13 i32 = 12
GLFW_JOYSTICK_14 i32 = 13
GLFW_JOYSTICK_15 i32 = 14
GLFW_JOYSTICK_16 i32 = 15
GLFW_JOYSTICK_LAST i32 = GLFW_JOYSTICK_16
GLFW_NOT_INITIALIZED i32 = 0x00010001
GLFW_NO_CURRENT_CONTEXT i32 = 0x00010002
GLFW_INVALID_ENUM i32 = 0x00010003
GLFW_INVALID_VALUE i32 = 0x00010004
GLFW_OUT_OF_MEMORY i32 = 0x00010005
GLFW_API_UNAVAILABLE i32 = 0x00010006
GLFW_VERSION_UNAVAILABLE i32 = 0x00010007
GLFW_PLATFORM_ERROR i32 = 0x00010008
GLFW_FORMAT_UNAVAILABLE i32 = 0x00010009
GLFW_NO_WINDOW_CONTEXT i32 = 0x0001000A
GLFW_FOCUSED i32 = 0x00020001
GLFW_ICONIFIED i32 = 0x00020002
GLFW_RESIZABLE i32 = 0x00020003
GLFW_VISIBLE i32 = 0x00020004
GLFW_DECORATED i32 = 0x00020005
GLFW_AUTO_ICONIFY i32 = 0x00020006
GLFW_FLOATING i32 = 0x00020007
GLFW_MAXIMIZED i32 = 0x00020008
GLFW_RED_BITS i32 = 0x00021001
GLFW_GREEN_BITS i32 = 0x00021002
GLFW_BLUE_BITS i32 = 0x00021003
GLFW_ALPHA_BITS i32 = 0x00021004
GLFW_DEPTH_BITS i32 = 0x00021005
GLFW_STENCIL_BITS i32 = 0x00021006
GLFW_ACCUM_RED_BITS i32 = 0x00021007
GLFW_ACCUM_GREEN_BITS i32 = 0x00021008
GLFW_ACCUM_BLUE_BITS i32 = 0x00021009
GLFW_ACCUM_ALPHA_BITS i32 = 0x0002100A
GLFW_AUX_BUFFERS i32 = 0x0002100B
GLFW_STEREO i32 = 0x0002100C
GLFW_SAMPLES i32 = 0x0002100D
GLFW_SRGB_CAPABLE i32 = 0x0002100E
GLFW_REFRESH_RATE i32 = 0x0002100F
GLFW_DOUBLEBUFFER i32 = 0x00021010
GLFW_CLIENT_API i32 = 0x00022001
GLFW_CONTEXT_VERSION_MAJOR i32 = 0x00022002
GLFW_CONTEXT_VERSION_MINOR i32 = 0x00022003
GLFW_CONTEXT_REVISION i32 = 0x00022004
GLFW_CONTEXT_ROBUSTNESS i32 = 0x00022005
GLFW_OPENGL_FORWARD_COMPAT i32 = 0x00022006
GLFW_OPENGL_DEBUG_CONTEXT i32 = 0x00022007
GLFW_OPENGL_PROFILE i32 = 0x00022008
GLFW_CONTEXT_RELEASE_BEHAVIOR i32 = 0x00022009
GLFW_CONTEXT_NO_ERROR i32 = 0x0002200A
GLFW_CONTEXT_CREATION_API i32 = 0x0002200B
GLFW_NO_API i32 = 0
GLFW_OPENGL_API i32 = 0x00030001
GLFW_OPENGL_ES_API i32 = 0x00030002
GLFW_NO_ROBUSTNESS i32 = 0
GLFW_NO_RESET_NOTIFICATION i32 = 0x00031001
GLFW_LOSE_CONTEXT_ON_RESET i32 = 0x00031002
GLFW_OPENGL_ANY_PROFILE i32 = 0
GLFW_OPENGL_CORE_PROFILE i32 = 0x00032001
GLFW_OPENGL_COMPAT_PROFILE i32 = 0x00032002
GLFW_CURSOR i32 = 0x00033001
GLFW_STICKY_KEYS i32 = 0x00033002
GLFW_STICKY_MOUSE_BUTTONS i32 = 0x00033003
GLFW_CURSOR_NORMAL i32 = 0x00034001
GLFW_CURSOR_HIDDEN i32 = 0x00034002
GLFW_CURSOR_DISABLED i32 = 0x00034003
GLFW_ANY_RELEASE_BEHAVIOR i32 = 0
GLFW_RELEASE_BEHAVIOR_FLUSH i32 = 0x00035001
GLFW_RELEASE_BEHAVIOR_NONE i32 = 0x00035002
GLFW_NATIVE_CONTEXT_API i32 = 0x00036001
GLFW_EGL_CONTEXT_API i32 = 0x00036002
GLFW_ARROW_CURSOR i32 = 0x00036001
GLFW_IBEAM_CURSOR i32 = 0x00036002
GLFW_CROSSHAIR_CURSOR i32 = 0x00036003
GLFW_HAND_CURSOR i32 = 0x00036004
GLFW_HRESIZE_CURSOR i32 = 0x00036005
GLFW_VRESIZE_CURSOR i32 = 0x00036006
GLFW_CONNECTED i32 = 0x00040001
GLFW_DISCONNECTED i32 = 0x00040002
GLFW_DONT_CARE i32 = -1

GLFWwindow struct {}
GLFWmonitor struct {}
GLFWvidmode struct {}
GLFWgammaramp struct {}
GLFWimage struct {
    width i32
    height i32
    pixels u8^
}
GLFWcursor struct {}

@extern
{
    glfwInit fn() i32
    //fn glfwTerminate()
    //fn glfwGetVersion(u32^ major, u32^ minor, u32^ rev)
    //fn glfwGetVersionString()int8^
    //fn glfwSetErrorCallback(fn cbfun(u32, int8^) )fn(u32, int8^) 
    //fn glfwGetMonitors(u32^ count)GLFWmonitor^^
    //fn glfwGetPrimaryMonitor()GLFWmonitor^
    //fn glfwGetMonitorPos(GLFWmonitor^ monitor, u32^ xpos, u32^ ypos)
    //fn glfwGetMonitorPhysicalSize(GLFWmonitor^ monitor, u32^ widthMM, u32^ heightMM)
    //fn glfwGetMonitorName(GLFWmonitor^ monitor)int8^
    //fn glfwSetMonitorCallback(fn cbfun(GLFWmonitor^, u32) )fn(GLFWmonitor^, u32)
    //fn glfwGetVideoModes(GLFWmonitor^ monitor, u32^ count)GLFWvidmode^
    //fn glfwGetVideoMode(GLFWmonitor^ monitor)GLFWvidmode^
    //fn glfwSetGamma(GLFWmonitor^ monitor, float32 gamma)
    //fn glfwGetGammaRamp(GLFWmonitor^ monitor)GLFWgammaramp^
    //fn glfwSetGammaRamp(GLFWmonitor^ monitor, GLFWgammaramp^ ramp)
    //fn glfwDefaultWindowHints()
    glfwWindowHint fn(hint i32, value i32)
    glfwCreateWindow fn(width u32, height u32, title i8^, monitor GLFWmonitor^, share GLFWwindow^) GLFWwindow^
    //fn glfwDestroyWindow(GLFWwindow^ window)
    glfwWindowShouldClose fn(window GLFWwindow^)u32
    //fn glfwSetWindowShouldClose(GLFWwindow^ window, u32 value)
    //fn glfwSetWindowTitle(GLFWwindow^ window, int8^ title)
    //fn glfwSetWindowIcon(GLFWwindow^ window, u32 count, GLFWimage^ images)
    //fn glfwGetWindowPos(GLFWwindow^ window, u32^ xpos, u32^ ypos)
    //fn glfwSetWindowPos(GLFWwindow^ window, u32 xpos, u32 ypos)
    //fn glfwGetWindowSize(GLFWwindow^ window, u32^ width, u32^ height)
    //fn glfwSetWindowSizeLimits(GLFWwindow^ window, u32 minwidth, u32 minheight, u32 maxwidth, u32 maxheight)
    //fn glfwSetWindowAspectRatio(GLFWwindow^ window, u32 numer, u32 denom)
    //fn glfwSetWindowSize(GLFWwindow^ window, u32 width, u32 height)
    glfwGetFramebufferSize fn(window GLFWwindow^, width u32^, height u32^)
    //fn glfwGetWindowFrameSize(GLFWwindow^ window, u32^ left, u32^ top, u32^ right, u32^ bottom)
    //fn glfwIconifyWindow(GLFWwindow^ window)
    //fn glfwRestoreWindow(GLFWwindow^ window)
    //fn glfwMaximizeWindow(GLFWwindow^ window)
    //fn glfwShowWindow(GLFWwindow^ window)
    //fn glfwHideWindow(GLFWwindow^ window)
    //fn glfwFocusWindow(GLFWwindow^ window)
    //fn glfwGetWindowMonitor(GLFWwindow^ window)GLFWmonitor^
    //fn glfwSetWindowMonitor(GLFWwindow^ window, GLFWmonitor^ monitor, u32 xpos, u32 ypos, u32 width, u32 height, u32 refreshRate)
    //fn glfwGetWindowAttrib(GLFWwindow^ window, u32 attrib)u32
    glfwSetWindowUserPointer fn(window GLFWwindow^, pointer voidptr)
    glfwGetWindowUserPointer fn(window GLFWwindow^)voidptr
    //fn glfwSetWindowPosCallback(GLFWwindow^ window, fn cbfun(GLFWwindow^, u32, u32)int )fn(GLFWwindow^, u32, u32) 
    glfwSetWindowSizeCallback fn(window GLFWwindow^, cbfun fn(window GLFWwindow^, x u32, y  u32)) fn(window GLFWwindow^, x u32, y u32) 
    //fn glfwSetWindowCloseCallback(GLFWwindow^ window, fn cbfun(GLFWwindow^) )fn(GLFWwindow^) 
    //fn glfwSetWindowRefreshCallback(GLFWwindow^ window, fn cbfun(GLFWwindow^) )fn(GLFWwindow^) 
    //fn glfwSetWindowFocusCallback(GLFWwindow^ window, fn cbfun(GLFWwindow^, u32) )fn(GLFWwindow^, u32) 
    //fn glfwSetWindowIconifyCallback(GLFWwindow^ window, fn cbfun(GLFWwindow^, u32) )fn(GLFWwindow^, u32) 
    //fn glfwSetFramebufferSizeCallback(GLFWwindow^ window, fn cbfun(GLFWwindow^, u32, u32) )fn(GLFWwindow^, u32, u32) 
    glfwPollEvents fn()
    //fn glfwWaitEvents()
    //fn glfwWaitEventsTimeout(float64 timeout)
    //fn glfwPostEmptyEvent()
    //fn glfwGetInputMode(GLFWwindow^ window, u32 mode)u32
    //fn glfwSetInputMode(GLFWwindow^ window, u32 mode, u32 value)
    //fn glfwGetKeyName(u32 key, u32 scancode)int8^
    glfwGetKey fn(window GLFWwindow^, key u32)u32
    //fn glfwGetMouseButton(GLFWwindow^ window, u32 button)u32
    glfwGetCursorPos fn(window GLFWwindow^, xpos f64^, ypos f64^)
    //fn glfwSetCursorPos(GLFWwindow^ window, float64 xpos, float64 ypos)
    //fn glfwCreateCursor(GLFWimage^ image, u32 xhot, u32 yhot)GLFWcursor^
    //fn glfwCreateStandardCursor(u32 shape)GLFWcursor^
    //fn glfwDestroyCursor(GLFWcursor^ cursor)
    //fn glfwSetCursor(GLFWwindow^ window, GLFWcursor^ cursor)
    glfwSetKeyCallback fn(window GLFWwindow^, cbfun fn(window GLFWwindow^, key u32, scancode u32, action u32, mods u32) )fn(window GLFWwindow^, x u32, y u32, z u32, w u32) 
    //glfwSetCharCallback fn(window GLFWwindow^, cbfun fn(window GLFWwindow^, u32 x) )fn(GLFWwindow^, u32) 
    //fn glfwSetCharModsCallback(GLFWwindow^ window, fn cbfun(GLFWwindow^, u32, u32) )fn(GLFWwindow^, u32, u32) 
    glfwSetMouseButtonCallback fn(window GLFWwindow^, cbfun fn(window GLFWwindow^, x u32, y u32, z u32) )fn(window GLFWwindow^, x u32, u u32, z u32) 
    glfwSetCursorPosCallback fn(window GLFWwindow^, cbfun fn(window GLFWwindow^, x f64, y f64) )fn(window GLFWwindow^, x f64, y f64)
    //fn glfwSetCursorEnterCallback(GLFWwindow^ window, fn cbfun(GLFWwindow^, u32) )fn(GLFWwindow^, u32) 
    //fn glfwSetScrollCallback(GLFWwindow^ window, fn cbfun(GLFWwindow^, float64, float64) )fn(GLFWwindow^, float64, float64) 
    //fn glfwSetDropCallback(GLFWwindow^ window, fn cbfun(GLFWwindow^, u32, int8^^) )fn(GLFWwindow^, u32, int8^^) 
    //fn glfwJoystickPresent(u32 joy)u32
    //fn glfwGetJoystickAxes(u32 joy, u32^ count)float32^
    //fn glfwGetJoystickButtons(u32 joy, u32^ count)u8^
    //fn glfwGetJoystickName(u32 joy)int8^
    //fn glfwSetJoystickCallback(fn cbfun(u32, u32) )fn(u32, u32) 
    //fn glfwSetClipboardString(GLFWwindow^ window, int8^ string)
    //fn glfwGetClipboardString(GLFWwindow^ window)int8^
    glfwGetTime fn()f64
    glfwSetTime fn(time f64)
    //fn glfwGetTimerValue()uint
    //fn glfwGetTimerFrequency()uint
    glfwMakeContextCurrent fn(window GLFWwindow^)
    //fn glfwGetCurrentContext()GLFWwindow^
    glfwSwapBuffers fn(window GLFWwindow^)
    //fn glfwSwapInterval(u32 interval)
    //fn glfwExtensionSupported(int8^ extension)u32
    //fn glfwGetProcAddress(int8^ procname)fn() 
    //fn glfwVulkanSupported()u32
    //fn glfwGetRequiredInstanceExtensions(u32^ count)int8^^
}
