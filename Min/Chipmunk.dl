@extern 
{

Vec2f64 struct {
	x f64
	y f64
}
cpTransform struct {
	a f64
	b f64
	c f64
	d f64
	tx f64
	ty f64
}
cpMat2x2 struct {
	a f64
	b f64
	c f64
	d f64
}

cpArray struct 
cpHashSet struct 
cpBody struct 
cpShape struct 
cpCircleShape struct 
cpSegmentShape struct 
cpPolyShape struct 
cpConstraint struct 
cpPinJoint struct 
cpSlideJoint struct 
cpPivotJoint struct 
cpGrooveJoint struct 
cpDampedSpring struct 
cpDampedRotarySpring struct 
cpRotaryLimitJoint struct 
cpRatchetJoint struct 
cpGearJoint struct 
cpSimpleMotorJoint struct 
cpCollisionHandler struct 
cpContactPointSet struct 
cpArbiter struct 
cpSpace struct 
cpBB struct {
	l f64
	b f64
	r f64
	t f64
}
cpBBNew fn(l f64, b f64, r f64, t f64)cpBB
cpBBNewForExtents fn(c Vec2f64, hw f64, hh f64)cpBB
cpBBNewForCircle fn(p Vec2f64, r f64)cpBB
cpBBIntersects fn(a cpBB, b cpBB)u8
cpBBContainsBB fn(bb cpBB, other cpBB)u8
cpBBContainsVect fn(bb cpBB, v Vec2f64)u8
cpBBMerge fn(a cpBB, b cpBB)cpBB
cpBBExpand fn(bb cpBB, v Vec2f64)cpBB
cpBBCenter fn(bb cpBB)Vec2f64
cpBBArea fn(bb cpBB)f64
cpBBMergedArea fn(a cpBB, b cpBB)f64
cpBBSegmentQuery fn(bb cpBB, a Vec2f64, b Vec2f64)f64
cpBBIntersectsSegment fn(bb cpBB, a Vec2f64, b Vec2f64)u8
cpBBClampVect fn(bb cpBB, v Vec2f64)Vec2f64
cpBBWrapVect fn(bb cpBB, v Vec2f64)Vec2f64
cpBBOffset fn(bb cpBB, v Vec2f64)cpBB
cpTransformNew fn(a f64, b f64, c f64, d f64, tx f64, ty f64)cpTransform
cpTransformNewTranspose fn(a f64, c f64, tx f64, b f64, d f64, ty f64)cpTransform
cpTransformInverse fn(t cpTransform)cpTransform
cpTransformMult fn(t1 cpTransform, t2 cpTransform)cpTransform
cpTransformPoint fn(t cpTransform, p Vec2f64)Vec2f64
cpTransformVect fn(t cpTransform, v Vec2f64)Vec2f64
cpTransformbBB fn(t cpTransform, bb cpBB)cpBB
cpTransformTranslate fn(translate Vec2f64)cpTransform
cpTransformScale fn(scaleX f64, scaleY f64)cpTransform
cpTransformRotate fn(radians f64)cpTransform
cpTransformRigid fn(translate Vec2f64, radians f64)cpTransform
cpTransformRigidInverse fn(t cpTransform)cpTransform
cpTransformWrap fn(outer cpTransform, inner cpTransform)cpTransform
cpTransformWrapInverse fn(outer cpTransform, inner cpTransform)cpTransform
cpTransformOrtho fn(bb cpBB)cpTransform
cpTransformBoneScale fn(v0 Vec2f64, v1 Vec2f64)cpTransform
cpTransformAxialScale fn(axis Vec2f64, pivot Vec2f64, scale f64)cpTransform
cpSpatialIndexClass struct 
cpSpatialIndex struct 
cpSpatialIndex struct {
	klass cpSpatialIndexClass^
	bbfunc cpSpatialIndexBBFunc
	staticIndex cpSpatialIndex^
	dynamicIndex cpSpatialIndex^
}
cpSpaceHash struct 
cpSpaceHashInit fn(hash cpSpaceHash^, celldim f64, numcells i32, bbfunc cpSpatialIndexBBFunc, staticIndex cpSpatialIndex^)cpSpatialIndex^
cpSpaceHashNew fn(celldim f64, cells i32, bbfunc cpSpatialIndexBBFunc, staticIndex cpSpatialIndex^)cpSpatialIndex^
cpSpaceHashResize fn(hash cpSpaceHash^, celldim f64, numcells i32)
cpBBTree struct 
cpBBTreeAlloc fn()cpBBTree^
cpBBTreeInit fn(tree cpBBTree^, bbfunc cpSpatialIndexBBFunc, staticIndex cpSpatialIndex^)cpSpatialIndex^
cpBBTreeNew fn(bbfunc cpSpatialIndexBBFunc, staticIndex cpSpatialIndex^)cpSpatialIndex^
cpBBTreeOptimize fn(index cpSpatialIndex^)
cpBBTreeSetVelocityFunc fn(index cpSpatialIndex^, func cpBBTreeVelocityFunc)
cpSweep1D struct 
cpSweep1DAlloc fn()cpSweep1D^
cpSweep1DInit fn(sweep cpSweep1D^, bbfunc cpSpatialIndexBBFunc, staticIndex cpSpatialIndex^)cpSpatialIndex^
cpSweep1DNew fn(bbfunc cpSpatialIndexBBFunc, staticIndex cpSpatialIndex^)cpSpatialIndex^
cpSpatialIndexClass struct {
	destroy cpSpatialIndexDestroyImpl
	count cpSpatialIndexCountImpl
	each cpSpatialIndexEachImpl
	contains cpSpatialIndexContainsImpl
	insert cpSpatialIndexInsertImpl
	remove cpSpatialIndexRemoveImpl
	reindex cpSpatialIndexReindexImpl
	reindexObject cpSpatialIndexReindexObjectImpl
	reindexQuery cpSpatialIndexReindexQueryImpl
	query cpSpatialIndexQueryImpl
	segmentQuery cpSpatialIndexSegmentQueryImpl
}
cpSpatialIndexFree fn(index cpSpatialIndex^)
cpSpatialIndexCollideStatic fn(dynamicIndex cpSpatialIndex^, staticIndex cpSpatialIndex^, func cpSpatialIndexQueryFunc, data voidptr)
cpSpatialIndexDestroy fn(index cpSpatialIndex^)
cpSpatialIndexCount fn(index cpSpatialIndex^)i32
cpSpatialIndexEach fn(index cpSpatialIndex^, func cpSpatialIndexIteratorFunc, data voidptr)
cpSpatialIndexContains fn(index cpSpatialIndex^, obj voidptr, hashid cpHashValue)u8
cpSpatialIndexInsert fn(index cpSpatialIndex^, obj voidptr, hashid cpHashValue)
cpSpatialIndexRemove fn(index cpSpatialIndex^, obj voidptr, hashid cpHashValue)
cpSpatialIndexReindex fn(index cpSpatialIndex^)
cpSpatialIndexReindexObject fn(index cpSpatialIndex^, obj voidptr, hashid cpHashValue)
cpSpatialIndexQuery fn(index cpSpatialIndex^, obj voidptr, bb cpBB, func cpSpatialIndexQueryFunc, data voidptr)
cpSpatialIndexSegmentQuery fn(index cpSpatialIndex^, obj voidptr, a Vec2f64, b Vec2f64, t_exit f64, func cpSpatialIndexSegmentQueryFunc, data voidptr)
cpSpatialIndexReindexQuery fn(index cpSpatialIndex^, func cpSpatialIndexQueryFunc, data voidptr)
cpArbiterGetRestitution fn(arb cpArbiter^)f64
cpArbiterSetRestitution fn(arb cpArbiter^, restitution f64)
cpArbiterGetFriction fn(arb cpArbiter^)f64
cpArbiterSetFriction fn(arb cpArbiter^, friction f64)
cpArbiterGetSurfaceVelocity fn(arb cpArbiter^)Vec2f64
cpArbiterSetSurfaceVelocity fn(arb cpArbiter^, vr Vec2f64)
cpArbiterGetUserData fn(arb cpArbiter^)cpDataPointer
cpArbiterSetUserData fn(arb cpArbiter^, userData cpDataPointer)
cpArbiterTotalImpulse fn(arb cpArbiter^)Vec2f64
cpArbiterTotalKE fn(arb cpArbiter^)f64
cpArbiterIgnore fn(arb cpArbiter^)u8
cpArbiterGetShapes fn(arb cpArbiter^, a cpShape^^, b cpShape^^)
cpArbiterGetBodies fn(arb cpArbiter^, a cpBody^^, b cpBody^^)
cpContactPoint struct {
		pointA Vec2f64
		pointB Vec2f64
		distance f64
} 
cpContactPointSet struct {
	count i32
	normal Vec2f64
	points cpContactPoint[2]
}
cpArbiterGetContactPointSet fn(arb cpArbiter^)cpContactPointSet
cpArbiterSetContactPointSet fn(arb cpArbiter^, set cpContactPointSet^)
cpArbiterIsFirstContact fn(arb cpArbiter^)u8
cpArbiterIsRemoval fn(arb cpArbiter^)u8
cpArbiterGetCount fn(arb cpArbiter^)i32
cpArbiterGetNormal fn(arb cpArbiter^)Vec2f64
cpArbiterGetPointA fn(arb cpArbiter^, i i32)Vec2f64
cpArbiterGetPointB fn(arb cpArbiter^, i i32)Vec2f64
cpArbiterGetDepth fn(arb cpArbiter^, i i32)f64
cpArbiterCallWildcardBeginA fn(arb cpArbiter^, space cpSpace^)u8
cpArbiterCallWildcardBeginB fn(arb cpArbiter^, space cpSpace^)u8
cpArbiterCallWildcardPreSolveA fn(arb cpArbiter^, space cpSpace^)u8
cpArbiterCallWildcardPreSolveB fn(arb cpArbiter^, space cpSpace^)u8
cpArbiterCallWildcardPostSolveA fn(arb cpArbiter^, space cpSpace^)
cpArbiterCallWildcardPostSolveB fn(arb cpArbiter^, space cpSpace^)
cpArbiterCallWildcardSeparateA fn(arb cpArbiter^, space cpSpace^)
cpArbiterCallWildcardSeparateB fn(arb cpArbiter^, space cpSpace^)
cpBodyType enum {
	CP_BODY_TYPE_DYNAMIC
	CP_BODY_TYPE_KINEMATIC
	CP_BODY_TYPE_STATIC
}
cpBodyAlloc fn()cpBody^
cpBodyInit fn(body cpBody^, mass f64, moment f64)cpBody^
cpBodyNew fn(mass f64, moment f64)cpBody^
cpBodyNewKinematic fn()cpBody^
cpBodyNewStatic fn()cpBody^
cpBodyDestroy fn(body cpBody^)
cpBodyFree fn(body cpBody^)
cpBodyActivate fn(body cpBody^)
cpBodyActivateStatic fn(body cpBody^, filter cpShape^)
cpBodySleep fn(body cpBody^)
cpBodySleepWithGroup fn(body cpBody^, group cpBody^)
cpBodyIsSleeping fn(body cpBody^)u8
cpBodyGetType fn(body cpBody^)cpBodyType
cpBodySetType fn(body cpBody^, type cpBodyType)
cpBodyGetSpace fn(body cpBody^)cpSpace^
cpBodyGetMass fn(body cpBody^)f64
cpBodySetMass fn(body cpBody^, m f64)
cpBodyGetMoment fn(body cpBody^)f64
cpBodySetMoment fn(body cpBody^, i f64)
cpBodyGetPosition fn(body cpBody^)Vec2f64
cpBodySetPosition fn(body cpBody^, pos Vec2f64)
cpBodyGetCenterOfGravity fn(body cpBody^)Vec2f64
cpBodySetCenterOfGravity fn(body cpBody^, cog Vec2f64)
cpBodyGetVelocity fn(body cpBody^)Vec2f64
cpBodySetVelocity fn(body cpBody^, velocity Vec2f64)
cpBodyGetForce fn(body cpBody^)Vec2f64
cpBodySetForce fn(body cpBody^, force Vec2f64)
cpBodyGetAngle fn(body cpBody^)f64
cpBodySetAngle fn(body cpBody^, a f64)
cpBodyGetAngularVelocity fn(body cpBody^)f64
cpBodySetAngularVelocity fn(body cpBody^, angularVelocity f64)
cpBodyGetTorque fn(body cpBody^)f64
cpBodySetTorque fn(body cpBody^, torque f64)
cpBodyGetRotation fn(body cpBody^)Vec2f64
cpBodyGetUserData fn(body cpBody^)cpDataPointer
cpBodySetUserData fn(body cpBody^, userData cpDataPointer)
cpBodySetVelocityUpdateFunc fn(body cpBody^, velocityFunc cpBodyVelocityFunc)
cpBodySetPositionUpdateFunc fn(body cpBody^, positionFunc cpBodyPositionFunc)
cpBodyUpdateVelocity fn(body cpBody^, gravity Vec2f64, damping f64, dt f64)
cpBodyUpdatePosition fn(body cpBody^, dt f64)
cpBodyLocalToWorld fn(body cpBody^, point Vec2f64)Vec2f64
cpBodyWorldToLocal fn(body cpBody^, point Vec2f64)Vec2f64
cpBodyApplyForceAtWorldPoint fn(body cpBody^, force Vec2f64, point Vec2f64)
cpBodyApplyForceAtLocalPoint fn(body cpBody^, force Vec2f64, point Vec2f64)
cpBodyApplyImpulseAtWorldPoint fn(body cpBody^, impulse Vec2f64, point Vec2f64)
cpBodyApplyImpulseAtLocalPoint fn(body cpBody^, impulse Vec2f64, point Vec2f64)
cpBodyGetVelocityAtWorldPoint fn(body cpBody^, point Vec2f64)Vec2f64
cpBodyGetVelocityAtLocalPoint fn(body cpBody^, point Vec2f64)Vec2f64
cpBodyKineticEnergy fn(body cpBody^)f64
cpBodyEachShape fn(body cpBody^, func cpBodyShapeIteratorFunc, data voidptr)
cpBodyEachConstraint fn(body cpBody^, func cpBodyConstraintIteratorFunc, data voidptr)
cpBodyEachArbiter fn(body cpBody^, func cpBodyArbiterIteratorFunc, data voidptr)
cpPointQueryInfo struct {
	shape cpShape^
	point Vec2f64
	distance f64
	gradient Vec2f64
}
cpSegmentQueryInfo struct {
	shape cpShape^
	point Vec2f64
	normal Vec2f64
	alpha f64
}
cpShapeFilter struct {
	group cpGroup
	categories cpBitmask
	mask cpBitmask
}
cpShapeFilterNew fn(group cpGroup, categories cpBitmask, mask cpBitmask)cpShapeFilter
cpShapeDestroy fn(shape cpShape^)
cpShapeFree fn(shape cpShape^)
cpShapeCacheBB fn(shape cpShape^)cpBB
cpShapeUpdate fn(shape cpShape^, transform cpTransform)cpBB
cpShapePointQuery fn(shape cpShape^, p Vec2f64, out cpPointQueryInfo^)f64
cpShapeSegmentQuery fn(shape cpShape^, a Vec2f64, b Vec2f64, radius f64, info cpSegmentQueryInfo^)u8
cpShapesCollide fn(a cpShape^, b cpShape^)cpContactPointSet
cpShapeGetSpace fn(shape cpShape^)cpSpace^
cpShapeGetBody fn(shape cpShape^)cpBody^
cpShapeSetBody fn(shape cpShape^, body cpBody^)
cpShapeGetMass fn(shape cpShape^)f64
cpShapeSetMass fn(shape cpShape^, mass f64)
cpShapeGetDensity fn(shape cpShape^)f64
cpShapeSetDensity fn(shape cpShape^, density f64)
cpShapeGetMoment fn(shape cpShape^)f64
cpShapeGetArea fn(shape cpShape^)f64
cpShapeGetCenterOfGravity fn(shape cpShape^)Vec2f64
cpShapeGetBB fn(shape cpShape^)cpBB
cpShapeGetSensor fn(shape cpShape^)u8
cpShapeSetSensor fn(shape cpShape^, sensor u8)
cpShapeGetElasticity fn(shape cpShape^)f64
cpShapeSetElasticity fn(shape cpShape^, elasticity f64)
cpShapeGetFriction fn(shape cpShape^)f64
cpShapeSetFriction fn(shape cpShape^, friction f64)
cpShapeGetSurfaceVelocity fn(shape cpShape^)Vec2f64
cpShapeSetSurfaceVelocity fn(shape cpShape^, surfaceVelocity Vec2f64)
cpShapeGetUserData fn(shape cpShape^)cpDataPointer
cpShapeSetUserData fn(shape cpShape^, userData cpDataPointer)
cpShapeGetCollisionType fn(shape cpShape^)cpCollisionType
cpShapeSetCollisionType fn(shape cpShape^, collisionType cpCollisionType)
cpShapeGetFilter fn(shape cpShape^)cpShapeFilter
cpShapeSetFilter fn(shape cpShape^, filter cpShapeFilter)
cpCircleShapeAlloc fn()cpCircleShape^
cpCircleShapeInit fn(circle cpCircleShape^, body cpBody^, radius f64, offset Vec2f64)cpCircleShape^
cpCircleShapeNew fn(body cpBody^, radius f64, offset Vec2f64)cpShape^
cpCircleShapeGetOffset fn(shape cpShape^)Vec2f64
cpCircleShapeGetRadius fn(shape cpShape^)f64
cpSegmentShapeAlloc fn()cpSegmentShape^
cpSegmentShapeInit fn(seg cpSegmentShape^, body cpBody^, a Vec2f64, b Vec2f64, radius f64)cpSegmentShape^
cpSegmentShapeNew fn(body cpBody^, a Vec2f64, b Vec2f64, radius f64)cpShape^
cpSegmentShapeSetNeighbors fn(shape cpShape^, prev Vec2f64, next Vec2f64)
cpSegmentShapeGetA fn(shape cpShape^)Vec2f64
cpSegmentShapeGetB fn(shape cpShape^)Vec2f64
cpSegmentShapeGetNormal fn(shape cpShape^)Vec2f64
cpSegmentShapeGetRadius fn(shape cpShape^)f64
cpPolyShapeAlloc fn()cpPolyShape^
cpPolyShapeInit fn(poly cpPolyShape^, body cpBody^, count i32, verts Vec2f64^, transform cpTransform, radius f64)cpPolyShape^
cpPolyShapeInitRaw fn(poly cpPolyShape^, body cpBody^, count i32, verts Vec2f64^, radius f64)cpPolyShape^
cpPolyShapeNew fn(body cpBody^, count i32, verts Vec2f64^, transform cpTransform, radius f64)cpShape^
cpPolyShapeNewRaw fn(body cpBody^, count i32, verts Vec2f64^, radius f64)cpShape^
cpBoxShapeInit fn(poly cpPolyShape^, body cpBody^, width f64, height f64, radius f64)cpPolyShape^
cpBoxShapeInit2 fn(poly cpPolyShape^, body cpBody^, box cpBB, radius f64)cpPolyShape^
cpBoxShapeNew fn(body cpBody^, width f64, height f64, radius f64)cpShape^
cpBoxShapeNew2 fn(body cpBody^, box cpBB, radius f64)cpShape^
cpPolyShapeGetCount fn(shape cpShape^)i32
cpPolyShapeGetVert fn(shape cpShape^, index i32)Vec2f64
cpPolyShapeGetRadius fn(shape cpShape^)f64
cpConstraintDestroy fn(constraint cpConstraint^)
cpConstraintFree fn(constraint cpConstraint^)
cpConstraintGetSpace fn(constraint cpConstraint^)cpSpace^
cpConstraintGetBodyA fn(constraint cpConstraint^)cpBody^
cpConstraintGetBodyB fn(constraint cpConstraint^)cpBody^
cpConstraintGetMaxForce fn(constraint cpConstraint^)f64
cpConstraintSetMaxForce fn(constraint cpConstraint^, maxForce f64)
cpConstraintGetErrorBias fn(constraint cpConstraint^)f64
cpConstraintSetErrorBias fn(constraint cpConstraint^, errorBias f64)
cpConstraintGetMaxBias fn(constraint cpConstraint^)f64
cpConstraintSetMaxBias fn(constraint cpConstraint^, maxBias f64)
cpConstraintGetCollideBodies fn(constraint cpConstraint^)u8
cpConstraintSetCollideBodies fn(constraint cpConstraint^, collideBodies u8)
cpConstraintGetPreSolveFunc fn(constraint cpConstraint^)cpConstraintPreSolveFunc
cpConstraintSetPreSolveFunc fn(constraint cpConstraint^, preSolveFunc cpConstraintPreSolveFunc)
cpConstraintGetPostSolveFunc fn(constraint cpConstraint^)cpConstraintPostSolveFunc
cpConstraintSetPostSolveFunc fn(constraint cpConstraint^, postSolveFunc cpConstraintPostSolveFunc)
cpConstraintGetUserData fn(constraint cpConstraint^)cpDataPointer
cpConstraintSetUserData fn(constraint cpConstraint^, userData cpDataPointer)
cpConstraintGetImpulse fn(constraint cpConstraint^)f64
cpConstraintIsPinJoint fn(constraint cpConstraint^)u8
cpPinJointAlloc fn()cpPinJoint^
cpPinJointInit fn(joint cpPinJoint^, a cpBody^, b cpBody^, anchorA Vec2f64, anchorB Vec2f64)cpPinJoint^
cpPinJointNew fn(a cpBody^, b cpBody^, anchorA Vec2f64, anchorB Vec2f64)cpConstraint^
cpPinJointGetAnchorA fn(constraint cpConstraint^)Vec2f64
cpPinJointSetAnchorA fn(constraint cpConstraint^, anchorA Vec2f64)
cpPinJointGetAnchorB fn(constraint cpConstraint^)Vec2f64
cpPinJointSetAnchorB fn(constraint cpConstraint^, anchorB Vec2f64)
cpPinJointGetDist fn(constraint cpConstraint^)f64
cpPinJointSetDist fn(constraint cpConstraint^, dist f64)
cpConstraintIsSlideJoint fn(constraint cpConstraint^)u8
cpSlideJointAlloc fn()cpSlideJoint^
cpSlideJointInit fn(joint cpSlideJoint^, a cpBody^, b cpBody^, anchorA Vec2f64, anchorB Vec2f64, min f64, max f64)cpSlideJoint^
cpSlideJointNew fn(a cpBody^, b cpBody^, anchorA Vec2f64, anchorB Vec2f64, min f64, max f64)cpConstraint^
cpSlideJointGetAnchorA fn(constraint cpConstraint^)Vec2f64
cpSlideJointSetAnchorA fn(constraint cpConstraint^, anchorA Vec2f64)
cpSlideJointGetAnchorB fn(constraint cpConstraint^)Vec2f64
cpSlideJointSetAnchorB fn(constraint cpConstraint^, anchorB Vec2f64)
cpSlideJointGetMin fn(constraint cpConstraint^)f64
cpSlideJointSetMin fn(constraint cpConstraint^, min f64)
cpSlideJointGetMax fn(constraint cpConstraint^)f64
cpSlideJointSetMax fn(constraint cpConstraint^, max f64)
cpConstraintIsPivotJoint fn(constraint cpConstraint^)u8
cpPivotJointAlloc fn()cpPivotJoint^
cpPivotJointInit fn(joint cpPivotJoint^, a cpBody^, b cpBody^, anchorA Vec2f64, anchorB Vec2f64)cpPivotJoint^
cpPivotJointNew fn(a cpBody^, b cpBody^, pivot Vec2f64)cpConstraint^
cpPivotJointNew2 fn(a cpBody^, b cpBody^, anchorA Vec2f64, anchorB Vec2f64)cpConstraint^
cpPivotJointGetAnchorA fn(constraint cpConstraint^)Vec2f64
cpPivotJointSetAnchorA fn(constraint cpConstraint^, anchorA Vec2f64)
cpPivotJointGetAnchorB fn(constraint cpConstraint^)Vec2f64
cpPivotJointSetAnchorB fn(constraint cpConstraint^, anchorB Vec2f64)
cpConstraintIsGrooveJoint fn(constraint cpConstraint^)u8
cpGrooveJointAlloc fn()cpGrooveJoint^
cpGrooveJointInit fn(joint cpGrooveJoint^, a cpBody^, b cpBody^, groove_a Vec2f64, groove_b Vec2f64, anchorB Vec2f64)cpGrooveJoint^
cpGrooveJointNew fn(a cpBody^, b cpBody^, groove_a Vec2f64, groove_b Vec2f64, anchorB Vec2f64)cpConstraint^
cpGrooveJointGetGrooveA fn(constraint cpConstraint^)Vec2f64
cpGrooveJointSetGrooveA fn(constraint cpConstraint^, grooveA Vec2f64)
cpGrooveJointGetGrooveB fn(constraint cpConstraint^)Vec2f64
cpGrooveJointSetGrooveB fn(constraint cpConstraint^, grooveB Vec2f64)
cpGrooveJointGetAnchorB fn(constraint cpConstraint^)Vec2f64
cpGrooveJointSetAnchorB fn(constraint cpConstraint^, anchorB Vec2f64)
cpConstraintIsDampedSpring fn(constraint cpConstraint^)u8
cpDampedSpringAlloc fn()cpDampedSpring^
cpDampedSpringInit fn(joint cpDampedSpring^, a cpBody^, b cpBody^, anchorA Vec2f64, anchorB Vec2f64, restLength f64, stiffness f64, damping f64)cpDampedSpring^
cpDampedSpringNew fn(a cpBody^, b cpBody^, anchorA Vec2f64, anchorB Vec2f64, restLength f64, stiffness f64, damping f64)cpConstraint^
cpDampedSpringGetAnchorA fn(constraint cpConstraint^)Vec2f64
cpDampedSpringSetAnchorA fn(constraint cpConstraint^, anchorA Vec2f64)
cpDampedSpringGetAnchorB fn(constraint cpConstraint^)Vec2f64
cpDampedSpringSetAnchorB fn(constraint cpConstraint^, anchorB Vec2f64)
cpDampedSpringGetRestLength fn(constraint cpConstraint^)f64
cpDampedSpringSetRestLength fn(constraint cpConstraint^, restLength f64)
cpDampedSpringGetStiffness fn(constraint cpConstraint^)f64
cpDampedSpringSetStiffness fn(constraint cpConstraint^, stiffness f64)
cpDampedSpringGetDamping fn(constraint cpConstraint^)f64
cpDampedSpringSetDamping fn(constraint cpConstraint^, damping f64)
cpDampedSpringGetSpringForceFunc fn(constraint cpConstraint^)cpDampedSpringForceFunc
cpDampedSpringSetSpringForceFunc fn(constraint cpConstraint^, springForceFunc cpDampedSpringForceFunc)
cpConstraintIsDampedRotarySpring fn(constraint cpConstraint^)u8
cpDampedRotarySpringAlloc fn()cpDampedRotarySpring^
cpDampedRotarySpringInit fn(joint cpDampedRotarySpring^, a cpBody^, b cpBody^, restAngle f64, stiffness f64, damping f64)cpDampedRotarySpring^
cpDampedRotarySpringNew fn(a cpBody^, b cpBody^, restAngle f64, stiffness f64, damping f64)cpConstraint^
cpDampedRotarySpringGetRestAngle fn(constraint cpConstraint^)f64
cpDampedRotarySpringSetRestAngle fn(constraint cpConstraint^, restAngle f64)
cpDampedRotarySpringGetStiffness fn(constraint cpConstraint^)f64
cpDampedRotarySpringSetStiffness fn(constraint cpConstraint^, stiffness f64)
cpDampedRotarySpringGetDamping fn(constraint cpConstraint^)f64
cpDampedRotarySpringSetDamping fn(constraint cpConstraint^, damping f64)
cpDampedRotarySpringGetSpringTorqueFunc fn(constraint cpConstraint^)cpDampedRotarySpringTorqueFunc
cpDampedRotarySpringSetSpringTorqueFunc fn(constraint cpConstraint^, springTorqueFunc cpDampedRotarySpringTorqueFunc)
cpConstraintIsRotaryLimitJoint fn(constraint cpConstraint^)u8
cpRotaryLimitJointAlloc fn()cpRotaryLimitJoint^
cpRotaryLimitJointInit fn(joint cpRotaryLimitJoint^, a cpBody^, b cpBody^, min f64, max f64)cpRotaryLimitJoint^
cpRotaryLimitJointNew fn(a cpBody^, b cpBody^, min f64, max f64)cpConstraint^
cpRotaryLimitJointGetMin fn(constraint cpConstraint^)f64
cpRotaryLimitJointSetMin fn(constraint cpConstraint^, min f64)
cpRotaryLimitJointGetMax fn(constraint cpConstraint^)f64
cpRotaryLimitJointSetMax fn(constraint cpConstraint^, max f64)
cpConstraintIsRatchetJoint fn(constraint cpConstraint^)u8
cpRatchetJointAlloc fn()cpRatchetJoint^
cpRatchetJointInit fn(joint cpRatchetJoint^, a cpBody^, b cpBody^, phase f64, ratchet f64)cpRatchetJoint^
cpRatchetJointNew fn(a cpBody^, b cpBody^, phase f64, ratchet f64)cpConstraint^
cpRatchetJointGetAngle fn(constraint cpConstraint^)f64
cpRatchetJointSetAngle fn(constraint cpConstraint^, angle f64)
cpRatchetJointGetPhase fn(constraint cpConstraint^)f64
cpRatchetJointSetPhase fn(constraint cpConstraint^, phase f64)
cpRatchetJointGetRatchet fn(constraint cpConstraint^)f64
cpRatchetJointSetRatchet fn(constraint cpConstraint^, ratchet f64)
cpConstraintIsGearJoint fn(constraint cpConstraint^)u8
cpGearJointAlloc fn()cpGearJoint^
cpGearJointInit fn(joint cpGearJoint^, a cpBody^, b cpBody^, phase f64, ratio f64)cpGearJoint^
cpGearJointNew fn(a cpBody^, b cpBody^, phase f64, ratio f64)cpConstraint^
cpGearJointGetPhase fn(constraint cpConstraint^)f64
cpGearJointSetPhase fn(constraint cpConstraint^, phase f64)
cpGearJointGetRatio fn(constraint cpConstraint^)f64
cpGearJointSetRatio fn(constraint cpConstraint^, ratio f64)
cpSimpleMotor struct 
cpConstraintIsSimpleMotor fn(constraint cpConstraint^)u8
cpSimpleMotorAlloc fn()cpSimpleMotor^
cpSimpleMotorInit fn(joint cpSimpleMotor^, a cpBody^, b cpBody^, rate f64)cpSimpleMotor^
cpSimpleMotorNew fn(a cpBody^, b cpBody^, rate f64)cpConstraint^
cpSimpleMotorGetRate fn(constraint cpConstraint^)f64
cpSimpleMotorSetRate fn(constraint cpConstraint^, rate f64)
cpCollisionHandler struct {
	typeA cpCollisionType
	typeB cpCollisionType
	beginFunc cpCollisionBeginFunc
	preSolveFunc cpCollisionPreSolveFunc
	postSolveFunc cpCollisionPostSolveFunc
	separateFunc cpCollisionSeparateFunc
	userData cpDataPointer
}
cpSpaceAlloc fn()cpSpace^
cpSpaceInit fn(space cpSpace^)cpSpace^
cpSpaceNew fn()cpSpace^
cpSpaceDestroy fn(space cpSpace^)
cpSpaceFree fn(space cpSpace^)
cpSpaceGetIterations fn(space cpSpace^)i32
cpSpaceSetIterations fn(space cpSpace^, iterations i32)
cpSpaceGetGravity fn(space cpSpace^)Vec2f64
cpSpaceSetGravity fn(space cpSpace^, gravity Vec2f64)
cpSpaceGetDamping fn(space cpSpace^)f64
cpSpaceSetDamping fn(space cpSpace^, damping f64)
cpSpaceGetIdleSpeedThreshold fn(space cpSpace^)f64
cpSpaceSetIdleSpeedThreshold fn(space cpSpace^, idleSpeedThreshold f64)
cpSpaceGetSleepTimeThreshold fn(space cpSpace^)f64
cpSpaceSetSleepTimeThreshold fn(space cpSpace^, sleepTimeThreshold f64)
cpSpaceGetCollisionSlop fn(space cpSpace^)f64
cpSpaceSetCollisionSlop fn(space cpSpace^, collisionSlop f64)
cpSpaceGetCollisionBias fn(space cpSpace^)f64
cpSpaceSetCollisionBias fn(space cpSpace^, collisionBias f64)
cpSpaceGetCollisionPersistence fn(space cpSpace^)cpTimestamp
cpSpaceSetCollisionPersistence fn(space cpSpace^, collisionPersistence cpTimestamp)
cpSpaceGetUserData fn(space cpSpace^)cpDataPointer
cpSpaceSetUserData fn(space cpSpace^, userData cpDataPointer)
cpSpaceGetStaticBody fn(space cpSpace^)cpBody^
cpSpaceGetCurrentTimeStep fn(space cpSpace^)f64
cpSpaceIsLocked fn(space cpSpace^)u8
cpSpaceAddDefaultCollisionHandler fn(space cpSpace^)cpCollisionHandler^
cpSpaceAddCollisionHandler fn(space cpSpace^, a cpCollisionType, b cpCollisionType)cpCollisionHandler^
cpSpaceAddWildcardHandler fn(space cpSpace^, type cpCollisionType)cpCollisionHandler^
cpSpaceAddShape fn(space cpSpace^, shape cpShape^)cpShape^
cpSpaceAddBody fn(space cpSpace^, body cpBody^)cpBody^
cpSpaceAddConstraint fn(space cpSpace^, constraint cpConstraint^)cpConstraint^
cpSpaceRemoveShape fn(space cpSpace^, shape cpShape^)
cpSpaceRemoveBody fn(space cpSpace^, body cpBody^)
cpSpaceRemoveConstraint fn(space cpSpace^, constraint cpConstraint^)
cpSpaceContainsShape fn(space cpSpace^, shape cpShape^)u8
cpSpaceContainsBody fn(space cpSpace^, body cpBody^)u8
cpSpaceContainsConstraint fn(space cpSpace^, constraint cpConstraint^)u8
cpSpaceAddPostStepCallback fn(space cpSpace^, func cpPostStepFunc, key voidptr, data voidptr)u8
cpSpacePointQuery fn(space cpSpace^, point Vec2f64, maxDistance f64, filter cpShapeFilter, func cpSpacePointQueryFunc, data voidptr)
cpSpacePointQueryNearest fn(space cpSpace^, point Vec2f64, maxDistance f64, filter cpShapeFilter, out cpPointQueryInfo^)cpShape^
cpSpaceSegmentQuery fn(space cpSpace^, start Vec2f64, end Vec2f64, radius f64, filter cpShapeFilter, func cpSpaceSegmentQueryFunc, data voidptr)
cpSpaceSegmentQueryFirst fn(space cpSpace^, start Vec2f64, end Vec2f64, radius f64, filter cpShapeFilter, out cpSegmentQueryInfo^)cpShape^
cpSpaceBBQuery fn(space cpSpace^, bb cpBB, filter cpShapeFilter, func cpSpaceBBQueryFunc, data voidptr)
cpSpaceShapeQuery fn(space cpSpace^, shape cpShape^, func cpSpaceShapeQueryFunc, data voidptr)u8
cpSpaceEachBody fn(space cpSpace^, func cpSpaceBodyIteratorFunc, data voidptr)
cpSpaceEachShape fn(space cpSpace^, func cpSpaceShapeIteratorFunc, data voidptr)
cpSpaceEachConstraint fn(space cpSpace^, func cpSpaceConstraintIteratorFunc, data voidptr)
cpSpaceReindexStatic fn(space cpSpace^)
cpSpaceReindexShape fn(space cpSpace^, shape cpShape^)
cpSpaceReindexShapesForBody fn(space cpSpace^, body cpBody^)
cpSpaceUseSpatialHash fn(space cpSpace^, dim f64, count i32)
cpSpaceStep fn(space cpSpace^, dt f64)
cpSpaceDebugColor struct {
	r f32
	g f32
	b f32
	a f32
}
cpSpaceDebugDrawFlags enum {
	CP_SPACE_DEBUG_DRAW_SHAPES = 1
	CP_SPACE_DEBUG_DRAW_CONSTRAINTS = 2
	CP_SPACE_DEBUG_DRAW_COLLISION_POINTS = 4
}
cpSpaceDebugDrawOptions struct {
	drawCircle cpSpaceDebugDrawCircleImpl
	drawSegment cpSpaceDebugDrawSegmentImpl
	drawFatSegment cpSpaceDebugDrawFatSegmentImpl
	drawPolygon cpSpaceDebugDrawPolygonImpl
	drawDot cpSpaceDebugDrawDotImpl
	flags cpSpaceDebugDrawFlags
	shapeOutlineColor cpSpaceDebugColor
	colorForShape cpSpaceDebugDrawColorForShapeImpl
	constraintColor cpSpaceDebugColor
	collisionPointColor cpSpaceDebugColor
	data cpDataPointer
}
cpSpaceDebugDraw fn(space cpSpace^, options cpSpaceDebugDrawOptions^)
cpMomentForCircle fn(m f64, r1 f64, r2 f64, offset Vec2f64)f64
cpAreaForCircle fn(r1 f64, r2 f64)f64
cpMomentForSegment fn(m f64, a Vec2f64, b Vec2f64, radius f64)f64
cpAreaForSegment fn(a Vec2f64, b Vec2f64, radius f64)f64
cpMomentForPoly fn(m f64, count i32, verts Vec2f64^, offset Vec2f64, radius f64)f64
cpAreaForPoly fn(count i32, verts Vec2f64^, radius f64)f64
cpCentroidForPoly fn(count i32, verts Vec2f64^)Vec2f64
cpMomentForBox fn(m f64, width f64, height f64)f64
cpMomentForBox2 fn(m f64, box cpBB)f64
cpConvexHull fn(count i32, verts Vec2f64^, result Vec2f64^, first i32^, tol f64)i32
cpClosetPointOnSegment fn(p Vec2f64, a Vec2f64, b Vec2f64)Vec2f64

}
